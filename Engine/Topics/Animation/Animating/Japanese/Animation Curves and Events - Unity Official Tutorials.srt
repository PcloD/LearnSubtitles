1
00:00:00,497 --> 00:00:02,367
アニメーションクリップに用意されている

2
00:00:02,367 --> 00:00:05,205
プロパティの中には Curves と Events というものがあります

3
00:00:05,205 --> 00:00:06,681
これらプロパティは Project ビューで

4
00:00:06,681 --> 00:00:09,194
モデルを選択した状態でアニメーションのタブの

5
00:00:09,194 --> 00:00:11,194
最下部に表示されます

6
00:00:11,943 --> 00:00:13,790
このうち Curves は  時間経過に伴う 

7
00:00:13,790 --> 00:00:15,455
アニメーションの値調整に使います

8
00:00:15,872 --> 00:00:18,647
たとえばジャンプのアニメーションならば

9
00:00:18,647 --> 00:00:21,315
カーブを用いて高さを定義できます

10
00:00:21,796 --> 00:00:23,796
この高さの値をジャンプ時に

11
00:00:23,796 --> 00:00:25,796
モデルの胴体の高さと同じになるように

12
00:00:25,796 --> 00:00:27,020
セットできます

13
00:00:27,423 --> 00:00:30,046
この値はその後 スクリプトで読み込んで

14
00:00:30,046 --> 00:00:33,029
モデルのコライダーの大きさ調整に利用できます

15
00:00:34,054 --> 00:00:36,428
こうするとモデルのコライダーが正しく

16
00:00:36,428 --> 00:00:38,428
モデルの動作とマッチするようになるわけです

17
00:00:39,135 --> 00:00:41,135
それではアニメーションクリップにアニメーションカーブを

18
00:00:41,135 --> 00:00:43,135
追加する方法を見ていきましょう

19
00:00:43,911 --> 00:00:45,911
まず Curves ドロップダウンを展開し

20
00:00:46,411 --> 00:00:49,231
+ アイコンをクリックして新規カーブを追加します

21
00:00:50,334 --> 00:00:52,802
続いてカーブに名前をつけます

22
00:00:52,802 --> 00:00:54,802
この例では仮の名前で

23
00:00:54,802 --> 00:00:56,871
Jumpheight とでもしましょう

24
00:00:56,871 --> 00:00:58,871
このカーブ名は  カーブを使う

25
00:00:58,871 --> 00:01:01,610
アニメーターコントローラーに対し

26
00:01:01,610 --> 00:01:03,472
float パラメーターとして 

27
00:01:03,472 --> 00:01:05,472
追加しないとアクセスできません

28
00:01:06,621 --> 00:01:09,905
カーブを編集する方法は 2 種類あります

29
00:01:09,905 --> 00:01:11,434
まず  カーブ画像をクリックすると 

30
00:01:11,434 --> 00:01:13,144
Curve エディターが開きます

31
00:01:13,561 --> 00:01:15,798
これはカーブの微調整など

32
00:01:15,798 --> 00:01:17,603
精度が重要なときに便利な方法です

33
00:01:18,103 --> 00:01:20,103
Curve エディター上では線をダブルクリックすると

34
00:01:20,103 --> 00:01:22,103
キーフレームを作成できます

35
00:01:22,506 --> 00:01:24,836
作成したキーフレームはドラッグして

36
00:01:24,836 --> 00:01:26,574
目的の値に指定できます

37
00:01:27,074 --> 00:01:29,545
カーブはいつでもデフォルトの形状にリセット可能です

38
00:01:29,545 --> 00:01:32,028
その際は下部のカーブ形をクリックしてください

39
00:01:32,791 --> 00:01:35,123
カーブに値を追加するもう一つの方法は

40
00:01:35,123 --> 00:01:37,344
プレビューウィンドウの再生時指定線を

41
00:01:37,344 --> 00:01:39,344
目的の地点まで移動させるやり方です

42
00:01:40,010 --> 00:01:42,372
その後はカーブの左にあるボタンをクリックすれば

43
00:01:42,372 --> 00:01:45,541
その地点にキーフレームを追加できます

44
00:01:46,593 --> 00:01:48,705
そのボタンのさらに左にあるのは

45
00:01:48,705 --> 00:01:51,023
値フィールドで ここではキーフレームの値を確認したり

46
00:01:51,023 --> 00:01:52,447
指定したりできます

47
00:01:53,109 --> 00:01:55,750
名前の下に表示される左右ボタンと組み合わせれば

48
00:01:55,750 --> 00:01:57,610
キーフレーム間を移動しながら値を調整して

49
00:01:57,610 --> 00:01:59,513
いくことができます

50
00:01:59,513 --> 00:02:01,516
値の指定後は Unity 側で自動的に 

51
00:02:01,516 --> 00:02:03,516
カーブの形が滑らかにされます

52
00:02:04,196 --> 00:02:06,503
複数のクリップをブレンドしていてさらに

53
00:02:06,503 --> 00:02:08,572
各クリップが同一名のカーブを持っている

54
00:02:08,572 --> 00:02:10,710
場合にはブレンドの重み付けに応じて

55
00:02:10,710 --> 00:02:12,710
平均値が算出されます

56
00:02:13,320 --> 00:02:15,856
カーブの値をスクリプトで取得するときには

57
00:02:15,856 --> 00:02:17,759
Animator コンポーネントの

58
00:02:17,759 --> 00:02:19,440
GetFloat 関数を使います

59
00:02:20,107 --> 00:02:22,341
この関数はパラメーターとして

60
00:02:22,341 --> 00:02:25,466
カーブ名またはカーブ名のハッシュを取ります

61
00:02:25,966 --> 00:02:28,201
戻り値は関数が呼び出された時点での

62
00:02:28,201 --> 00:02:30,201
カーブの値になります

63
00:02:31,198 --> 00:02:34,019
GetFloat メソッド/ アニメーターから

64
00:02:34,019 --> 00:02:36,019
値を取得する方法

65
00:02:36,019 --> 00:02:38,255
または関連スクリプト利用方法については

66
00:02:38,255 --> 00:02:41,243
下記リンク先にあるアニメータースクリプティングのレッスンをご覧ください

67
00:02:42,882 --> 00:02:45,006
イベントを使うとアニメーションの途中で

68
00:02:45,006 --> 00:02:47,365
スクリプトから関数を呼び出す

69
00:02:47,365 --> 00:02:48,840
ことができます

70
00:02:49,865 --> 00:02:53,083
たとえばジャンプのアニメーションで

71
00:02:53,083 --> 00:02:56,114
モデルが着地した瞬間に音を鳴らしたいとします

72
00:02:56,849 --> 00:02:59,528
こういった動作はアニメーション中に

73
00:02:59,528 --> 00:03:01,528
モデルの足が地面に着くポイントにイベントを

74
00:03:01,528 --> 00:03:03,528
作ることで実現できます

75
00:03:04,235 --> 00:03:06,359
イベントを追加するにはまず Events 

76
00:03:06,359 --> 00:03:08,359
ドロップダウンを展開します

77
00:03:08,859 --> 00:03:10,859
その後はプレビューウィンドウの再生時指定線を

78
00:03:10,859 --> 00:03:13,026
目当ての時点まで移動させていき

79
00:03:13,026 --> 00:03:14,763
タイムライン左側にあるボタンを押して

80
00:03:14,763 --> 00:03:16,763
イベントを追加します

81
00:03:17,470 --> 00:03:18,997
これでイベントのプロパティを表示する

82
00:03:18,997 --> 00:03:20,997
ウィンドウが開きます

83
00:03:20,997 --> 00:03:22,776
最初は呼び出される

84
00:03:22,776 --> 00:03:24,224
関数の名前です

85
00:03:24,224 --> 00:03:26,224
この関数は  アニメーションを再生する

86
00:03:26,224 --> 00:03:28,224
アニメーターコンポーネントと同じ

87
00:03:28,224 --> 00:03:30,884
ゲームオブジェクトにアタッチされている

88
00:03:30,884 --> 00:03:32,608
スクリプト内に存在しなくてはなりません

89
00:03:33,205 --> 00:03:35,980
この例ではひとまず PlayLandingSound（着地時に音を再生）という

90
00:03:35,980 --> 00:03:39,059
関数を呼び出すスクリプトがあるとしましょう

91
00:03:39,559 --> 00:03:41,999
なので関数プロパティに PlayLandingSound と

92
00:03:41,999 --> 00:03:43,999
入力します

93
00:03:44,623 --> 00:03:46,623
次のプロパティは関数がパラメーターを取るとき

94
00:03:46,623 --> 00:03:48,456
に使用するためのものです

95
00:03:49,026 --> 00:03:51,534
関数の呼び出しに対していずれか 1 つが利用できます

96
00:03:52,200 --> 00:03:54,503
使えるパラメーターはイベントで呼び出される

97
00:03:54,503 --> 00:03:57,126
関数の種類によって変わります

98
00:03:57,928 --> 00:04:00,108
イベントを含むクリップを複数ブレンドしている場合

99
00:04:00,108 --> 00:04:01,705
イベントはすべて呼び出されます

100
00:04:01,705 --> 00:04:03,705
この点はよく覚えておきましょう

101
00:04:04,412 --> 00:04:06,093
イベントを使って着地時の効果音を 

102
00:04:06,093 --> 00:04:08,617
鳴らす場合などはその時点で再生中の

103
00:04:08,617 --> 00:04:10,172
効果音がないかどうかをチェックしてから

104
00:04:10,172 --> 00:04:12,172
次の効果音を鳴らすようにするなど

105
00:04:12,172 --> 00:04:14,033
再生制限をかけたほうが

106
00:04:14,033 --> 00:04:16,157
よいでしょう

107
00:04:16,157 --> 00:04:18,157
そうしないとおそらく

108
00:04:18,157 --> 00:04:19,813
同じ音の異なるバージョンが複数個重ねて

109
00:04:19,813 --> 00:04:21,813
再生されてしまうことになります

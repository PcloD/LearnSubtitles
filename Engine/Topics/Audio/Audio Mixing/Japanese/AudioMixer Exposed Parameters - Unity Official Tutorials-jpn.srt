1
00:00:00,635 --> 00:00:03,702
In Unity it's possible to directly control

2
00:00:03,702 --> 00:00:06,359
parameters of an audio mixer

3
00:00:06,359 --> 00:00:08,937
like levels and effects settings

4
00:00:08,937 --> 00:00:11,657
via script at run time.

5
00:00:11,657 --> 00:00:15,384
To set a single mixer parameter via script

6
00:00:15,384 --> 00:00:18,380
we'll use the SetFloat function.

7
00:00:18,380 --> 00:00:20,882
SetFloat has two parameters, 

8
00:00:20,882 --> 00:00:23,026
a string for the name of the exposed

9
00:00:23,026 --> 00:00:24,930
parameter we're going to be setting

10
00:00:24,930 --> 00:00:28,211
and a float for the value to set it to.

11
00:00:28,211 --> 00:00:32,696
SetFloat is called from an audio mixer.

12
00:00:32,696 --> 00:00:34,696
In order for a parameter to be controlled

13
00:00:34,696 --> 00:00:40,190
using SetFloat it has to be exposed to script control.

14
00:00:40,963 --> 00:00:44,190
First make sure that the parameter is visible in the inspector.

15
00:00:45,373 --> 00:00:50,120
Then in the inspector right click on the parameter name.

16
00:00:50,120 --> 00:00:53,947
Here we'll expose volume for the master group of master mixer.

17
00:00:55,983 --> 00:00:59,879
Right click and choose Expose To Script.

18
00:01:01,571 --> 00:01:04,948
When this is done you'll see a little arrow appear beside the name.

19
00:01:04,948 --> 00:01:08,026
You'll also notice that it's been added

20
00:01:08,026 --> 00:01:10,757
to our list of exposed parameters

21
00:01:10,757 --> 00:01:14,822
for the master mixer audio mixer asset.

22
00:01:14,822 --> 00:01:17,317
If we click on the list of exposed parameters

23
00:01:17,317 --> 00:01:20,276
we'll see two parameters that have already been exposed,

24
00:01:20,276 --> 00:01:23,809
Music Vol and SFX Vol which correspond to the volumes of

25
00:01:23,809 --> 00:01:25,809
the music group and the sound effects group

26
00:01:25,809 --> 00:01:27,096
of master mixer.

27
00:01:27,096 --> 00:01:30,848
And we have a third called My Exposed Param.

28
00:01:30,848 --> 00:01:32,848
My exposed param is our new parameter

29
00:01:32,848 --> 00:01:35,831
and we can see that it's the master volume.

30
00:01:36,475 --> 00:01:39,529
If we double click on it we can set it's name.

31
00:01:39,529 --> 00:01:41,529
The name that we choose is the

32
00:01:41,529 --> 00:01:43,964
string that we'll parse to SetFloat

33
00:01:43,964 --> 00:01:46,436
when setting the value via script.

34
00:01:46,436 --> 00:01:49,780
Here's one example of how we can use SetFloat,

35
00:01:49,780 --> 00:01:52,842
in this case to control the music volume

36
00:01:52,842 --> 00:01:56,523
and sound effects volume balance in our game.

37
00:01:56,965 --> 00:01:59,744
Here we have the Nightmares project which is available

38
00:01:59,744 --> 00:02:01,744
as a free download from the assets store.

39
00:02:02,273 --> 00:02:05,107
And we've added a simple pause menu with some

40
00:02:05,107 --> 00:02:07,621
audio options to it. Let's check it out.

41
00:02:13,069 --> 00:02:16,011
When we hit escape our pause menu comes up

42
00:02:16,492 --> 00:02:18,492
and here we can adjust the music volume,

43
00:02:20,550 --> 00:02:22,550
and the sound effects volume.

44
00:02:23,108 --> 00:02:26,820
Notice how the new values are reflected in the mixer.

45
00:02:34,128 --> 00:02:37,227
Now that we've seen how to expose parameters to script control

46
00:02:37,227 --> 00:02:39,951
let's look at setting their values via script.

47
00:02:41,595 --> 00:02:44,539
On our game object audio mixer control

48
00:02:44,539 --> 00:02:47,311
we have a script called Mix Levels.

49
00:02:47,311 --> 00:02:49,311
In our mix levels script we have

50
00:02:49,311 --> 00:02:51,311
the namespace declaration using

51
00:02:51,311 --> 00:02:53,311
UnityEngine.Audio

52
00:02:53,311 --> 00:02:55,513
And what this allows us to do is to access

53
00:02:55,513 --> 00:02:58,596
classes like audio mixer, which are members

54
00:02:58,596 --> 00:03:00,596
of UnityEngine.Audio.

55
00:03:00,596 --> 00:03:02,596
We also have a public variable

56
00:03:02,596 --> 00:03:06,251
of the audio mixer type called masterMixer.

57
00:03:06,251 --> 00:03:09,720
We have two public functions, SetSfxLvl,

58
00:03:09,720 --> 00:03:13,802
which takes a parameter of the type float called SfxLvl.

59
00:03:14,363 --> 00:03:18,672
And then in that function we're going to called the SetFloat function

60
00:03:18,672 --> 00:03:21,988
from master mixer and we're going to parse in our string

61
00:03:21,988 --> 00:03:25,342
SfxVol saying that's the parameter we want to address

62
00:03:25,342 --> 00:03:27,342
and we're going to parse in our floating

63
00:03:27,342 --> 00:03:31,546
point value SfxLvl, which is what the value is going to be set to.

64
00:03:31,546 --> 00:03:33,792
In our public function SetMusicLvl

65
00:03:33,792 --> 00:03:35,792
we're going to do the same thing, we're going to parse in

66
00:03:35,792 --> 00:03:39,168
our float musicLvl and we're going to use that to call

67
00:03:39,168 --> 00:03:42,241
SetFloat for masterMixer and parse in the string

68
00:03:42,241 --> 00:03:45,518
musicVol saying we want to address the musicVol exposed parameter

69
00:03:45,518 --> 00:03:47,518
and set the value

70
00:03:47,518 --> 00:03:49,518
using our float music Lvl.

71
00:03:49,906 --> 00:03:52,533
In the Unity editor we've dragged

72
00:03:52,533 --> 00:03:55,005
our master mixer audio mixer

73
00:03:55,005 --> 00:03:57,942
to our master mixer variable slot.

74
00:03:58,641 --> 00:04:02,183
In order to set the floating point values in mix levels

75
00:04:02,183 --> 00:04:04,506
we're using the UI system.

76
00:04:05,115 --> 00:04:08,645
Here in our menu canvas we've got two sliders,

77
00:04:08,645 --> 00:04:10,645
here's our effects slider.

78
00:04:10,645 --> 00:04:13,990
In the slider script of our effects slider

79
00:04:13,990 --> 00:04:17,690
we're choosing our audio mixer control

80
00:04:17,690 --> 00:04:19,690
from our list of objects in the scene

81
00:04:19,690 --> 00:04:22,864
with the audio mixer control game object selected

82
00:04:22,864 --> 00:04:25,828
we're going to address our mix level script

83
00:04:25,828 --> 00:04:28,927
and set SFX level within that

84
00:04:28,927 --> 00:04:33,148
to parse the value of the slider to SetFloat.

85
00:04:33,148 --> 00:04:35,148
For our music slider we've gone through the same

86
00:04:35,148 --> 00:04:38,130
process but in this case setting it to

87
00:04:38,130 --> 00:04:41,127
the float of SetMusicLvl.

88
00:04:41,632 --> 00:04:45,281
When working with exposed parameters it's important to note

89
00:04:45,281 --> 00:04:48,045
that exposing a parameter and setting it's value

90
00:04:48,045 --> 00:04:51,851
using SetFloat removes it from control

91
00:04:51,851 --> 00:04:54,799
of the audio mixer snapshot system.

92
00:04:55,252 --> 00:04:58,616
The audio mixer snapshot system allows us to recall the

93
00:04:58,616 --> 00:05:01,953
entire state of the mixer by toggling between

94
00:05:01,953 --> 00:05:03,953
one snapshot and another.

95
00:05:03,953 --> 00:05:07,346
It's possible to return a parameter to snapshot control

96
00:05:07,346 --> 00:05:09,825
using the ClearFloat function.

97
00:05:09,825 --> 00:05:13,408
ClearFloat is called from an audio mixer

98
00:05:13,408 --> 00:05:16,327
and takes a parameter of the type string,

99
00:05:16,327 --> 00:05:19,230
which specifies the parameter that we want to release

100
00:05:19,230 --> 00:05:22,065
from snapshot control on that mixer.

101
00:05:22,065 --> 00:05:24,065
For more information about snapshots and

102
00:05:24,065 --> 00:05:26,065
controlling them via script

103
00:05:26,065 --> 00:05:28,065
please see the information linked below.

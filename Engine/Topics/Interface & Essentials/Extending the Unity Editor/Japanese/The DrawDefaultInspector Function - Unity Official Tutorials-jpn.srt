1
00:00:00,278 --> 00:00:03,194
DrawDefaultInspector 関数はカスタムインスペクターのスクリプト内で

2
00:00:03,194 --> 00:00:06,053
簡単にデフォルトのインスペクターを作れる

3
00:00:06,053 --> 00:00:08,053
便利な関数です

4
00:00:09,317 --> 00:00:11,317
これはたとえばスクリプトのインスペクターの

5
00:00:11,317 --> 00:00:13,821
既存項目を変更するのではなく

6
00:00:13,821 --> 00:00:16,513
項目を追加したいだけの場合などに有用です

7
00:00:17,666 --> 00:00:19,845
それでは例を見てみましょう

8
00:00:19,845 --> 00:00:22,355
ここに SomeScript というスクリプトがあります

9
00:00:23,077 --> 00:00:25,976
このスクリプトには int の level

10
00:00:25,976 --> 00:00:27,783
float の health

11
00:00:27,783 --> 00:00:29,783
Vector3 の target があります

12
00:00:30,477 --> 00:00:34,180
もうひとつはエディター スクリプトの SomeScriptEditor です

13
00:00:34,555 --> 00:00:36,780
これは SomeScript コンポーネント用のカスタムインスペクターを

14
00:00:36,780 --> 00:00:38,780
作成するスクリプトです

15
00:00:39,391 --> 00:00:41,530
OnInspectorGUI メソッドが見当たりますが

16
00:00:41,530 --> 00:00:44,566
中身は空っぽです

17
00:00:45,330 --> 00:00:48,134
なおカスタムインスペクターの作成方法の詳細については

18
00:00:48,134 --> 00:00:51,176
下記リンク先にあるカスタムインスペクターのレッスンをご覧ください

19
00:00:52,148 --> 00:00:54,148
いま表示されているのは空っぽのゲームオブジェクトが

20
00:00:54,148 --> 00:00:56,328
配置された Unity のシーンです

21
00:00:56,328 --> 00:01:00,182
オブジェクトには SomeScript がアタッチされています

22
00:01:01,182 --> 00:01:03,836
しかし SomeScript には 3 個の 

23
00:01:03,836 --> 00:01:05,836
public 変数があるはずなのに

24
00:01:05,836 --> 00:01:08,930
インスペクターには何も表示されていませんね

25
00:01:08,930 --> 00:01:11,854
これはカスタムインスペクターが存在するものの

26
00:01:11,854 --> 00:01:14,762
GUI のコードが一切書かれていないためです

27
00:01:16,373 --> 00:01:18,718
では SomeScriptEditor に戻りましょう

28
00:01:18,718 --> 00:01:20,718
インスペクターに public 変数を表示する上で

29
00:01:20,718 --> 00:01:23,264
必要なコードをぜんぶ書くことも可能ではありますが

30
00:01:23,681 --> 00:01:27,014
メンテナンス性も悪く 労力もかかります

31
00:01:27,014 --> 00:01:29,472
特に既存のものと見た目を同じに

32
00:01:29,472 --> 00:01:31,472
したい場合はなおさらです

33
00:01:32,750 --> 00:01:36,167
なのでここでは  そんな苦労はやめて

34
00:01:36,167 --> 00:01:39,098
DrawDefaultInspector 関数を使います

35
00:01:39,959 --> 00:01:42,180
この関数は デフォルトのインスペクターフィールドを

36
00:01:42,180 --> 00:01:44,180
すべて作成しますが その後はカスタム要素を

37
00:01:44,180 --> 00:01:46,941
必要なだけ追加することもできます

38
00:01:48,052 --> 00:01:50,052
改めて Unity に戻ってみると...

39
00:01:50,052 --> 00:01:52,345
SomeScript のフィールドが正しく

40
00:01:52,345 --> 00:01:54,345
インスペクターに表示されているのが確認できます

41
00:01:54,345 --> 00:01:56,345
労力はほとんどかかりませんでしたね

42
00:01:56,984 --> 00:01:58,984
これでスクリプトに必要な新機能を

43
00:01:58,984 --> 00:02:01,628
追加する準備は万端です

44
00:02:02,378 --> 00:02:04,252
ためしにインスペクターに 

45
00:02:04,252 --> 00:02:06,252
HelpBox を追加してみましょう

46
00:02:07,724 --> 00:02:10,195
さっそく SomeScriptEditor に戻ります

47
00:02:10,195 --> 00:02:13,550
HelpBox は OnInspectorGUI メソッド以下に追加します

48
00:02:14,119 --> 00:02:16,119
まずは EditorGUILayout クラス名を入力し

49
00:02:16,119 --> 00:02:19,185
続けて .（ピリオド）を入力し

50
00:02:19,185 --> 00:02:21,185
最後にメソッド名 HelpBox を入力します

51
00:02:22,463 --> 00:02:25,965
HelpBox メソッドには 2 つのパラメーターを指定します

52
00:02:25,965 --> 00:02:27,965
ひとつめは HelpBox に

53
00:02:27,965 --> 00:02:29,965
表示するテキスト

54
00:02:29,965 --> 00:02:32,649
ふたつめは HelpBox のタイプです

55
00:02:32,649 --> 00:02:34,649
このパラメーターは Enum（列挙）で

56
00:02:34,649 --> 00:02:38,280
Error / Info / None / Warning から選びます

57
00:02:40,016 --> 00:02:42,016
Unity 上のシーンに戻ってみると

58
00:02:42,016 --> 00:02:44,016
インスペクター上で他のスクリプトフィールドの下に

59
00:02:44,016 --> 00:02:46,739
HelpBox が表示されているのが見えますね

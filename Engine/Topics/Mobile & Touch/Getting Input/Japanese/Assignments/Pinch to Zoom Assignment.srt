1
00:00:00,180 --> 00:00:02,807
In this assignment we will be going through

2
00:00:02,807 --> 00:00:04,807
making some standard pinch zooms

3
00:00:04,807 --> 00:00:06,654
style touch controls.

4
00:00:07,057 --> 00:00:10,157
Our controls will be made by using a script

5
00:00:10,157 --> 00:00:11,977
that we'll attach to the camera.

6
00:00:12,270 --> 00:00:14,880
Select the main camera in the scene.

7
00:00:15,518 --> 00:00:17,965
Next we will add a C# script

8
00:00:17,965 --> 00:00:22,260
to our camera by clicking Add Component - New Script.

9
00:00:22,663 --> 00:00:25,304
We will call our script PinchZoom.

10
00:00:25,680 --> 00:00:29,096
Once that is done click Create and Add.

11
00:00:29,720 --> 00:00:31,874
Now we can double click on the script

12
00:00:31,874 --> 00:00:33,874
to open it for editing.

13
00:00:34,650 --> 00:00:36,357
Let's remove the body of the class

14
00:00:36,357 --> 00:00:38,357
so we have a nice clean place to start.

15
00:00:39,023 --> 00:00:42,324
The principle of a pinch zoom works as follows.

16
00:00:42,617 --> 00:00:44,311
We need to first make sure we have

17
00:00:44,311 --> 00:00:46,656
exactly two touches on the device.

18
00:00:47,322 --> 00:00:49,322
Then we need to know the distance between

19
00:00:49,322 --> 00:00:51,322
those touches on both the current

20
00:00:51,322 --> 00:00:53,322
frame and the previous frame.

21
00:00:54,623 --> 00:00:56,623
If the distance between the touches

22
00:00:56,623 --> 00:00:59,065
has gotten smaller the touches have moved

23
00:00:59,065 --> 00:01:01,770
closer together and we should zoom out.

24
00:01:02,490 --> 00:01:04,686
Similarly if the distance between the

25
00:01:04,686 --> 00:01:07,784
touches has increased then we should zoom in.

26
00:01:08,788 --> 00:01:10,941
The first thing we need to do in this script

27
00:01:10,941 --> 00:01:13,708
is to make a couple of public float variables.

28
00:01:14,208 --> 00:01:15,999
These will be used to adjust the speed

29
00:01:15,999 --> 00:01:17,999
at which the zoom happens.

30
00:01:18,499 --> 00:01:20,499
We need two variables so that we can

31
00:01:20,499 --> 00:01:23,529
separately adjust speeds to both perspective

32
00:01:23,529 --> 00:01:25,529
and orthographic cameras.

33
00:01:26,595 --> 00:01:28,414
We will call these variables

34
00:01:28,414 --> 00:01:30,247
perspectiveZoomSpeed

35
00:01:30,247 --> 00:01:33,039
and orthoZoomSpeed respectively.

36
00:01:33,677 --> 00:01:37,066
We will also give them a default value of 0.5.

37
00:01:38,188 --> 00:01:40,518
Since touch input is detected in time

38
00:01:40,518 --> 00:01:43,160
with the update loop it is usually best to

39
00:01:43,160 --> 00:01:45,873
deal with that input in the update function.

40
00:01:46,889 --> 00:01:49,685
However we only want to do anything

41
00:01:49,685 --> 00:01:52,408
if there are exactly two touches on the device.

42
00:01:52,862 --> 00:01:56,995
We can check this using the Input.touchCount property.

43
00:01:57,882 --> 00:01:59,799
Now that we are sure that there are exactly

44
00:01:59,799 --> 00:02:02,714
two touches we can store those touches

45
00:02:02,714 --> 00:02:04,951
in our own touch variables.

46
00:02:04,951 --> 00:02:07,355
This way we don't have to keep accessing

47
00:02:07,355 --> 00:02:09,355
the properties of the input class.

48
00:02:10,297 --> 00:02:13,431
We access the touches using the GetTouch function

49
00:02:13,431 --> 00:02:15,431
of the input class.

50
00:02:15,931 --> 00:02:18,594
Since there are only two touches present.

51
00:02:18,594 --> 00:02:22,541
these will be indices 0 and 1 in the touches array/

52
00:02:23,207 --> 00:02:25,787
We can therefore parse 0 and 1

53
00:02:25,787 --> 00:02:29,813
to the GetTouch function to get a copy of these touches.

54
00:02:30,672 --> 00:02:32,466
Now that we have the touches

55
00:02:32,466 --> 00:02:34,466
we need to find out what their positions were

56
00:02:34,466 --> 00:02:35,904
in the previous frame.

57
00:02:36,565 --> 00:02:39,336
We do this by taking their current position

58
00:02:39,336 --> 00:02:41,336
and subtracting their delta position.

59
00:02:43,134 --> 00:02:45,134
We want to find the distance between the touches

60
00:02:45,134 --> 00:02:48,494
in each frame and use that knowledge to determine

61
00:02:48,494 --> 00:02:50,853
whether we need to zoom in or out.

62
00:02:51,519 --> 00:02:54,721
To find the distance between the touches in either frame

63
00:02:54,721 --> 00:02:56,638
we subtract one touches position

64
00:02:56,638 --> 00:02:58,749
from the other to get a vector between them.

65
00:02:59,621 --> 00:03:03,295
Then from that vector we simply find it's magnitude.

66
00:03:03,836 --> 00:03:05,836
We can do this in one step by

67
00:03:05,836 --> 00:03:08,614
enclosing our vector subtraction in parenthesis

68
00:03:08,614 --> 00:03:10,378
and using the . operator.

69
00:03:11,183 --> 00:03:12,835
We are using the term delta

70
00:03:12,835 --> 00:03:16,623
because it refers to a change between two pieces of data.

71
00:03:17,827 --> 00:03:19,729
Having calculated the distance between

72
00:03:19,729 --> 00:03:21,729
touches in each frame we can now

73
00:03:21,729 --> 00:03:25,064
find out the differences between those distances.

74
00:03:25,647 --> 00:03:29,383
This time the order in which we subtract is important.

75
00:03:29,383 --> 00:03:31,383
We will subtract the current frame's distance

76
00:03:31,383 --> 00:03:34,826
between touches from the previous frames distance.

77
00:03:35,464 --> 00:03:37,725
This will result in a negative value

78
00:03:37,725 --> 00:03:40,056
if the distance in the current frame is greater

79
00:03:40,056 --> 00:03:42,056
than that of the previous frame.

80
00:03:42,515 --> 00:03:45,630
This means that the fingers are moving apart.

81
00:03:45,630 --> 00:03:47,630
If the fingers are moving apart

82
00:03:47,630 --> 00:03:49,630
then we expect to zoom in

83
00:03:49,630 --> 00:03:51,187
reducing the field of view

84
00:03:51,187 --> 00:03:53,688
or orthographic size of the camera.

85
00:03:55,082 --> 00:03:57,747
Since we want to reduce either the field of view

86
00:03:57,747 --> 00:04:00,683
or orthographic size under these conditions

87
00:04:00,683 --> 00:04:04,138
this is the correct way to subtract the two values.

88
00:04:05,204 --> 00:04:06,786
Before we can go about changing the

89
00:04:06,786 --> 00:04:08,621
properties of the camera though,

90
00:04:08,621 --> 00:04:11,627
we need to know if the camera is in orthographic mode

91
00:04:11,627 --> 00:04:13,627
or perspective.

92
00:04:13,627 --> 00:04:16,447
If it is orthographic then we can adjust the camera's

93
00:04:16,447 --> 00:04:19,843
orthographic size by the change in the distance

94
00:04:19,843 --> 00:04:23,291
multiplied by the orthographic zoom speed.

95
00:04:24,537 --> 00:04:27,824
We are also going to make sure our camera's orthographic size

96
00:04:27,824 --> 00:04:29,644
does not drop below 0.

97
00:04:30,062 --> 00:04:32,700
If it does the image will invert.

98
00:04:33,200 --> 00:04:35,337
To prevent this we are going to use

99
00:04:35,337 --> 00:04:38,706
the Max function of the Mathf class.

100
00:04:39,206 --> 00:04:41,206
This will return which ever is the largest

101
00:04:41,206 --> 00:04:43,206
of the parameters it is given.

102
00:04:43,706 --> 00:04:46,342
We will give it the camera's orthographic size

103
00:04:46,342 --> 00:04:48,342
and a value of .1.

104
00:04:49,035 --> 00:04:52,536
That way if the size drops below .1

105
00:04:52,536 --> 00:04:55,016
we cam instead set it to .1.

106
00:04:56,376 --> 00:04:59,970
Now, if the camera isn't in orthographic mode

107
00:04:59,970 --> 00:05:01,970
then we know it's in perspective mode

108
00:05:01,970 --> 00:05:04,584
and we should instead change the field of view.

109
00:05:05,194 --> 00:05:08,464
We can adjust the field of view by the same amount

110
00:05:08,464 --> 00:05:11,286
but using the perspective zoom speed instead.

111
00:05:13,029 --> 00:05:15,630
We again want to limit the field of view.

112
00:05:15,630 --> 00:05:19,194
However, since the field of view represents an angle

113
00:05:19,194 --> 00:05:22,692
we need to clamp it between 0 and 180.

114
00:05:23,330 --> 00:05:27,657
We do this using the Clamp function of the Mathf class.

115
00:05:28,157 --> 00:05:30,157
This takes 3 values.

116
00:05:30,157 --> 00:05:32,851
First, the value you wish to clamp,

117
00:05:32,851 --> 00:05:35,201
then the minimum value it's allowed to be,

118
00:05:35,201 --> 00:05:37,781
and then the maximum value it's allowed to be.

119
00:05:38,834 --> 00:05:41,585
Our value is the camera's field of view

120
00:05:41,585 --> 00:05:44,287
and we want it to be between .1

121
00:05:44,287 --> 00:05:46,770
and 179.9.

122
00:05:48,265 --> 00:05:50,668
When making your own pinch zoom system

123
00:05:50,668 --> 00:05:53,153
you may want to pick more appropriate limits

124
00:05:53,153 --> 00:05:55,990
for your field of view and orthographic size.

125
00:05:56,647 --> 00:05:59,241
We are using the limits shown in the script

126
00:05:59,241 --> 00:06:01,241
because they are the extremes of what

127
00:06:01,241 --> 00:06:03,086
produces a reasonable result.

128
00:06:03,610 --> 00:06:07,156
That is the end of our script, so now it is time to test it.

129
00:06:07,977 --> 00:06:10,627
We are assuming at this point that you have a device

130
00:06:10,627 --> 00:06:12,471
ready and setup to test.

131
00:06:12,471 --> 00:06:14,471
For instructions on how to do this

132
00:06:14,471 --> 00:06:16,471
consult the device's documentation.

133
00:06:17,697 --> 00:06:19,697
We are now going to build this project

134
00:06:19,697 --> 00:06:21,923
by going to File - Build Settings.

135
00:06:22,471 --> 00:06:25,043
We need to add the current scene to the build.

136
00:06:25,543 --> 00:06:27,306
You may be prompted to save the scene

137
00:06:27,306 --> 00:06:28,939
if you haven't already.

138
00:06:29,675 --> 00:06:31,877
We will then click Build And Run.

139
00:06:32,723 --> 00:06:35,546
As you can see, when we move our fingers together

140
00:06:35,546 --> 00:06:37,344
the camera zooms out.

141
00:06:37,344 --> 00:06:40,137
And when we move them apart we zoom in.

1
00:00:00,290 --> 00:00:02,744
スマートフォンやタブレットの多くには加速度計という

2
00:00:02,744 --> 00:00:04,744
ものが付いています

3
00:00:05,244 --> 00:00:07,244
これはデバイスの使用中に

4
00:00:07,244 --> 00:00:11,665
物理的なデバイスの向き情報を取得する際に利用できます

5
00:00:12,165 --> 00:00:15,308
この情報には input クラスの一部 vector3 プロパティの

6
00:00:15,308 --> 00:00:19,489
acceleration からアクセスできます

7
00:00:20,528 --> 00:00:22,528
加速度計の軸は Unity 上での軸と

8
00:00:22,528 --> 00:00:24,277
一致するようになっています

9
00:00:24,777 --> 00:00:27,711
つまり Y が垂直軸で

10
00:00:27,711 --> 00:00:30,003
X が水平軸  そして

11
00:00:30,003 --> 00:00:32,280
Z が深度軸です

12
00:00:33,276 --> 00:00:35,276
これはポートレートモードでもランドスケープモードでも

13
00:00:35,276 --> 00:00:37,276
同じです

14
00:00:37,679 --> 00:00:41,175
Unity は加速度計の入力を自動的に調整して

15
00:00:41,175 --> 00:00:43,175
デバイスの向きに合わせます

16
00:00:44,393 --> 00:00:47,422
ここにキューブが配置されたシーンがあります

17
00:00:47,422 --> 00:00:49,505
キューブには Accelerometer Input という名の 

18
00:00:49,505 --> 00:00:52,002
スクリプトがアタッチされています

19
00:00:53,110 --> 00:00:55,486
Accelerometer Input スクリプトの内部では

20
00:00:55,486 --> 00:00:57,486
Update メソッドでキューブを

21
00:00:57,486 --> 00:01:01,704
Input.acceleration vector3 に基いて動かそうとしています

22
00:01:03,129 --> 00:01:06,697
ここでは加速度計の X 軸を

23
00:01:06,697 --> 00:01:09,345
キューブの X 軸にマップしています

24
00:01:09,345 --> 00:01:11,553
そしてこちらでは加速度計の負の Z 軸を

25
00:01:11,553 --> 00:01:16,297
キューブの Z 軸にマップしています

26
00:01:16,975 --> 00:01:19,567
加速度計の値の許容範囲は

27
00:01:19,567 --> 00:01:23,106
-1 から 1 までなので 

28
00:01:23,106 --> 00:01:26,371
input.getAxis と同様に扱うことができます

29
00:01:27,161 --> 00:01:29,383
ここでプロジェクトをビルドしてデプロイしてみると

30
00:01:29,383 --> 00:01:31,881
モバイルデバイスを傾けると

31
00:01:31,881 --> 00:01:34,841
キューブがシーン内を移動するのが確認できます

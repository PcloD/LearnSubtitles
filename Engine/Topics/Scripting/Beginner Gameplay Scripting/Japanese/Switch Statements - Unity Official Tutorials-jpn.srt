1
00:00:00,510 --> 00:00:02,337
コードを条件分岐させるとき

2
00:00:02,337 --> 00:00:04,337
よく使われるものには if 文や

3
00:00:04,337 --> 00:00:06,337
if else 文を続けて使う方法がありますが

4
00:00:07,183 --> 00:00:10,198
これ以外にも switch 文というものもあります

5
00:00:10,554 --> 00:00:13,463
switch 文はより効率的に条件分岐をさせられる文で

6
00:00:13,463 --> 00:00:15,751
ひとつの変数と定数グループとを比較したい場合に

7
00:00:15,751 --> 00:00:17,463
よく使用されます

8
00:00:18,001 --> 00:00:20,001
switch 文のよくある使われ方としては

9
00:00:20,001 --> 00:00:22,001
Enum（列挙）に応じて条件分岐させる場合などがあります

10
00:00:22,549 --> 00:00:24,549
Enum（列挙）の詳細については

11
00:00:24,549 --> 00:00:27,530
下記リンク先にある Enumeration のレッスンをご覧ください

12
00:00:29,087 --> 00:00:31,087
さて  このレッスンではキャラクターの知性レベルに応じて

13
00:00:31,087 --> 00:00:33,087
分岐する会話を作ってみます

14
00:00:33,904 --> 00:00:35,769
これは if と連続した else を組み合わせて

15
00:00:35,769 --> 00:00:38,748
実現することもできますが それでは扱いにくくなってしまいます

16
00:00:39,373 --> 00:00:42,069
そこで代わりに switch 文を使って

17
00:00:42,069 --> 00:00:44,069
より簡単に実装してみたいと思います

18
00:00:45,579 --> 00:00:48,197
さてここに ConversationScript というスクリプトがあります

19
00:00:48,880 --> 00:00:51,610
このスクリプトに関数を実装して

20
00:00:51,610 --> 00:00:53,929
知性レベルに応じてキャラクターのあいさつを

21
00:00:53,929 --> 00:00:55,929
変化させてみましょう

22
00:00:56,785 --> 00:00:58,785
まずはキャラクターの知性を示す

23
00:00:58,785 --> 00:01:00,785
int 型変数を作成していきます

24
00:01:01,122 --> 00:01:03,336
次に この変数に 5 を指定します

25
00:01:04,151 --> 00:01:05,854
この例ではひとまず

26
00:01:05,854 --> 00:01:09,261
知性レベルは 5 が最高で

27
00:01:09,261 --> 00:01:11,261
1 が最低ということにしておきましょう

28
00:01:12,126 --> 00:01:15,191
次に関数 Greet（あいさつ）を作成します

29
00:01:15,191 --> 00:01:17,191
ここで switch 文を使いキャラクターの知性に応じて

30
00:01:17,191 --> 00:01:19,838
あいさつを出力させます

31
00:01:20,989 --> 00:01:22,864
switch 文の構文は

32
00:01:22,864 --> 00:01:24,864
まず switch で始まり  次に

33
00:01:24,864 --> 00:01:28,630
カッコで囲まれた変数が続きます 関数はここで指定した変数を比較に使います

34
00:01:29,586 --> 00:01:31,726
つまりこの例で比較に使われるのは

35
00:01:31,726 --> 00:01:33,407
先ほどの intelligence 変数になります

36
00:01:33,962 --> 00:01:37,495
続けて  開き中カッコと閉じ中カッコを追加し

37
00:01:38,828 --> 00:01:40,828
その中カッコの内側で

38
00:01:40,828 --> 00:01:43,094
case（ケース）を定義していきます

39
00:01:43,094 --> 00:01:45,094
case とは変数と比較される

40
00:01:45,094 --> 00:01:47,094
定数のことを指します

41
00:01:47,622 --> 00:01:50,841
case を書くときはまず case キーワードを記入し

42
00:01:50,841 --> 00:01:53,495
続けて定義した定数を入れて 最後にコロンを入力します

43
00:01:53,993 --> 00:01:55,993
これで知性が 5 のキャラクターが

44
00:01:55,993 --> 00:01:57,993
どのようにあいさつするのかを

45
00:01:57,993 --> 00:02:00,465
定義する準備が整いました

46
00:02:01,729 --> 00:02:03,729
それでは知性の高そうな感じの

47
00:02:03,729 --> 00:02:05,212
あいさつを print を使って記入してみましょう

48
00:02:05,729 --> 00:02:08,611
僕は別に知性が高くないので

49
00:02:08,611 --> 00:02:10,611
それっぽさ優先でいきます

50
00:02:12,570 --> 00:02:14,570
うん こんな感じでしょう

51
00:02:15,612 --> 00:02:17,612
各 case の終わりには

52
00:02:17,612 --> 00:02:20,710
jump 文と呼ばれるものを含めなくてはなりません

53
00:02:20,710 --> 00:02:22,597
switch で一番よく使われる jump 文は

54
00:02:22,597 --> 00:02:24,470
break です

55
00:02:25,053 --> 00:02:27,053
このキーワードは実行時に

56
00:02:27,053 --> 00:02:29,053
コードが以後の処理を行うことなく

57
00:02:29,053 --> 00:02:32,059
switch 文から抜け出すものです

58
00:02:33,142 --> 00:02:35,816
return キーワードのようなものと考えても良いかもしれません

59
00:02:35,816 --> 00:02:37,816
ただし return が関数でよく使われるのに対し

60
00:02:37,816 --> 00:02:41,871
break は switch やループ処理でよく使われます

61
00:02:42,788 --> 00:02:44,577
コードは break に到達すると

62
00:02:44,577 --> 00:02:46,577
現在実行中のブロックを抜けて

63
00:02:46,577 --> 00:02:48,362
次のブロックに移行します

64
00:02:48,362 --> 00:02:50,362
例の場合だと break が

65
00:02:50,362 --> 00:02:52,043
switch 文の内部にあるので

66
00:02:52,043 --> 00:02:54,043
break 到達後は

67
00:02:54,043 --> 00:02:56,043
switch 文の直後に移動します

68
00:02:58,159 --> 00:03:00,159
では続けて  知性が低い場合の case を

69
00:03:00,159 --> 00:03:02,159
追記してみましょう

70
00:03:14,862 --> 00:03:16,930
そして最後の case は定義されていないすべてのケースを

71
00:03:16,930 --> 00:03:18,930
キャッチするものにしなければなりません

72
00:03:19,334 --> 00:03:22,076
これを行うには case キーワードではなく

73
00:03:22,076 --> 00:03:24,299
default というキーワードを使います

74
00:03:25,261 --> 00:03:27,261
この default は上で定義されたいずれにも一致しない場合に

75
00:03:27,261 --> 00:03:30,004
実行されるものなので 値は不要です

76
00:03:30,523 --> 00:03:32,523
その他の点では基本的に case を記述する際と同じように

77
00:03:32,523 --> 00:03:34,040
扱って問題ありません

78
00:03:34,648 --> 00:03:36,552
default は if else 文における else のようなもの

79
00:03:36,552 --> 00:03:38,552
と考えてもいいかもしれません

80
00:03:38,552 --> 00:03:40,801
else と同様 default も  上にある条件から

81
00:03:40,801 --> 00:03:44,454
外れるものすべてをキャッチするべく機能するわけです 

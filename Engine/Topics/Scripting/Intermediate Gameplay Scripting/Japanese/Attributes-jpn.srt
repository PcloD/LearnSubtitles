1
00:00:00,193 --> 00:00:02,520
属性（Attribute）は宣言することでメソッドや

2
00:00:02,520 --> 00:00:05,812
変数  クラスなどに情報をアタッチすることができます

3
00:00:06,989 --> 00:00:09,210
これは既存のコードを利用して拡張または変更する際に

4
00:00:09,210 --> 00:00:11,940
非常に便利です

5
00:00:13,117 --> 00:00:15,117
属性の影響と用途は 各属性によって

6
00:00:15,110 --> 00:00:17,110
大きく異なります

7
00:00:18,038 --> 00:00:20,386
ここにオーブが 1 つ配置された Unity のシーンがあります

8
00:00:20,911 --> 00:00:24,016
オーブには Spin スクリプトがアタッチされています

9
00:00:24,709 --> 00:00:27,112
ここでスクリプトの speed 変数が

10
00:00:27,112 --> 00:00:29,112
0 に設定されていますね

11
00:00:30,455 --> 00:00:32,455
Spin スクリプトの中を覗くと

12
00:00:32,455 --> 00:00:34,635
まず int 型 speed 変数が宣言され

13
00:00:34,635 --> 00:00:36,207
その値が 0 と設定されています

14
00:00:36,859 --> 00:00:39,026
続いてUpdate メソッドでは

15
00:00:39,026 --> 00:00:41,561
オブジェクトを現在のスピードに基づき Y 軸を

16
00:00:41,561 --> 00:00:43,561
中心に回転するようにしてあります

17
00:00:43,561 --> 00:00:45,561
こうしておくと  speed 変数に任意の値を与えて

18
00:00:45,561 --> 00:00:48,419
それに応じてオブジェクトの回転スピードも変更

19
00:00:48,419 --> 00:00:50,419
されるようになります

20
00:00:51,402 --> 00:00:54,213
このままでも問題ありませんが speed 変数の

21
00:00:54,213 --> 00:00:56,213
値に制限を付けたい場合はどうすればよいでしょう?

22
00:00:56,213 --> 00:00:58,213
現在の値を検出するコードを書いて範囲外に

23
00:00:58,213 --> 00:01:01,426
ならないようにするという方法も取れますが

24
00:01:01,426 --> 00:01:04,531
ここでは「属性」をアタッチするという手段も取れます

25
00:01:05,418 --> 00:01:07,873
属性は変更を加えるコードの

26
00:01:07,873 --> 00:01:11,051
直上または直前に書きます

27
00:01:11,051 --> 00:01:14,182
また追加した属性はスクリプトの他の部分には影響を与えません

28
00:01:14,862 --> 00:01:16,862
この例では

29
00:01:16,862 --> 00:01:18,862
Range 属性を使っていきます

30
00:01:20,343 --> 00:01:22,343
すべての属性の構文は

31
00:01:22,343 --> 00:01:24,343
開き角カッコから始まります

32
00:01:24,343 --> 00:01:26,343
続けて Range 属性を書き...

33
00:01:26,343 --> 00:01:29,197
キーワ―ド Range の直後には対カッコを記します

34
00:01:30,609 --> 00:01:33,320
そしてカッコの内側に最低値と

35
00:01:33,320 --> 00:01:35,042
最大値を入力します

36
00:01:35,459 --> 00:01:39,116
属性の最後は閉じ角カッコをで閉めます

37
00:01:39,865 --> 00:01:41,865
この例では属性を変数宣言の

38
00:01:41,865 --> 00:01:44,544
「直上」に記載していますが

39
00:01:44,544 --> 00:01:47,542
これは「直前」に記載しても問題ありません

40
00:01:50,584 --> 00:01:52,404
さて Unity に戻って

41
00:01:52,404 --> 00:01:54,404
インスペクターの Speed プロパティの表示が

42
00:01:54,404 --> 00:01:57,380
先ほどとは変わっているのが確認できます

43
00:01:57,770 --> 00:02:00,333
数値が表示されていたのがスライダーに変わり 最小値から

44
00:02:00,333 --> 00:02:02,333
最大値だけを指定できるようになっています

45
00:02:02,833 --> 00:02:05,878
ここでシーンを実行してみると スライダーを移動させると

46
00:02:05,878 --> 00:02:08,209
speed 変数の値が直接書き換わり

47
00:02:08,209 --> 00:02:11,322
オブジェクトの回転スピードに反映されているのが確認できます

48
00:02:12,595 --> 00:02:14,595
次に見ていく属性は

49
00:02:14,595 --> 00:02:17,290
Execute In Edit Mode（エディットモードで実行）属性です

50
00:02:17,841 --> 00:02:19,841
この属性はアタッチしたスクリプトが

51
00:02:19,841 --> 00:02:22,564
Play モードでなくても実行するという

52
00:02:22,564 --> 00:02:24,564
効果を持ちます

53
00:02:25,285 --> 00:02:28,185
さて再びオーブが 1 つ配置されたシーンがあります

54
00:02:28,185 --> 00:02:30,088
このオーブにはスクリプト

55
00:02:30,088 --> 00:02:32,088
Color がアタッチされています

56
00:02:33,058 --> 00:02:36,487
この Color スクリプトはオブジェクトの sharedMaterial の

57
00:02:36,487 --> 00:02:38,487
色を赤に設定します

58
00:02:39,291 --> 00:02:41,291
こんなとき Unity 上でシーンを実行することなく

59
00:02:41,291 --> 00:02:43,961
効果を確認したい場合には

60
00:02:43,961 --> 00:02:46,596
Execute In Edit Mode 属性が使えます

61
00:02:47,096 --> 00:02:49,416
属性を適用するにはまず 開き角カッコを

62
00:02:49,416 --> 00:02:51,778
クラス名の直上または直前に入力し

63
00:02:52,482 --> 00:02:54,482
ここでクラス名の直前に入れるのは

64
00:02:54,482 --> 00:02:57,866
Execute In Edit Mode 属性が

65
00:02:57,866 --> 00:02:59,866
スクリプト内の一部コードではなく全コードに

66
00:02:59,866 --> 00:03:01,866
適用されるためです

67
00:03:02,711 --> 00:03:06,370
次にキーワード ExecuteInEditMode

68
00:03:06,370 --> 00:03:08,370
そして閉じ角カッコを入力します

69
00:03:09,059 --> 00:03:11,685
この属性はパラメーターを取らないので 

70
00:03:11,685 --> 00:03:14,642
先ほどは入力したカッコは入力不要です

71
00:03:15,432 --> 00:03:19,243
さて Unity に戻るとオブジェクトの色が赤に変化しているのが確認できます

72
00:03:19,243 --> 00:03:22,936
シーンを実行していないのに  スクリプトが実行されているわけですね

73
00:03:23,809 --> 00:03:26,015
ただ ExecuteInEditMode 属性を使うときには

74
00:03:26,015 --> 00:03:28,772
よく注意する必要があります

75
00:03:28,772 --> 00:03:32,210
通常  スクリプトはシーン実行時に実行されます

76
00:03:32,210 --> 00:03:34,588
そしてシーンを停止すると シーン内で

77
00:03:34,588 --> 00:03:37,590
ゲームオブジェクトに適用された変更はすべて取り消されます

78
00:03:38,145 --> 00:03:40,999
しかし Edit モードで実行されたスクリプトの場合は

79
00:03:40,999 --> 00:03:45,210
シーン内でオブジェクトの変更 / 作成 / 削除ができるのです

80
00:03:45,210 --> 00:03:47,434
Play モードではない場所で適用された変更なので

81
00:03:47,434 --> 00:03:50,467
元に戻らず  変更されたままになるのです

82
00:03:51,630 --> 00:03:53,630
たとえばこのシーンにあるこのオーブも

83
00:03:53,630 --> 00:03:57,178
永続的に赤色に変更されてしまっています

84
00:03:57,178 --> 00:03:59,523
このシーンにさらにオーブを追加しても

85
00:03:59,523 --> 00:04:03,537
オーブアセットが変更されてしまっているので 同じく赤くなります

86
00:04:04,203 --> 00:04:06,536
この場合に色を修正するには  手動で

87
00:04:06,536 --> 00:04:08,218
色を戻すしかありません

88
00:04:08,953 --> 00:04:11,884
ExecuteInEditMode 属性の詳細については

89
00:04:11,884 --> 00:04:15,553
下記リンク先の情報を参照してください

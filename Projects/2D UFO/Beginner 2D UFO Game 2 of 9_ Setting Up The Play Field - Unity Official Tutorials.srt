1
00:00:02,677 --> 00:00:04,644
Now that we have our main scene saved

2
00:00:04,644 --> 00:00:06,644
let's create our game board, or play field.

3
00:00:07,490 --> 00:00:09,490
To do this we'll need to add in our

4
00:00:09,490 --> 00:00:12,303
first sprite, called Background.

5
00:00:14,134 --> 00:00:17,159
We can do this by navigating to the folder Sprites

6
00:00:17,159 --> 00:00:19,755
which was imported when we imported our assets.

7
00:00:20,698 --> 00:00:24,622
In Sprites we'll see a sprite named Background.

8
00:00:26,623 --> 00:00:29,561
Drag Background from the project view

9
00:00:29,561 --> 00:00:31,561
in to the hierarchy.

10
00:00:31,561 --> 00:00:34,107
This will create a new game object

11
00:00:34,107 --> 00:00:36,107
called Background.

12
00:00:37,868 --> 00:00:39,868
This new game object is created

13
00:00:39,868 --> 00:00:41,868
with a sprite renderer

14
00:00:41,868 --> 00:00:43,868
component attached.

15
00:00:44,645 --> 00:00:46,645
Game objects are the entities

16
00:00:46,645 --> 00:00:48,645
which scenes are made out of in Unity.

17
00:00:49,547 --> 00:00:51,547
Each piece of a game scene,

18
00:00:51,547 --> 00:00:54,528
whether it's the player, a wall in the level,

19
00:00:54,528 --> 00:00:57,927
or a coin can be it's own game object.

20
00:00:59,163 --> 00:01:01,163
All game objects are created

21
00:01:01,163 --> 00:01:03,722
with a transform component attached.

22
00:01:04,522 --> 00:01:06,522
The transform component is used to

23
00:01:06,522 --> 00:01:09,335
store and manipulate the position,

24
00:01:09,335 --> 00:01:12,904
rotation and scale of the object.

25
00:01:15,095 --> 00:01:17,095
To add additional functionality to

26
00:01:17,095 --> 00:01:19,095
the game object we can add

27
00:01:19,095 --> 00:01:21,095
additional components.

28
00:01:21,095 --> 00:01:23,095
Adding a component allows a game

29
00:01:23,095 --> 00:01:25,095
object to do something.

30
00:01:25,095 --> 00:01:27,095
For example adding an audio

31
00:01:27,095 --> 00:01:29,095
source component to a game object

32
00:01:29,095 --> 00:01:31,095
allows it to play sound.

33
00:01:32,288 --> 00:01:34,288
The sprite renderer component

34
00:01:34,288 --> 00:01:36,288
allows a game object to display


35
00:01:36,288 --> 00:01:38,288
a 2D image,

36
00:01:38,288 --> 00:01:40,288
shown in it's Sprite Field.

37
00:01:42,397 --> 00:01:44,397
Dragging a sprite in to the scene

38
00:01:44,397 --> 00:01:47,805
or hierarchy is a shortcut provided by Unity.

39
00:01:47,805 --> 00:01:49,805
Since we can't have a sprite in the

40
00:01:49,805 --> 00:01:52,819
scene that's not attached to a game object

41
00:01:52,819 --> 00:01:54,819
Unity creates a game object

42
00:01:54,819 --> 00:01:58,342
with the appropriate sprite renderer attached

43
00:01:58,342 --> 00:02:00,342
and automatically references the

44
00:02:00,342 --> 00:02:03,491
dragged sprite asset to be displayed.

45
00:02:04,781 --> 00:02:06,781
Because we drag the sprite in to the

46
00:02:06,781 --> 00:02:08,781
hierarchy window it

47
00:02:08,781 --> 00:02:10,781
should appear at origin,

48
00:02:10,781 --> 00:02:14,572
or the position (0, 0, 0) in our world.

49
00:02:16,014 --> 00:02:18,636
To make sure the sprite is at origin

50
00:02:18,636 --> 00:02:20,636
reset the transform component

51
00:02:20,636 --> 00:02:23,561
using the context sensitive gear menu

52
00:02:23,561 --> 00:02:26,264
in the upper-right of the transform component.

53
00:02:27,693 --> 00:02:29,693
This will reset the position of the game

54
00:02:29,693 --> 00:02:32,651
object to the coordinates (0, 0, 0) 

55
00:02:32,651 --> 00:02:35,346
in our scene if it's not already there.

56
00:02:37,066 --> 00:02:39,066
The origin point of the world

57
00:02:39,538 --> 00:02:41,538
is where all of the coordinates

58
00:02:41,538 --> 00:02:43,538
in the scene are calculated from.

59
00:02:45,452 --> 00:02:47,452
Currently we can only see part

60
00:02:47,452 --> 00:02:49,898
of the background in the scene view.

61
00:02:51,033 --> 00:02:53,033
With the game object still selected

62
00:02:53,477 --> 00:02:55,843
move the cursor over the scene view

63
00:02:55,843 --> 00:02:57,843
and type the F key.

64
00:02:57,843 --> 00:02:59,843
This allows us to see the entire

65
00:02:59,843 --> 00:03:01,843
game object in the scene view.

66
00:03:03,605 --> 00:03:05,591
You can also choose Frame Selected 

67
00:03:05,591 --> 00:03:07,591
from the Edit menu.

68
00:03:09,241 --> 00:03:11,241
Looking at our current scene we can

69
00:03:11,241 --> 00:03:13,241
see grid lines which provide

70
00:03:13,241 --> 00:03:15,756
a reference for spacing in the scene.

71
00:03:16,630 --> 00:03:18,630
For the purposes of this project

72
00:03:18,630 --> 00:03:20,630
we'll turn these off.

73
00:03:21,171 --> 00:03:23,171
Select the Gizmos menu

74
00:03:23,171 --> 00:03:27,014
in the scene view and deselect Show Grid.

75
00:03:33,270 --> 00:03:36,223
Now let's create our Player object.

76
00:03:38,026 --> 00:03:40,026
In this assignment our player will

77
00:03:40,026 --> 00:03:43,195
be represented by our UFO sprite.

78
00:03:44,083 --> 00:03:46,083
Drag the UFO sprite

79
00:03:46,083 --> 00:03:47,861
in to the hierarchy.

80
00:03:48,471 --> 00:03:50,596
A game object called UFO

81
00:03:50,596 --> 00:03:52,596
will be created with an

82
00:03:52,596 --> 00:03:54,596
attached sprite renderer component

83
00:03:54,596 --> 00:03:57,197
to display the sprite we dragged in.

84
00:03:58,376 --> 00:04:00,376
Let's rename our newly created

85
00:04:00,376 --> 00:04:04,039
game object from UFO to Player.

86
00:04:06,383 --> 00:04:08,383
With the UFO highlighted

87
00:04:08,383 --> 00:04:10,383
navigate to the inspector

88
00:04:10,993 --> 00:04:14,173
and click in the text field at the top.

89
00:04:14,839 --> 00:04:17,938
With the text highlighted type Player.

90
00:04:20,657 --> 00:04:23,229
Now we have two sprites in our game.

91
00:04:24,002 --> 00:04:26,002
Because sprites are not 3D objects

92
00:04:26,002 --> 00:04:28,002
we need to manually determine

93
00:04:28,002 --> 00:04:30,002
which sprites will be

94
00:04:30,002 --> 00:04:32,002
rendered on top or

95
00:04:32,002 --> 00:04:34,002
in front of one another.

96
00:04:34,987 --> 00:04:37,318
The way we do this is by assigning

97
00:04:37,318 --> 00:04:40,615
each of our sprites to a sorting layer.

98
00:04:41,384 --> 00:04:44,676
If we click on the Sorting Layer drop down

99
00:04:44,676 --> 00:04:47,319
in our sprite renderer component

100
00:04:47,319 --> 00:04:49,319
we can see that there are

101
00:04:49,319 --> 00:04:51,319
four sorting layers already

102
00:04:51,319 --> 00:04:53,664
defined in our project.

103
00:04:54,732 --> 00:04:56,732
These are Default, 

104
00:04:56,732 --> 00:05:00,006
Background, Pickups and Player.

105
00:05:00,991 --> 00:05:02,894
These sorting layers are part of

106
00:05:02,894 --> 00:05:04,615
the project settings.

107
00:05:05,171 --> 00:05:07,171
They were imported when we chose to

108
00:05:07,171 --> 00:05:10,382
import our asset package as a complete project

109
00:05:10,382 --> 00:05:12,382
in episode one.

110
00:05:12,382 --> 00:05:14,382
To add your own sorting layers

111
00:05:14,382 --> 00:05:17,404
select Add Sorting Layer

112
00:05:17,404 --> 00:05:19,839
and then click the + button.

113
00:05:21,526 --> 00:05:24,208
Sorting layers can be reordered

114
00:05:24,208 --> 00:05:26,208
by clicking and dragging.

115
00:05:26,707 --> 00:05:28,707
We already have all the sorting layers

116
00:05:28,707 --> 00:05:30,943
we need so we can delete

117
00:05:30,943 --> 00:05:32,943
this one we have just created

118
00:05:32,943 --> 00:05:36,267
by highlighting it and clicking the - button.

119
00:05:39,166 --> 00:05:41,612
The order of the layers here is important.

120
00:05:42,361 --> 00:05:44,361
Layers are rendered in

121
00:05:44,361 --> 00:05:46,824
list order from top to bottom.

122
00:05:47,346 --> 00:05:49,346
With the bottom layer being rendered

123
00:05:49,346 --> 00:05:51,346
last and therefore

124
00:05:51,346 --> 00:05:53,346
appearing in front of

125
00:05:53,346 --> 00:05:55,346
the previous layers.

126
00:05:55,776 --> 00:05:57,776
This means that objects in

127
00:05:57,776 --> 00:05:59,776
the Background sorting layer will be

128
00:05:59,776 --> 00:06:03,634
rendered on top of objects in Default

129
00:06:03,634 --> 00:06:05,634
and that objects in Pickups

130
00:06:05,634 --> 00:06:07,634
will be rendered on top

131
00:06:07,634 --> 00:06:10,471
of objects in Background, and so on.

132
00:06:11,423 --> 00:06:13,423
For this project we will use

133
00:06:13,423 --> 00:06:15,980
the layers and their order

134
00:06:15,980 --> 00:06:18,426
as defined in the project settings.

135
00:06:19,217 --> 00:06:21,217
Highlight the Background object.

136
00:06:22,091 --> 00:06:24,091
In it's sprite renderer component

137
00:06:24,091 --> 00:06:27,005
set the sorting layer to Background.

138
00:06:28,504 --> 00:06:30,739
Then highlight the Player object to Player.

139
00:06:32,071 --> 00:06:34,978
and set it's sorting layer.

140
00:06:37,696 --> 00:06:39,696
Next we want to adjust the

141
00:06:39,696 --> 00:06:41,696
scale of our Player.

142
00:06:42,833 --> 00:06:45,591
We can do this in a number of ways.

143
00:06:46,442 --> 00:06:48,995
One way is to use the Scale tool.

144
00:06:50,659 --> 00:06:53,769
With the tool selected simply grab the

145
00:06:53,769 --> 00:06:55,769
access handle we want to change and drag

146
00:06:55,769 --> 00:06:58,420
the handle rescaling the Player.

147
00:07:00,862 --> 00:07:02,862
We can also click and drag on the 

148
00:07:02,862 --> 00:07:05,545
title of the fields we want to change.

149
00:07:08,385 --> 00:07:10,385
Or we can type a number directly

150
00:07:10,385 --> 00:07:13,264
in to the fields we want to change.

151
00:07:14,493 --> 00:07:16,493
We can tab between fields

152
00:07:16,493 --> 00:07:18,493
and hit enter or return to

153
00:07:18,493 --> 00:07:20,286
confirm our choice.

154
00:07:20,286 --> 00:07:22,848
Let's use 0.75 for the X

155
00:07:22,848 --> 00:07:27,097
and Y fields to scale the Player to 75%

156
00:07:27,097 --> 00:07:29,097
of it's original size.

157
00:07:29,097 --> 00:07:31,097
Note that because we're working

158
00:07:31,097 --> 00:07:33,097
in 2D space changing the

159
00:07:33,097 --> 00:07:36,465
scale value for the Z axis 

160
00:07:36,465 --> 00:07:38,355
will have no effect.

161
00:07:38,355 --> 00:07:40,355
We can think of each sprite as a

162
00:07:40,355 --> 00:07:43,536
pane of glass with an image painted on it.

163
00:07:43,536 --> 00:07:46,075
It's flat without depth or volume.

164
00:07:46,715 --> 00:07:49,202
You may have noticed that if we change either the

165
00:07:49,202 --> 00:07:51,202
X or Y scale values to

166
00:07:51,202 --> 00:07:53,202
negative numbers the image

167
00:07:53,202 --> 00:07:56,142
will be reversed along the horizontal

168
00:07:56,142 --> 00:07:58,616
or vertical axis respectively.

169
00:08:00,694 --> 00:08:03,126
So far we've been working in the scene view,

170
00:08:03,126 --> 00:08:05,740
which you can think of as our work area.

171
00:08:06,794 --> 00:08:08,794
If we click over to the game view

172
00:08:08,794 --> 00:08:10,794
we can see what our player will

173
00:08:10,794 --> 00:08:13,627
actually see when they're playing the game.

174
00:08:14,750 --> 00:08:17,654
Notice when we switch to the game view

175
00:08:17,654 --> 00:08:19,654
our view is much tighter on

176
00:08:19,654 --> 00:08:23,049
the player and we can't see the whole background.

177
00:08:24,622 --> 00:08:26,622
In the case of the game that we're trying to design

178
00:08:26,622 --> 00:08:29,471
this is going to make it pretty difficult to play

179
00:08:29,471 --> 00:08:31,471
so what we're going to do is we're going to

180
00:08:31,471 --> 00:08:34,139
adjust the view of the camera

181
00:08:34,139 --> 00:08:36,139
so that it can see more of the board.

182
00:08:37,803 --> 00:08:39,803
Let's start by highlighting

183
00:08:39,803 --> 00:08:41,468
the main camera.

184
00:08:41,468 --> 00:08:43,468
With the main camera highlighted we'll

185
00:08:43,468 --> 00:08:45,468
see that it's also a game object with

186
00:08:45,468 --> 00:08:47,468
a header and transform

187
00:08:47,468 --> 00:08:50,864
but it has a camera component attached.

188
00:08:51,752 --> 00:08:53,752
When we created this project we

189
00:08:53,752 --> 00:08:55,752
set the project type to 2D.

190
00:08:56,612 --> 00:08:58,612
With a 2D project all new

191
00:08:58,612 --> 00:09:01,253
cameras will use orthographic projection

192
00:09:01,253 --> 00:09:03,253
to render the scene.

193
00:09:03,253 --> 00:09:05,253
Using orthographic projection

194
00:09:05,253 --> 00:09:07,253
means that objects will not appear

195
00:09:07,253 --> 00:09:09,253
larger or smaller based on

196
00:09:09,253 --> 00:09:11,253
their distance from the camera.

197
00:09:11,253 --> 00:09:13,253
To visualise how this works

198
00:09:13,253 --> 00:09:16,010
let's temporarily exit 2D mode.

199
00:09:16,676 --> 00:09:18,676
In the scene view we can see

200
00:09:18,676 --> 00:09:20,676
our camera and our sprites.

201
00:09:21,050 --> 00:09:23,050
We can rotate the view by

202
00:09:23,050 --> 00:09:26,146
alt or option + dragging in the scene.

203
00:09:27,020 --> 00:09:29,020
If we highlight the camera game object

204
00:09:29,020 --> 00:09:31,774
we can see the camera's frustum.

205
00:09:32,343 --> 00:09:35,480
The frustum is the camera's viewable area.

206
00:09:36,396 --> 00:09:38,396
If we briefly change our

207
00:09:38,396 --> 00:09:41,799
camera's projection to perspective

208
00:09:41,799 --> 00:09:43,799
we can see that the shape of the

209
00:09:43,799 --> 00:09:45,799
frustum changes and

210
00:09:45,799 --> 00:09:47,799
so does our view of the scene.

211
00:09:48,742 --> 00:09:50,742
If we temporarily move our

212
00:09:50,742 --> 00:09:52,742
Player game object towards

213
00:09:52,742 --> 00:09:55,950
the camera along the Z axis

214
00:09:56,448 --> 00:09:58,670
we will see that it's size

215
00:09:58,670 --> 00:10:01,339
grows larger in the camera preview.

216
00:10:06,360 --> 00:10:08,720
If we switch back to orthographic

217
00:10:08,720 --> 00:10:10,720
projection however we can see that

218
00:10:10,720 --> 00:10:12,720
although the object is

219
00:10:12,720 --> 00:10:14,554
closer to the camera

220
00:10:14,554 --> 00:10:17,743
it does not appear larger in the frame.

221
00:10:18,617 --> 00:10:22,358
Let's reset the Player's position to (0, 0, 0)

222
00:10:22,358 --> 00:10:25,812
and make sure the camera is using orthographic projection

223
00:10:25,812 --> 00:10:27,812
before we return the scene view

224
00:10:27,812 --> 00:10:29,812
to 2D mode.

225
00:10:30,533 --> 00:10:32,533
Next let's get a better view

226
00:10:32,533 --> 00:10:35,112
of our play field for our camera.

227
00:10:35,778 --> 00:10:37,778
Click on the game view.

228
00:10:39,290 --> 00:10:41,290
To change how much is visible to

229
00:10:41,290 --> 00:10:43,290
an orthographic camera we

230
00:10:43,290 --> 00:10:45,290
adjust it's Size field.

231
00:10:46,802 --> 00:10:48,802
Let's click on the Size property

232
00:10:48,802 --> 00:10:50,802
of our camera and drag.

233
00:10:53,937 --> 00:10:55,937
By dragging we can find that a value

234
00:10:55,937 --> 00:10:59,786
of around 16.5 works nicely.

235
00:11:01,298 --> 00:11:03,298
Now we can see that the Player

236
00:11:03,298 --> 00:11:05,298
is at the centre of the board,

237
00:11:05,298 --> 00:11:07,298
and the board is sitting on a blue background.

238
00:11:09,004 --> 00:11:11,004
This blue background is the default

239
00:11:11,004 --> 00:11:13,966
for new scenes when working in 2D mode.

240
00:11:13,966 --> 00:11:15,815
Let's change this to something better

241
00:11:15,815 --> 00:11:17,411
suited to our game.

242
00:11:17,411 --> 00:11:19,411
We can see that the camera has a

243
00:11:19,411 --> 00:11:21,411
property called Background.

244
00:11:21,827 --> 00:11:25,461
This allows us to select the background colour.

245
00:11:25,461 --> 00:11:27,461
Click on the colour swatch to open

246
00:11:27,461 --> 00:11:29,461
the colour picker.

247
00:11:31,708 --> 00:11:34,072
To choose a colour we can click and drag

248
00:11:34,072 --> 00:11:36,072
or enter a value numerically.

249
00:11:36,987 --> 00:11:38,987
Let's use numeric values to set

250
00:11:38,987 --> 00:11:40,298
the background colour.

251
00:11:40,298 --> 00:11:42,869
For the colours red, green and blue

252
00:11:42,869 --> 00:11:48,066
let's use the values 32, 32, 32.

253
00:11:48,066 --> 00:11:51,271
This will give us a nice dark grey background colour.

254
00:11:52,563 --> 00:11:54,563
Congratulations, we now have a

255
00:11:54,563 --> 00:11:57,658
Player game object and a background play field.

256
00:11:58,782 --> 00:12:00,782
In the next lesson we'll learn how to add

257
00:12:00,782 --> 00:12:02,782
a script to our Player

258
00:12:02,782 --> 00:12:05,404
to enable them to move around the playing field

259
00:12:05,404 --> 00:12:07,404
using 2D physics.

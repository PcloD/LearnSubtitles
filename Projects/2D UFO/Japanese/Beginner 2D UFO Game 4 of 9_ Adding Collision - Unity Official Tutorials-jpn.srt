1
00:00:02,732 --> 00:00:04,954
このレッスンでは、シーンの

2
00:00:04,954 --> 00:00:07,328
衝突を設定します

3
00:00:08,091 --> 00:00:11,460
まず Scene ビューをズームアウトしてはじめましょう

4
00:00:12,181 --> 00:00:15,450
マウスのホイールをスクロールして

5
00:00:17,094 --> 00:00:19,698
ビューにバックグラウンド全体が入るようにします

6
00:00:20,398 --> 00:00:22,398
現在、バックグラウンド画像は

7
00:00:22,828 --> 00:00:26,064
見た目には壁の表示になっています

8
00:00:26,064 --> 00:00:27,688
ただし、お気づきの通り

9
00:00:27,688 --> 00:00:29,688
実際には、壁はプレイヤーの通過を

10
00:00:29,688 --> 00:00:31,688
妨げていません

11
00:00:31,688 --> 00:00:34,345
それらは、単なる 2D スプライトの図柄にすぎません

12
00:00:34,886 --> 00:00:36,886
見えているだけで

13
00:00:36,886 --> 00:00:39,374
ゲームのメカニックに影響しません

14
00:00:40,675 --> 00:00:42,675
Player ゲームオブジェクトや

15
00:00:42,675 --> 00:00:44,675
その他の物理オブジェクトが

16
00:00:44,675 --> 00:00:47,175
壁に妨害されるためには、

17
00:00:47,175 --> 00:00:49,867
壁を表現しているゲームオブジェクトに

18
00:00:49,867 --> 00:00:51,867
コライダーコンポーネントを追加する必要があります。

19
00:00:52,810 --> 00:00:54,810
コライダーは形状か体積で

20
00:00:54,810 --> 00:00:57,607
衝突を識別するために

21
00:00:57,607 --> 00:00:59,607
物理エンジンに使用されます

22
00:01:00,300 --> 00:01:02,300
物理エンジンは、シーンの

23
00:01:02,300 --> 00:01:04,744
複数のコライダーの間の衝突を検知します

24
00:01:05,285 --> 00:01:07,285
物理エンジンが衝突を識別するには

25
00:01:07,285 --> 00:01:09,285
衝突するゲームオブジェクトのうち

26
00:01:09,285 --> 00:01:10,966
最低 1 つに

27
00:01:10,966 --> 00:01:14,277
rigidbody2D コンポーネントの設定が必要です

28
00:01:15,573 --> 00:01:17,573
以前説明した通り、このプロジェクトでは

29
00:01:17,573 --> 00:01:19,573
2D の物理演算を用いています

30
00:01:19,573 --> 00:01:22,669
そのため、Collider 2D コンポーネントを使用します

31
00:01:23,584 --> 00:01:25,584
Collider 2D コンポーネントは

32
00:01:25,584 --> 00:01:27,584
2D の形状や線を定義します

33
00:01:27,584 --> 00:01:29,584
それらを使って、2D 物理エンジンは

34
00:01:29,584 --> 00:01:31,584
衝突を計算します

35
00:01:32,583 --> 00:01:34,901
このプロジェクトでは、プレイフィールドの4 角に

36
00:01:34,901 --> 00:01:36,901
2D コライダーを置き

37
00:01:36,901 --> 00:01:38,901
Player ゲームオブジェクトが

38
00:01:38,901 --> 00:01:40,901
ゲームから飛び出ないようにします

39
00:01:40,901 --> 00:01:43,543
Player にもコライダーを加え

40
00:01:43,543 --> 00:01:45,543
2D 物理エンジンが

41
00:01:45,543 --> 00:01:47,917
環境との衝突を検知できるようにします

42
00:01:48,930 --> 00:01:50,930
Player ゲームオブジェクトをハイライトします

43
00:01:52,206 --> 00:01:54,206
Player ゲームオブジェクトにはすでに

44
00:01:54,206 --> 00:01:57,551
rigidbody2D コンポーネントがアタッチされているので

45
00:01:57,551 --> 00:01:59,551
これ以上 rigidbody2D を加えることは不要です

46
00:02:00,078 --> 00:02:02,078
これだけで Player ゲームオブジェクトは

47
00:02:02,078 --> 00:02:04,078
衝突に含まれます

48
00:02:04,078 --> 00:02:06,078
なぜなら、衝突を検知するための

49
00:02:06,078 --> 00:02:08,660
rigidbody2D をアタッチしたゲームオブジェクトを

50
00:02:08,660 --> 00:02:11,314
最低 1 つ持つという条件が

51
00:02:11,314 --> 00:02:13,314
満たされているからです

52
00:02:15,186 --> 00:02:18,236
最初に 2D コライダーを Player に加えます

53
00:02:19,055 --> 00:02:20,845
この Player は円形なので

54
00:02:20,845 --> 00:02:24,216
Circle Collider 2D コンポーネントを使用します

55
00:02:26,007 --> 00:02:28,007
Player をハイライトしている状態で

56
00:02:28,007 --> 00:02:30,007
Add Component ボタンをクリックします

57
00:02:30,645 --> 00:02:32,451
Circle と入力すると

58
00:02:32,451 --> 00:02:34,451
Circle Collider 2D  が表示されます

59
00:02:35,366 --> 00:02:37,366
それを選択し Player に加えます

60
00:02:39,238 --> 00:02:42,595
コライダーを加えたところで Player に注目しましょう

61
00:02:43,374 --> 00:02:45,039
シーンにマウスオーバーし

62
00:02:45,039 --> 00:02:48,296
Player を選択したままF キーを押します

63
00:02:49,960 --> 00:02:51,960
コライダーを加えると

64
00:02:51,960 --> 00:02:53,960
自動的にスプライトのサイズに

65
00:02:53,960 --> 00:02:55,960
合わせてスケールします

66
00:02:56,418 --> 00:02:58,418
この場合 UFO の周りに

67
00:02:58,418 --> 00:03:01,043
隙間が残っています

68
00:03:01,709 --> 00:03:03,709
これを修正するには

69
00:03:03,709 --> 00:03:05,709
コライダーの半径を変更します

70
00:03:06,597 --> 00:03:08,597
半径を設定すれば

71
00:03:08,597 --> 00:03:11,312
多少、スプライトに一致するようになります

72
00:03:12,879 --> 00:03:14,879
Radius フィールドのラベルを

73
00:03:14,879 --> 00:03:16,879
クリック & ドラッグすると値が変化します

74
00:03:17,448 --> 00:03:22,872
値2.15 でぴったり合うようです

75
00:03:24,025 --> 00:03:26,025
今度は、壁に

76
00:03:26,025 --> 00:03:28,025
コライダーを加えましょう

77
00:03:30,244 --> 00:03:32,244
Background をハイライトします

78
00:03:32,244 --> 00:03:34,244
シーンにマウスオーバーし

79
00:03:34,244 --> 00:03:36,673
F キーを押してフレームを選択し

80
00:03:37,229 --> 00:03:40,124
マウスホイールを使ってズームインします

81
00:03:40,693 --> 00:03:42,693
Background オブジェクトが選択された状態で

82
00:03:43,470 --> 00:03:45,470
Add Component

83
00:03:47,425 --> 00:03:49,425
Physics 2D 

84
00:03:51,089 --> 00:03:53,089
Box Collider 2D の順に選択します

85
00:03:55,419 --> 00:03:57,419
Scene ビューの

86
00:03:57,419 --> 00:03:59,419
Background スプライトの境界に

87
00:03:59,419 --> 00:04:01,907
緑の囲いが現れます

88
00:04:02,626 --> 00:04:04,626
では、シーンをテストしてみましょう

89
00:04:09,175 --> 00:04:10,866
ご覧のように

90
00:04:10,866 --> 00:04:12,866
プレイヤーは画面の最上部まで

91
00:04:12,866 --> 00:04:14,641
飛んで行ってしまいます

92
00:04:14,641 --> 00:04:16,641
この理由は、ゲームをスタートしたとき

93
00:04:16,641 --> 00:04:18,641
1 つの 2D 空間に 

94
00:04:18,641 --> 00:04:20,641
2 つのオブジェクトがあると

95
00:04:20,641 --> 00:04:22,641
物理エンジンが判定したからです

96
00:04:22,641 --> 00:04:24,641
プレイヤーがバックグラウンドの

97
00:04:24,641 --> 00:04:26,374
ボックスコライダーの中にあります

98
00:04:26,374 --> 00:04:28,374
物理エンジンは

99
00:04:28,374 --> 00:04:31,027
アタッチされたすべてのrigidbody2D に力を加え

100
00:04:31,027 --> 00:04:33,027
2 つのオブジェクトを引き離して

101
00:04:33,027 --> 00:04:35,732
解決しようとしました

102
00:04:35,732 --> 00:04:37,732
ゲームオブジェクトの中で

103
00:04:37,732 --> 00:04:39,732
rigidbody2D がアタッチしているのは

104
00:04:39,732 --> 00:04:41,732
Player だけだったので

105
00:04:41,732 --> 00:04:43,180
プレイヤーだけに力が作用し

106
00:04:43,180 --> 00:04:45,180
外に押しやられました

107
00:04:45,485 --> 00:04:47,485
現段階の問題点は

108
00:04:47,485 --> 00:04:49,485
Background オブジェクトは1 つの固体オブジェクトで

109
00:04:49,485 --> 00:04:52,645
Player も固体オブジェクトであるため

110
00:04:53,130 --> 00:04:56,730
Player は Background の中にあるべきではないと

111
00:04:56,730 --> 00:04:58,730
物理システムが考えていることです。

112
00:04:59,701 --> 00:05:01,701
解決策として、壁を表している

113
00:05:01,701 --> 00:05:03,701
1 つの大きなコライダーを

114
00:05:03,701 --> 00:05:05,701
複数の小さいコライダーに

115
00:05:05,701 --> 00:05:07,701
取り換えることにします

116
00:05:08,311 --> 00:05:10,311
コライダーが見やすいように

117
00:05:10,311 --> 00:05:12,311
Scene ビューウィンドウの左上の 

118
00:05:12,311 --> 00:05:14,850
Draw Mode メニューを使って

119
00:05:14,850 --> 00:05:16,447
Shaded モードから Wireframe モードに

120
00:05:16,447 --> 00:05:19,013
一時的にScene ビューを

121
00:05:19,013 --> 00:05:21,747
切り替えます

122
00:05:22,995 --> 00:05:24,995
これで、スプライトのテクスチャに

123
00:05:24,995 --> 00:05:27,413
紛らわされることなしに

124
00:05:27,413 --> 00:05:29,413
シーンのオブジェクトの形だけを

125
00:05:29,413 --> 00:05:31,413
見られるようになりました

126
00:05:32,065 --> 00:05:34,065
ゲームオブジェクトに

127
00:05:34,065 --> 00:05:36,065
複数のコライダーをアタッチできるという特性を

128
00:05:36,065 --> 00:05:38,065
このゲームに利用できます

129
00:05:39,147 --> 00:05:42,012
現在、1 つのCollider 2D コンポーネントがあります

130
00:05:42,548 --> 00:05:44,548
もう 1 つ加える前に、もっと良い場所に

131
00:05:44,548 --> 00:05:46,062
これを移動しましょう

132
00:05:46,936 --> 00:05:49,797
各コライダーは独自のプロパティーを持っています

133
00:05:49,797 --> 00:05:51,449
Box Collider 2D の

134
00:05:51,449 --> 00:05:55,079
Offset と Size プロパティーを使用して

135
00:05:55,079 --> 00:05:57,079
コライダーのスケールと位置付けを行い

136
00:05:57,079 --> 00:05:59,079
壁のように動作させます

137
00:06:00,660 --> 00:06:02,660
まず、Size プロパティーを使用して

138
00:06:02,660 --> 00:06:04,660
コライダーを設定しましょう

139
00:06:05,700 --> 00:06:07,700
Unity はデフォルトで

140
00:06:07,700 --> 00:06:09,700
コライダーのサイズを、アタッチしている

141
00:06:09,700 --> 00:06:12,515
スプライトのサイズに合わせようとします

142
00:06:13,250 --> 00:06:15,250
つまり、四角形の 1 つの辺は

143
00:06:15,250 --> 00:06:17,250
すでに正しくできているということです。

144
00:06:17,985 --> 00:06:19,985
Y 座標の値はそのままにしておいて

145
00:06:19,985 --> 00:06:21,985
X の値を調整しましょう

146
00:06:22,387 --> 00:06:27,095
X のサイズを 3.3 に設定しましょう

147
00:06:28,218 --> 00:06:30,218
Scene ビューを元に戻して

148
00:06:30,218 --> 00:06:31,684
Shaded モードにします

149
00:06:32,565 --> 00:06:34,565
位置は正しくないけれど

150
00:06:34,565 --> 00:06:37,657
まあまあ壁のように見える形ができました。

151
00:06:37,657 --> 00:06:40,154
Offset の X プロパティーを使用し

152
00:06:40,154 --> 00:06:42,154
コライダーを右に移動します

153
00:06:42,154 --> 00:06:43,725

154
00:06:44,237 --> 00:06:46,237
これを行うには 

155
00:06:46,237 --> 00:06:48,237
X のフィールドのラベル上で

156
00:06:48,237 --> 00:06:51,189
クリック & ドラッグするか

157
00:06:51,189 --> 00:06:52,912
数字を入力します

158
00:06:53,466 --> 00:06:55,466
Offset X を 14.3 に

159
00:06:55,466 --> 00:06:57,466
設定しましょう

160
00:06:58,243 --> 00:06:59,925
壁が 1 つできました

161
00:06:59,925 --> 00:07:01,925
あと 3 つ必要です

162
00:07:02,785 --> 00:07:05,366
最初に作ったコライダーを複製し

163
00:07:05,366 --> 00:07:07,366
反対側の壁を作成します

164
00:07:09,280 --> 00:07:11,280
コンポーネントの右上の

165
00:07:11,280 --> 00:07:13,280
コンテクストメニューで

166
00:07:13,280 --> 00:07:15,280
Copy Component を選びます

167
00:07:17,568 --> 00:07:20,620
その後、同じメニューを選んで

168
00:07:20,620 --> 00:07:23,675
Paste Component As New を選択します

169
00:07:23,675 --> 00:07:25,675
これで、同じ設定のコンポーネントの

170
00:07:25,675 --> 00:07:28,146
新しいコピーを貼り付けます

171
00:07:29,006 --> 00:07:31,006
今度は

172
00:07:31,006 --> 00:07:33,006
Offset X　を -14.3 に設定して

173
00:07:33,006 --> 00:07:35,006
Box Collider 2Dを

174
00:07:35,006 --> 00:07:39,513
X 軸に沿って反対側に置きます

175
00:07:40,831 --> 00:07:42,831
次に、同じ要領で

176
00:07:42,831 --> 00:07:45,496
上方と下方の壁を作成します

177
00:07:46,315 --> 00:07:49,092
Paste Component As New を再度選択し

178
00:07:49,092 --> 00:07:51,092
Box Collider 2D の

179
00:07:51,092 --> 00:07:52,867
3 つ目のコピーを作成します

180
00:07:53,453 --> 00:07:55,453
X と Y を入れ替えることによって

181
00:07:55,453 --> 00:07:58,727
その壁を正しい位置に移動します

182
00:07:59,326 --> 00:08:02,550
Size Y を 3.3 に

183
00:08:03,146 --> 00:08:06,482
Size X を 31.64 に設定します

184
00:08:10,254 --> 00:08:13,137
Offset X を 0

185
00:08:13,137 --> 00:08:15,896
Offset Y を 14.3 に設定します

186
00:08:17,144 --> 00:08:20,541
コンポーネントのコンテクストメニューを使用し

187
00:08:20,541 --> 00:08:23,453
3 番目のコライダーのコンポーネントの値をコピーし

188
00:08:25,284 --> 00:08:27,284
Paste Component As New を実行し

189
00:08:27,284 --> 00:08:29,284
4 つめの壁を作ります

190
00:08:31,753 --> 00:08:35,851
Offset Y を -14.3 に設定し

191
00:08:36,406 --> 00:08:37,548
完了です

192
00:08:37,548 --> 00:08:39,548
テストするには、プレイモードにします

193
00:08:45,899 --> 00:08:47,899
プレイヤーは4 つの壁すべてに衝突し

194
00:08:47,899 --> 00:08:50,951
プレイヤーフィールドにとどまります

195
00:08:50,951 --> 00:08:52,951
加えたボックスコライダーが

196
00:08:52,951 --> 00:08:56,168
互いにオーバーラップしても

197
00:08:56,168 --> 00:08:58,902
衝突したり飛んで行ったりすることはありません

198
00:08:58,902 --> 00:09:01,457
rigidbody2D がアタッチしていないので

199
00:09:01,457 --> 00:09:03,457
他方から力の作用を

200
00:09:03,457 --> 00:09:05,457
受けないためです

201
00:09:06,345 --> 00:09:08,345
静的な動かないオブジェクトを使って

202
00:09:08,345 --> 00:09:10,345
平面をレイアウトするとき

203
00:09:10,345 --> 00:09:12,345
コライダーがこのように互いに

204
00:09:12,345 --> 00:09:14,926
重複するのは一般的です

205
00:09:15,897 --> 00:09:17,897
次のビデオではカメラを動かして

206
00:09:17,897 --> 00:09:19,897
プレイヤーを追跡します

1
00:00:01,175 --> 00:00:03,446
So let's set up our play field.

2
00:00:03,446 --> 00:00:06,442
The play field for our game will be very simple.

3
00:00:06,442 --> 00:00:08,442
We will place walls around the edges

4
00:00:08,442 --> 00:00:10,966
to keep our player game object from falling off

5
00:00:10,966 --> 00:00:13,521
and we will create and place a set of collectable

6
00:00:13,521 --> 00:00:15,230
objects for our player to pick up.

7
00:00:15,938 --> 00:00:18,709
First let's create a new game object

8
00:00:18,709 --> 00:00:20,530
and rename it Walls.

9
00:00:20,530 --> 00:00:23,202
This will be an organising parent game object

10
00:00:23,202 --> 00:00:24,788
for our Wall objects.

11
00:00:25,550 --> 00:00:27,550
Reset this game object to origin.

12
00:00:28,271 --> 00:00:30,271
Now we will build our walls.

13
00:00:30,271 --> 00:00:32,271
Let's start by creating a new cube

14
00:00:32,271 --> 00:00:34,271
to be our first wall.

15
00:00:35,020 --> 00:00:37,714
Rename this West Wall.

16
00:00:39,316 --> 00:00:43,383
Now parent West Wall to our Walls game object.

17
00:00:45,140 --> 00:00:47,140
Let's focus our Scene view camera

18
00:00:47,140 --> 00:00:48,765
to our Wall object.

19
00:00:48,765 --> 00:00:51,192
We can do this by typing the F key

20
00:00:51,192 --> 00:00:53,192
while the cursor is over the Scene view

21
00:00:53,692 --> 00:00:56,989
or by selecting Edit - Frame Selected.

22
00:01:00,238 --> 00:01:02,238
We need to change the size of the cube to fit

23
00:01:02,238 --> 00:01:04,238
one side of our play area.

24
00:01:04,238 --> 00:01:08,886
Change the cube's transform scale of X, Y and Z to

25
00:01:08,886 --> 00:01:13,906
.5 for thin, 2 for tall and 20.5 for long.

26
00:01:14,641 --> 00:01:16,641
Now we can simply push the wall in to place

27
00:01:16,641 --> 00:01:18,460
using the Translate tool

28
00:01:18,460 --> 00:01:21,915
or we could enter a value in to the transform component.

29
00:01:21,915 --> 00:01:23,915
In this case we can set the transform's

30
00:01:23,915 --> 00:01:27,037
position X value to -10.

31
00:01:27,537 --> 00:01:30,487
This places the wall neatly to the edge of our play area.

32
00:01:31,747 --> 00:01:33,747
To create the next wall we could

33
00:01:33,747 --> 00:01:35,416
start with another new cube,

34
00:01:35,416 --> 00:01:37,416
but then we'd have to rescale this

35
00:01:37,416 --> 00:01:39,235
new cube before we placed it.

36
00:01:39,778 --> 00:01:43,717
Our current West Wall is already the perfect size.

37
00:01:43,717 --> 00:01:47,658
So let's duplicate the West Wall game object.

38
00:01:47,658 --> 00:01:49,658
Let's rename it East Wall.

39
00:01:50,821 --> 00:01:53,480
To place the wall simply remove the negative sign

40
00:01:53,480 --> 00:01:56,783
and it pops in to place on the east side of our game area.

41
00:01:57,490 --> 00:01:59,490
Now let's duplicate the east wall

42
00:02:01,012 --> 00:02:03,012
and call it North Wall.

43
00:02:04,921 --> 00:02:06,921
Reset the X position so the north wall

44
00:02:06,921 --> 00:02:08,921
is in the centre of the play area.

45
00:02:09,711 --> 00:02:11,406
We now have two choices.

46
00:02:11,406 --> 00:02:14,028
We can rotate the wall by 90 degrees.

47
00:02:14,028 --> 00:02:16,276
or, as this is a cuboid,

48
00:02:16,276 --> 00:02:23,402
we can rescale the wall to 20.5 in the X and 0.5 in the Z.

49
00:02:23,402 --> 00:02:25,402
Now it's scaled correctly for it's orientation

50
00:02:25,402 --> 00:02:27,402
as the north wall.

51
00:02:27,902 --> 00:02:29,902
We can drag the wall in to place or

52
00:02:29,902 --> 00:02:31,902
we can simply use the value of 10

53
00:02:31,902 --> 00:02:35,007
in the transform's position Z field to place it.

54
00:02:35,908 --> 00:02:39,461
Duplicate North Wall and call it South Wall,

55
00:02:39,961 --> 00:02:43,356
and -10 in the Z axis pops it in to place.

56
00:02:44,353 --> 00:02:46,353
Enter play mode and test.

57
00:02:48,248 --> 00:02:50,373
Fantastic, the walls work fine.

58
00:02:50,373 --> 00:02:52,651
Remember to test early and test often,

59
00:02:52,651 --> 00:02:54,651
don't wait to test.

60
00:02:55,469 --> 00:02:57,469
Let's highlight the player game object.

61
00:02:57,469 --> 00:03:01,249
and set the editor to local mode and try again.

62
00:03:01,249 --> 00:03:04,526
Note how in local mode we can see the transform rotate.

63
00:03:08,658 --> 00:03:10,199
Let's exit play mode.

64
00:03:11,089 --> 00:03:13,936
Next let's create our collectable objects

65
00:03:14,588 --> 00:03:16,588
Create a new cube

66
00:03:18,152 --> 00:03:20,152
and rename it PickUp.

67
00:03:22,351 --> 00:03:25,320
Reset the PickUp's transform to origin.

68
00:03:26,276 --> 00:03:29,293
Focus the scene view camera on the PickUp object.

69
00:03:30,290 --> 00:03:32,525
The player game object is in the way.

70
00:03:32,525 --> 00:03:34,525
Let's select the player game object

71
00:03:34,525 --> 00:03:36,525
and deselect the checkbox

72
00:03:36,525 --> 00:03:38,316
in front of the Name field.

73
00:03:38,984 --> 00:03:42,271
This is the game object's active checkbox.

74
00:03:42,271 --> 00:03:45,913
Deselecting it will deactivate the game object in the scene.

75
00:03:45,913 --> 00:03:47,913
This will give us a clear working space for

76
00:03:47,913 --> 00:03:49,733
our new PickUp object.

77
00:03:50,855 --> 00:03:52,855
The cube is buried in the plane, just like in our

78
00:03:52,855 --> 00:03:55,742
player's sphere was when we started this project.

79
00:03:55,742 --> 00:03:57,574
The cube is also a regular shape,

80
00:03:57,574 --> 00:03:59,574
1 by 1 by 1.

81
00:03:59,574 --> 00:04:01,383
so let's lift it up by half a unit

82
00:04:01,383 --> 00:04:03,383
and we know it's resting on the plane.

83
00:04:04,159 --> 00:04:06,159
This cube will be our pickup object.

84
00:04:06,991 --> 00:04:08,991
To be effective it must attract the attention

85
00:04:08,991 --> 00:04:10,991
of the player.

86
00:04:10,991 --> 00:04:13,565
So let's make the cube more attractive.

87
00:04:14,375 --> 00:04:16,652
We will start by making it smaller

88
00:04:16,652 --> 00:04:18,652
This will also give it the effect of floating

89
00:04:18,652 --> 00:04:20,293
above the play area.

90
00:04:20,293 --> 00:04:23,417
Both will help identify this object as special.

91
00:04:24,414 --> 00:04:27,266
Not enough however. Let's tilt it over.

92
00:04:27,266 --> 00:04:29,266
(45, 45, 45)  in each

93
00:04:29,266 --> 00:04:32,666
of the axis of the transform's rotation.

94
00:04:33,691 --> 00:04:35,691
Better but not sexy enough.

95
00:04:36,081 --> 00:04:39,105
One thing I feel certainly attracts the attention of a player

96
00:04:39,105 --> 00:04:42,767
and that is movement. So let's rotate the cube.

97
00:04:42,767 --> 00:04:44,767
To do this we need a script.

98
00:04:45,944 --> 00:04:49,029
With the PickUp object selected use the Add Component

99
00:04:49,029 --> 00:04:51,029
button in the Inspector.

100
00:04:51,029 --> 00:04:53,880
Create a new script called Rotator

101
00:04:54,850 --> 00:04:57,362
Click Create and Add to confirm.

102
00:04:57,862 --> 00:05:01,283
Organise the script by placing it in the Scripts folder

103
00:05:02,294 --> 00:05:04,294
and open it for editing.

104
00:05:06,631 --> 00:05:08,244
We want the cube to spin and

105
00:05:08,244 --> 00:05:10,065
we want to do it with this script.

106
00:05:10,578 --> 00:05:13,081
Let's remove the sample code we don't need.

107
00:05:13,912 --> 00:05:16,161
We will not be using forces, so we can use update

108
00:05:16,161 --> 00:05:17,981
rather than fixed update.

109
00:05:17,981 --> 00:05:20,395
We have already set the transform rotation

110
00:05:20,395 --> 00:05:22,395
in the transform component to 

111
00:05:22,395 --> 00:05:26,424
(45, 45, 45) for the X, Y and Z axis.

112
00:05:26,424 --> 00:05:29,187
But these values don't change by themselves.

113
00:05:29,187 --> 00:05:32,218
We want to change these values every frame

114
00:05:32,218 --> 00:05:34,218
To make the cube spin we don't want to

115
00:05:34,218 --> 00:05:36,120
set the transform rotation

116
00:05:36,120 --> 00:05:38,741
but we want to rotate the transform.

117
00:05:39,876 --> 00:05:43,172
Next type transform inside update.

118
00:05:44,031 --> 00:05:47,297
Select it and hold down the control key on the pc or

119
00:05:47,297 --> 00:05:51,020
the command key on the mac and type single quote.

120
00:05:51,423 --> 00:05:54,458
This brings up the transform page in the documentation.

121
00:05:55,110 --> 00:05:57,763
There are two main ways to effect the transform.

122
00:05:57,763 --> 00:06:00,708
These are Translate and Rotate.

123
00:06:00,708 --> 00:06:03,897
Translate moves the game object by it's transform.

124
00:06:03,897 --> 00:06:07,100
Rotate rotates the game object by it's transform.

125
00:06:07,503 --> 00:06:09,201
We will use Rotate.

126
00:06:09,699 --> 00:06:11,229
So let's click on the link

127
00:06:11,701 --> 00:06:14,580
and this brings up the page for Transform.Rotate.

128
00:06:15,149 --> 00:06:17,149
Even though the content of the code is nearly

129
00:06:17,149 --> 00:06:20,006
identical between Unity's Javascript and C#

130
00:06:20,006 --> 00:06:22,006
we are using C# for this project

131
00:06:22,006 --> 00:06:24,748
so let's change the language to C#.

132
00:06:27,734 --> 00:06:29,734
Note again the two signatures and the

133
00:06:29,734 --> 00:06:31,679
two possible overrides

134
00:06:31,679 --> 00:06:34,502
One using a vector3 and the other using

135
00:06:34,502 --> 00:06:37,027
three float values for X, Y and Z.

136
00:06:37,637 --> 00:06:40,753
Both overrides have the optional parameter Space,

137
00:06:40,753 --> 00:06:43,316
which we will leave at default for this lesson.

138
00:06:43,316 --> 00:06:45,316
Again we will choose the most simple

139
00:06:45,316 --> 00:06:48,827
form that only uses the vector3 for direction.

140
00:06:49,857 --> 00:06:51,526
Let's return to our code.

141
00:06:51,526 --> 00:06:54,256
After transform, and make sure transform is

142
00:06:54,256 --> 00:06:56,646
written to begin with a lowercase t,

143
00:06:56,646 --> 00:07:03,613
write .Rotate(new Vector3(15, 30, 45).

144
00:07:04,334 --> 00:07:06,582
Now this action also needs to be smooth

145
00:07:06,582 --> 00:07:08,388
and frame rate independent

146
00:07:08,388 --> 00:07:10,817
so we need to multiply the vector3 value

147
00:07:10,817 --> 00:07:12,817
by Time.deltaTime.

148
00:07:13,800 --> 00:07:16,395
Save this script and return to Unity.

149
00:07:17,489 --> 00:07:19,309
Test by entering play mode

150
00:07:19,309 --> 00:07:21,838
and our PickUp object rotates.

151
00:07:22,821 --> 00:07:24,334
Let's exit play mode.

152
00:07:25,376 --> 00:07:28,385
Okay, we have the start of a working pickup object.

153
00:07:28,385 --> 00:07:31,407
Next we want to place these around the game area

154
00:07:31,407 --> 00:07:33,021
but before we do this we need to do

155
00:07:33,021 --> 00:07:34,657
one important step.

156
00:07:35,272 --> 00:07:38,113
We need to make our PickUp object in to a prefab.

157
00:07:38,113 --> 00:07:40,347
So remember a prefab is an asset

158
00:07:40,347 --> 00:07:42,347
that contains a template or blueprint

159
00:07:42,347 --> 00:07:45,448
of a game object or game object family.

160
00:07:45,448 --> 00:07:47,448
We create a prefab from an existing game

161
00:07:47,448 --> 00:07:49,351
object or game object family

162
00:07:49,351 --> 00:07:51,767
and once created we can use this prefab

163
00:07:51,767 --> 00:07:54,074
in any scene in our current project.

164
00:07:54,074 --> 00:07:56,074
With the prefab of our PickUp object

165
00:07:56,074 --> 00:07:58,074
we will be able to make changes to a single

166
00:07:58,074 --> 00:08:00,074
instance in our scene, or to the 

167
00:08:00,074 --> 00:08:02,674
prefab asset itself and all of the PickUp

168
00:08:02,674 --> 00:08:04,674
objects in our game will be updated

169
00:08:04,674 --> 00:08:06,343
with those changes.

170
00:08:06,343 --> 00:08:08,343
So, first let's create a folder

171
00:08:08,343 --> 00:08:10,343
to hold our prefabs.

172
00:08:10,343 --> 00:08:12,343
We want this folder on our root or top

173
00:08:12,343 --> 00:08:13,938
level of our project,

174
00:08:13,938 --> 00:08:15,938
so select the Assets folder

175
00:08:15,938 --> 00:08:18,535
and then choose Create Folder.

176
00:08:19,781 --> 00:08:21,781
Rename this folder Prefabs.

177
00:08:22,737 --> 00:08:25,505
Now drag the PickUp game object from our hierarchy

178
00:08:25,505 --> 00:08:28,081
and place it in to our Prefabs folder.

179
00:08:28,081 --> 00:08:30,081
When we drag an item from our hierarchy

180
00:08:30,081 --> 00:08:32,081
in to our Project view we create a

181
00:08:32,081 --> 00:08:34,856
new prefab asset containing a template

182
00:08:34,856 --> 00:08:38,559
or blueprint of our game object or game object family.

183
00:08:40,661 --> 00:08:43,608
Before we spread our collectables around the game area

184
00:08:43,608 --> 00:08:45,608
we should create a new game object to

185
00:08:45,608 --> 00:08:49,213
hold our PickUps and to help organise our hierarchy.

186
00:08:49,213 --> 00:08:50,977
Let's create a new game object

187
00:08:51,477 --> 00:08:53,477
and call it PickUps.

188
00:08:53,977 --> 00:08:55,977
Check to make sure this parent game object

189
00:08:55,977 --> 00:08:59,777
is at origin and drag our PickUp game object in to it.

190
00:09:00,277 --> 00:09:02,277
Now we want to spread a number of these PickUp

191
00:09:02,277 --> 00:09:04,111
objects around the play area.

192
00:09:04,556 --> 00:09:06,735
First, make sure we have the PickUp

193
00:09:06,735 --> 00:09:09,056
game object selected, not the parent.

194
00:09:09,056 --> 00:09:11,523
Now let's move in to a top-down view

195
00:09:11,523 --> 00:09:13,523
by clicking on the gizmo in the upper right

196
00:09:13,523 --> 00:09:15,138
of our scene view.

197
00:09:15,138 --> 00:09:16,806
Let's back out a little so we can see

198
00:09:16,806 --> 00:09:18,233
the entire game area.

199
00:09:19,037 --> 00:09:21,845
Grab the PickUp game object and it doesn't move

200
00:09:21,845 --> 00:09:23,597
in the scene the way we want it to.

201
00:09:23,597 --> 00:09:25,597
Note how the cube is moving in relation to it's

202
00:09:25,597 --> 00:09:27,597
gizmo, which is tilted over.

203
00:09:28,097 --> 00:09:29,973
What we are seeing is the game object

204
00:09:29,973 --> 00:09:31,973
moving in local mode.

205
00:09:31,973 --> 00:09:33,973
We really want to move the PickUp game object

206
00:09:33,973 --> 00:09:35,973
aligned with the ground.

207
00:09:36,735 --> 00:09:39,539
Change the editor to Global mode.

208
00:09:39,539 --> 00:09:42,527
Now see how the orientation of the gizmo changes?

209
00:09:42,527 --> 00:09:44,527
And now we can drag our game object around

210
00:09:44,527 --> 00:09:46,911
relative to the world's global axis.

211
00:09:47,538 --> 00:09:50,521
So let's lay down a few of these in the game area.

212
00:09:51,021 --> 00:09:53,021
Take our first PickUp object and place it

213
00:09:53,021 --> 00:09:55,021
in to the game area some place convenient.

214
00:09:55,021 --> 00:09:57,021
I'm going to place mine at the top.

215
00:09:57,021 --> 00:09:59,860
With the game object selected, duplicate it.

216
00:09:59,860 --> 00:10:03,404
This can be done either by selecting Edit - Duplicate

217
00:10:03,877 --> 00:10:06,113
or by using the hot key combination,

218
00:10:06,113 --> 00:10:08,113
this is command-D on the mac

219
00:10:08,113 --> 00:10:10,113
or control-D on the pc.

220
00:10:10,889 --> 00:10:13,468
Now we place the second instance of the prefab.

221
00:10:13,968 --> 00:10:16,725
Using the hot keys we will create a few more,

222
00:10:16,725 --> 00:10:18,934
placing them around the play area.

223
00:10:18,934 --> 00:10:20,934
Note that I'm moving parallel to the ground

224
00:10:20,934 --> 00:10:23,410
or the X/Z plane by selecting the

225
00:10:23,410 --> 00:10:25,935
X/Z plane at the centre of the gizmo.

226
00:10:26,435 --> 00:10:28,435
Okay, that's 12.

227
00:10:28,435 --> 00:10:30,435
Let's hit play and test.

228
00:10:35,162 --> 00:10:36,554
Excellent.

229
00:10:36,554 --> 00:10:38,988
These PickUp prefabs are working great.

230
00:10:38,988 --> 00:10:40,631
In the next assignment we will learn how

231
00:10:40,631 --> 00:10:42,951
to pick them up and count them.

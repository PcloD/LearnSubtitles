1
00:00:01,133 --> 00:00:03,716
The camera doesn't move and from it's current position

2
00:00:03,716 --> 00:00:05,452
cannot see very much.

3
00:00:05,452 --> 00:00:08,290
We need to tie the camera to the player game object.

4
00:00:08,790 --> 00:00:11,477
First let's set the position of the camera.

5
00:00:11,477 --> 00:00:14,043
Let's lift it up by 10 units and tilt it

6
00:00:14,043 --> 00:00:16,043
down by about 45 degrees.

7
00:00:16,543 --> 00:00:19,027
Next let's make the camera a child of the

8
00:00:19,027 --> 00:00:21,027
player game object.

9
00:00:21,027 --> 00:00:23,593
This is a typical third-person setup,

10
00:00:23,593 --> 00:00:25,885
with the camera as a child of the player

11
00:00:25,885 --> 00:00:27,885
when we move the player's position

12
00:00:27,885 --> 00:00:29,885
the camera moves with it.

13
00:00:30,855 --> 00:00:34,505
When the player rotates the camera rotates as well.

14
00:00:36,220 --> 00:00:38,220
Let's look at this from a position where we

15
00:00:38,220 --> 00:00:41,608
can see both the player and the camera game object

16
00:00:42,550 --> 00:00:44,550
Move the player,

17
00:00:46,694 --> 00:00:48,378
rotate the player,

18
00:00:48,378 --> 00:00:50,378
the child camera moves with it.

19
00:00:51,417 --> 00:00:53,915
Now let's reset the player and test.

20
00:00:55,202 --> 00:00:59,293
We enter play move, hold down the up arrow to move,

21
00:00:59,293 --> 00:01:01,058
Whoa what's happening here?

22
00:01:01,058 --> 00:01:04,530
Okay, well as the camera is a child of the

23
00:01:04,530 --> 00:01:07,101
player's sphere, even thought the camera is not

24
00:01:07,101 --> 00:01:10,680
moving at all relative to the player's game object,

25
00:01:10,680 --> 00:01:13,204
the player game object is rotating like crazy

26
00:01:13,204 --> 00:01:15,729
so the camera's point of view rotates with it.

27
00:01:15,729 --> 00:01:17,257
Let's exit play mode.

28
00:01:18,102 --> 00:01:20,102
Unlike a normal third-person game

29
00:01:20,102 --> 00:01:23,597
our player game object is rotating on all 3 axis

30
00:01:23,597 --> 00:01:25,597
not just 1.

31
00:01:25,597 --> 00:01:27,597
In a typical third-person setup

32
00:01:27,597 --> 00:01:30,828
the camera as a child of the player game object

33
00:01:30,828 --> 00:01:32,828
will always be in a position relative

34
00:01:32,828 --> 00:01:34,464
to it's immediate parent

35
00:01:34,464 --> 00:01:36,464
and this position will be the parent's

36
00:01:36,464 --> 00:01:40,039
position in the game, modified or offset by

37
00:01:40,039 --> 00:01:42,453
any values in the child's transform.

38
00:01:42,453 --> 00:01:44,453
We can't have the camera as a child of

39
00:01:44,453 --> 00:01:46,453
the player, so let's detach it.

40
00:01:47,588 --> 00:01:49,588
Our offset value will be the difference

41
00:01:49,588 --> 00:01:52,186
between the player game object and the camera.

42
00:01:52,686 --> 00:01:55,617
As the player game object is just above origin

43
00:01:55,617 --> 00:01:58,452
or just above (0, 0, 0).

44
00:01:58,452 --> 00:02:00,452
For simplicity in this assignment we will use

45
00:02:00,452 --> 00:02:02,854
the camera's transform position value

46
00:02:02,854 --> 00:02:04,702
as the offset value.

47
00:02:04,702 --> 00:02:06,702
This is because the camera's position is based on

48
00:02:06,702 --> 00:02:08,702
the distance from origin, which is very close

49
00:02:08,702 --> 00:02:10,702
to that of the player game object.

50
00:02:11,547 --> 00:02:13,547
Now we need to associate the camera with

51
00:02:13,547 --> 00:02:15,950
the player game object, not as a child

52
00:02:15,950 --> 00:02:17,586
but with a script.

53
00:02:18,450 --> 00:02:22,345
Using the Add Component button choose New Script.

54
00:02:23,743 --> 00:02:25,743
We are writing in C#

55
00:02:27,403 --> 00:02:30,454
and name the script CameraController

56
00:02:30,454 --> 00:02:32,675
and then click on Create and Add

57
00:02:32,675 --> 00:02:34,675
or simply hit the return or enter key

58
00:02:34,675 --> 00:02:36,565
to confirm our selection.

59
00:02:36,565 --> 00:02:39,317
We should note, this way of creating a script

60
00:02:39,317 --> 00:02:41,317
will create that script asset on

61
00:02:41,317 --> 00:02:44,141
the root or top level of our project view.

62
00:02:45,967 --> 00:02:48,589
File  CameraController in the scripts folder

63
00:02:49,417 --> 00:02:51,417
and open it for editing.

64
00:02:53,243 --> 00:02:55,243
We need 2 variables here.

65
00:02:56,185 --> 00:02:59,111
A public game object reference to the player

66
00:02:59,611 --> 00:03:05,378
and a private vector3 to hold our offset value.

67
00:03:05,378 --> 00:03:07,378
Offset is private because we can

68
00:03:07,378 --> 00:03:09,820
set that value here in the script.

69
00:03:10,251 --> 00:03:12,251
For our offset value we will use the

70
00:03:12,251 --> 00:03:14,542
camera's current transform position.

71
00:03:15,042 --> 00:03:20,425
So in start we can make offset equal transform position.

72
00:03:21,404 --> 00:03:24,177
And then every frame we set our

73
00:03:24,177 --> 00:03:28,487
transform position to the player's transform position

74
00:03:28,487 --> 00:03:30,487
pus the offset.

75
00:03:32,437 --> 00:03:35,797
However, update is not the best place for this code.

76
00:03:35,797 --> 00:03:38,297
For follow cameras, procedural animation,

77
00:03:38,297 --> 00:03:40,603
and gathering last known states

78
00:03:40,603 --> 00:03:43,147
it's best to use LateUpdate.

79
00:03:43,771 --> 00:03:46,419
So let's test this. Let's save our script

80
00:03:46,419 --> 00:03:48,058
and return to Unity.

81
00:03:48,862 --> 00:03:51,591
First we need to create a reference to the

82
00:03:51,591 --> 00:03:53,591
player game object by dragging the player

83
00:03:53,591 --> 00:03:56,856
game object in to the Player slot

84
00:03:56,856 --> 00:03:58,856
in the camera controller's component.

85
00:03:59,784 --> 00:04:01,784
Enter play mode

86
00:04:04,328 --> 00:04:06,328
and now we get the behaviour we want.

87
00:04:08,347 --> 00:04:10,347
The camera follows the rolling ball

88
00:04:10,347 --> 00:04:12,002
without rotating

89
00:04:12,640 --> 00:04:14,807
even as the ball goes over the edge.

90
00:04:17,876 --> 00:04:19,876
In the next assignment we will setup the basic

91
00:04:19,876 --> 00:04:21,876
play area and create and place our

92
00:04:21,876 --> 00:04:23,876
special pick-up objects.

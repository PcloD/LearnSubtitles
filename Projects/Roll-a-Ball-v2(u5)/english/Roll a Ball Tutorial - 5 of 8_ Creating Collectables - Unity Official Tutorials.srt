1
00:00:02,167 --> 00:00:04,991
Next let's create our collectable objects.

2
00:00:05,841 --> 00:00:07,841
Create a new cube

3
00:00:09,324 --> 00:00:11,324
and rename it PickUp.

4
00:00:13,457 --> 00:00:16,360
Reset the Pickup's transform to origin.

5
00:00:17,493 --> 00:00:20,425
Focus the scene view camera on the Pickup object.

6
00:00:21,477 --> 00:00:23,477
The Player game object is in the way.

7
00:00:24,850 --> 00:00:26,850
Let's select the Player game object

8
00:00:26,850 --> 00:00:30,321
and deselect the checkbox in front of the Name field.

9
00:00:31,313 --> 00:00:34,572
This is the game object's Active checkbox.

10
00:00:34,572 --> 00:00:38,152
Deselecting it will deactivate the game object in the scene.

11
00:00:38,152 --> 00:00:40,152
This will give us a clear working space

12
00:00:40,152 --> 00:00:42,152
for our new Pickup object.

13
00:00:43,133 --> 00:00:45,631
The cube is buried in the plane, just like our player

14
00:00:45,631 --> 00:00:47,631
sphere was when we started this project.

15
00:00:48,081 --> 00:00:51,908
The cube is also a regular shape, 1 by 1 by 1.

16
00:00:51,908 --> 00:00:53,780
So let's lift it up by half a unit

17
00:00:53,780 --> 00:00:55,780
and we know it's resting on the plane.

18
00:00:56,472 --> 00:00:58,472
This cube will be our Pickup object.

19
00:00:59,372 --> 00:01:02,842
To be effective it must attract the attention of the Player.

20
00:01:03,338 --> 00:01:05,663
So let's make the cube more attractive.

21
00:01:06,725 --> 00:01:08,725
We will start by making it smaller.

22
00:01:09,002 --> 00:01:12,619
This will also give it the effect of floating in above the play area.

23
00:01:12,619 --> 00:01:15,126
Both will help identify this object as special.

24
00:01:16,684 --> 00:01:18,085
Not enough however. 

25
00:01:18,085 --> 00:01:19,584
Let's tilt it over.

26
00:01:19,584 --> 00:01:22,985
45, 45, 45 in each of the axis

27
00:01:22,985 --> 00:01:24,985
of the transform's rotation.

28
00:01:26,000 --> 00:01:27,816
Better, but not sexy enough.

29
00:01:28,358 --> 00:01:31,496
One thing I feel certainly attracts the attention of a player,

30
00:01:31,496 --> 00:01:32,936
and that is movement.

31
00:01:32,936 --> 00:01:34,866
So let's rotate the cube.

32
00:01:35,212 --> 00:01:37,212
To do this we need a script.

33
00:01:38,239 --> 00:01:40,182
With the Pickup object selected

34
00:01:40,182 --> 00:01:43,040
use the Add Component button in the Inspector.

35
00:01:43,548 --> 00:01:45,941
Create a new script called Rotator.

36
00:01:47,141 --> 00:01:49,141
Click Create and Add to confirm.

37
00:01:50,283 --> 00:01:53,139
Organise the script by placing it in the Scripts folder,

38
00:01:54,627 --> 00:01:56,627
and open it for editing.

39
00:01:58,947 --> 00:02:00,529
We want the cube to spin,

40
00:02:00,529 --> 00:02:02,529
and we want to do it with this script.

41
00:02:02,933 --> 00:02:05,083
Let's remove the sample code we don't need.

42
00:02:06,225 --> 00:02:08,016
We will not be using forces, so we can use

43
00:02:08,016 --> 00:02:10,016
update rather than fixed update.

44
00:02:10,397 --> 00:02:12,735
We have already set the transform rotation

45
00:02:12,735 --> 00:02:16,383
in the transform component to 45, 45, 45

46
00:02:16,383 --> 00:02:18,706
for the X, Y and Z axis.

47
00:02:18,706 --> 00:02:21,518
But these values don't change by themselves.

48
00:02:21,518 --> 00:02:24,027
We want to change these values every frame.

49
00:02:24,592 --> 00:02:26,592
To make the cube spin we don't want to

50
00:02:26,592 --> 00:02:28,453
set the transform rotation,

51
00:02:28,453 --> 00:02:30,718
but we want to rotate the transform.

52
00:02:32,195 --> 00:02:35,134
Next type Transform inside update.

53
00:02:36,311 --> 00:02:39,555
Select it and hold down the control key on the PC

54
00:02:39,555 --> 00:02:41,555
or the command key on the Mac

55
00:02:41,555 --> 00:02:43,555
and type single quote.

56
00:02:43,947 --> 00:02:48,209
Again, this brings up the page with a search term Transform.

57
00:02:48,821 --> 00:02:50,821
Select Transform.

58
00:02:51,409 --> 00:02:54,364
This brings up the Transform page in the documentation.

59
00:02:55,137 --> 00:02:57,712
There are two main ways to effect the transform.

60
00:02:57,712 --> 00:03:00,303
These are Translate and Rotate.

61
00:03:00,811 --> 00:03:03,588
Translate moves the game object by it's transform.

62
00:03:03,923 --> 00:03:06,833
Rotate rotates the game object by it's transform.

63
00:03:07,479 --> 00:03:09,083
We will use Rotate.

64
00:03:09,802 --> 00:03:11,150
So let's click on the link,

65
00:03:11,664 --> 00:03:14,221
and this brings up the page for Transform Rotate.

66
00:03:14,913 --> 00:03:16,728
Note again the two signatures

67
00:03:16,728 --> 00:03:18,867
and the two possible overrides.

68
00:03:18,867 --> 00:03:21,672
One using a vector3 and the other using

69
00:03:21,672 --> 00:03:24,110
three float values for X, Y and Z.

70
00:03:24,768 --> 00:03:27,487
Both overrides have the optional parameter Space.

71
00:03:27,949 --> 00:03:29,949
Which we will leave at Default for this lesson.

72
00:03:30,514 --> 00:03:32,514
Again we will choose the most simple

73
00:03:32,514 --> 00:03:35,639
form that only uses the vector3 for direction.

74
00:03:37,035 --> 00:03:39,035
Let's return to our code.

75
00:03:39,773 --> 00:03:42,888
After transform, and make sure transform is written

76
00:03:42,888 --> 00:03:44,888
to begin with a lowercase T,

77
00:03:44,888 --> 00:03:51,521
write Rotate (new Vector3 (15, 30, 45)

78
00:03:52,588 --> 00:03:54,588
Now this action also needs to be smooth

79
00:03:54,588 --> 00:03:56,588
and frame rate independent.

80
00:03:56,588 --> 00:03:59,077
So we need to multiply the vector3 value

81
00:03:59,077 --> 00:04:01,077
by Time.deltaTime.

82
00:04:02,027 --> 00:04:04,027
Save this script and return to Unity.

83
00:04:06,727 --> 00:04:11,324
Test by entering play mode, and our Pickup object rotates.

84
00:04:13,057 --> 00:04:14,402
Let's exit play mode.

85
00:04:15,607 --> 00:04:18,627
Okay, we have the start of a working Pickup object.

86
00:04:18,627 --> 00:04:21,524
Next we want to place these around the game area.

87
00:04:21,524 --> 00:04:24,829
But before we do this we need to do one important step.

88
00:04:25,429 --> 00:04:28,393
We need to make our Pickup object in to a prefab.

89
00:04:28,393 --> 00:04:31,719
So remember, a prefab is an asset that contains a template,

90
00:04:31,719 --> 00:04:35,688
or blueprint of a game object or game object family.

91
00:04:35,688 --> 00:04:38,072
We create a prefab from an existing game object

92
00:04:38,072 --> 00:04:40,594
or game object family, and once created,

93
00:04:40,594 --> 00:04:44,303
we can use this prefab in any scene in our current project.

94
00:04:44,303 --> 00:04:46,303
With a prefab of our Pickup object

95
00:04:46,303 --> 00:04:48,303
we will be able to make changes to a single

96
00:04:48,303 --> 00:04:49,836
instance in our scene,

97
00:04:49,836 --> 00:04:51,836
or to the prefab asset itself,

98
00:04:51,836 --> 00:04:54,253
and all of the Pickup objects in our game

99
00:04:54,253 --> 00:04:56,253
will be updated with those changes.

100
00:04:56,603 --> 00:05:00,456
So first let's create a folder to hold our prefabs.

101
00:05:00,456 --> 00:05:04,064
We want this folder on our root, or top level of our project.

102
00:05:04,831 --> 00:05:06,831
So select the project view

103
00:05:06,831 --> 00:05:10,359
and make sure that no other item or directory is highlighted.

104
00:05:11,326 --> 00:05:14,771
And then choose Create - Folder

105
00:05:15,588 --> 00:05:17,588
Rename this folder Prefabs.

106
00:05:18,505 --> 00:05:21,331
Now drag the Pickup game object from our hierarchy

107
00:05:21,331 --> 00:05:23,695
and place it in to our Prefabs folder.

108
00:05:24,981 --> 00:05:26,981
When we drag an item from our hierarchy

109
00:05:26,981 --> 00:05:30,572
in to our project view we create a new prefab asset

110
00:05:30,572 --> 00:05:32,572
containing a template, or blueprint

111
00:05:32,572 --> 00:05:34,572
of our game object or game object family.

112
00:05:37,405 --> 00:05:40,357
Before we spread our collectables around the game area

113
00:05:40,357 --> 00:05:42,190
we should create a new game object

114
00:05:42,190 --> 00:05:45,550
to hold our Pickups and to help organise our hierarchy.

115
00:05:46,050 --> 00:05:47,717
Let's create a new game object

116
00:05:48,301 --> 00:05:50,132
and call it Pickups.

117
00:05:50,818 --> 00:05:53,969
Check to make sure this parent game object is at origin

118
00:05:54,602 --> 00:05:57,190
and drag our Pickup game object in to it.

119
00:05:58,669 --> 00:06:00,669
Now we want to spread a number of these Pickup

120
00:06:00,669 --> 00:06:02,534
objects around the play area.

121
00:06:02,952 --> 00:06:05,680
First, make sure we have the Pickup game object

122
00:06:05,680 --> 00:06:07,680
selected, not the parent.

123
00:06:09,347 --> 00:06:12,052
Now let's move in to a top-down view

124
00:06:12,052 --> 00:06:15,420
by clicking on the gizmo in to upper-right of our scene view.

125
00:06:15,420 --> 00:06:18,639
Let's back out a little so we can see the entire game area.

126
00:06:19,306 --> 00:06:21,070
Grab the Pickup game object,

127
00:06:21,070 --> 00:06:23,871
and it doesn't move in the scene the way we want it to.

128
00:06:23,871 --> 00:06:25,871
Note how the cube is moving in relation to

129
00:06:25,871 --> 00:06:27,871
it's gizmo, which is tilted over.

130
00:06:28,388 --> 00:06:32,174
What we are seeing is the game object moving in local mode.

131
00:06:32,174 --> 00:06:34,174
We really want to move the Pickup game object

132
00:06:34,174 --> 00:06:36,174
aligned with the ground.

133
00:06:37,141 --> 00:06:39,141
Change the editor to Global mode.

134
00:06:39,808 --> 00:06:42,779
Now see how the orientation of the gizmo changes?

135
00:06:42,779 --> 00:06:44,779
And now we can drag our game object around

136
00:06:44,779 --> 00:06:46,779
relative to the world's global axis.

137
00:06:47,879 --> 00:06:50,562
So let's lay down a few of these in the game area.

138
00:06:51,262 --> 00:06:52,880
Take our first Pickup object

139
00:06:52,880 --> 00:06:55,286
and place it in to the game area, some place convenient.

140
00:06:55,286 --> 00:06:57,286
I'm going to place mine at the top.

141
00:06:57,286 --> 00:07:00,069
With the game object selected, duplicate it.

142
00:07:00,069 --> 00:07:04,104
This can be done either by selecting Edit - Duplicate

143
00:07:04,104 --> 00:07:08,344
or by using the hot key combination, this is command-D on the Mac

144
00:07:08,344 --> 00:07:10,344
or control-D on the PC.

145
00:07:11,177 --> 00:07:13,713
Now we place the second instance of the prefab.

146
00:07:14,146 --> 00:07:17,009
Using the hot keys we will create a few more,

147
00:07:17,009 --> 00:07:18,757
placing them around the play area.

148
00:07:19,159 --> 00:07:22,670
Note that I'm moving parallel to the ground or the X/Z plane

149
00:07:22,670 --> 00:07:26,239
by selecting the X/Z plane at the centre of the gizmo.

150
00:07:26,689 --> 00:07:28,655
Okay, that's 12.

151
00:07:28,655 --> 00:07:30,655
Let's hit play and test.

152
00:07:38,105 --> 00:07:39,554
Excellent.

153
00:07:39,554 --> 00:07:41,554
These Pickup prefabs are working great.

154
00:07:43,654 --> 00:07:45,654
The only thing that I want them to do now

155
00:07:45,654 --> 00:07:47,654
is stand out more against the background

156
00:07:47,654 --> 00:07:49,654
walls and Player game object.

157
00:07:50,571 --> 00:07:52,571
Let's change their colour/

158
00:07:52,971 --> 00:07:54,971
To do this we need another material.

159
00:07:55,988 --> 00:07:57,988
To make things easy we can simply

160
00:07:57,988 --> 00:08:01,313
select our existing material and duplicate it.

161
00:08:02,030 --> 00:08:04,030
Let's rename this new material Pickup.

162
00:08:05,163 --> 00:08:07,671
With the material selected in the project view

163
00:08:07,671 --> 00:08:11,311
let's change the albido colour property to yellow.

164
00:08:12,144 --> 00:08:14,702
Now we can change the colour of the prefab

165
00:08:14,702 --> 00:08:16,702
by changing the prefab's material.

166
00:08:17,635 --> 00:08:19,635
We can do this in two ways.

167
00:08:20,318 --> 00:08:22,135
We can change the material on just

168
00:08:22,135 --> 00:08:24,135
one instantiated prefab

169
00:08:25,035 --> 00:08:27,035
If we do this we must remember to

170
00:08:27,035 --> 00:08:29,035
use the Apply button to apply

171
00:08:29,035 --> 00:08:31,316
those changes to the prefab asset.

172
00:08:31,316 --> 00:08:33,783
Otherwise we will only change the material

173
00:08:33,783 --> 00:08:35,783
on this single instance.

174
00:08:37,450 --> 00:08:40,326
The other way, which is perhaps more simple

175
00:08:40,326 --> 00:08:42,326
is to simply change the material on the

176
00:08:42,326 --> 00:08:44,326
prefab asset directly.

177
00:08:46,193 --> 00:08:48,193
Let's hit play and test.

178
00:08:50,610 --> 00:08:52,610
There, that looks better.

179
00:08:54,194 --> 00:08:56,025
In the next assignment we will learn how to

180
00:08:56,025 --> 00:08:58,025
pick them up and count them.

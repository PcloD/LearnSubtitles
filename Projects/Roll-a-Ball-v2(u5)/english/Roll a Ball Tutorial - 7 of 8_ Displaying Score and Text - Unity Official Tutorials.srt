1
00:00:03,096 --> 00:00:05,920
Counting, displaying text and ending the game.

2
00:00:05,920 --> 00:00:07,920
We need a tool to store the value

3
00:00:07,920 --> 00:00:09,530
of our counted collectables.

4
00:00:09,530 --> 00:00:11,530
And another tool to add to that value

5
00:00:11,530 --> 00:00:13,530
as we collect and count them.

6
00:00:13,530 --> 00:00:16,604
Let's add this tool to our PlayerController script.

7
00:00:17,035 --> 00:00:19,607
Select the Player game object and open the 

8
00:00:19,607 --> 00:00:21,607
PlayerController script for editing.

9
00:00:24,980 --> 00:00:27,839
Let's add a private variable to hold our count.

10
00:00:27,839 --> 00:00:29,839
This will be an int, as our count will be

11
00:00:29,839 --> 00:00:33,023
a whole number, we won't be collecting partial objects,

12
00:00:33,023 --> 00:00:35,023
and let's call it Count.

13
00:00:36,145 --> 00:00:38,145
So in our game we will first start

14
00:00:38,145 --> 00:00:39,656
with a count of 0.

15
00:00:39,656 --> 00:00:41,656
Then we will need to increment our count value

16
00:00:41,656 --> 00:00:44,282
by 1 when we pick up a new object.

17
00:00:44,999 --> 00:00:47,540
First we need to set our count value to 0.

18
00:00:47,540 --> 00:00:49,762
As this variable is private we don't have

19
00:00:49,762 --> 00:00:51,762
any access to it in the Inspector.

20
00:00:51,762 --> 00:00:55,454
This variable is only available for use within this script

21
00:00:55,454 --> 00:00:58,044
and as such we will need to set it's starting value

22
00:00:58,044 --> 00:00:59,695
here in the script.

23
00:00:59,695 --> 00:01:01,695
There are several ways we can set the starting value

24
00:01:01,695 --> 00:01:03,695
of Count, but in this assignment we will

25
00:01:03,695 --> 00:01:05,695
do it in the Start function.

26
00:01:06,361 --> 00:01:10,956
In Start set our Count to be equal to 0.

27
00:01:11,981 --> 00:01:13,981
Next we need to add to Count when we pick up

28
00:01:13,981 --> 00:01:16,284
our collectable game objects.

29
00:01:16,284 --> 00:01:19,322
We will pick up our objects in OnTriggerEnter

30
00:01:19,322 --> 00:01:23,104
if the Other game object has the tag Pickup.

31
00:01:23,104 --> 00:01:25,807
So this is where we add our counting code.

32
00:01:25,807 --> 00:01:27,807
After setting the other game objects

33
00:01:27,807 --> 00:01:32,052
active state to False we add our new value of Count

34
00:01:32,052 --> 00:01:36,649
is equal to our old value of Count plus 1.

35
00:01:37,563 --> 00:01:40,113
There are other ways to add, count up or increment

36
00:01:40,113 --> 00:01:41,833
the value when coding for Unity,

37
00:01:41,833 --> 00:01:43,833
but this one is very easy to understand and 

38
00:01:43,833 --> 00:01:46,645
this is the one that we're going to use in this assignment.

39
00:01:47,145 --> 00:01:49,145
Save this script and return to Unity.

40
00:01:51,406 --> 00:01:53,750
Now we can store and increment our count

41
00:01:53,750 --> 00:01:55,750
but we have no way of displaying it.

42
00:01:56,123 --> 00:01:57,653
It would also be good to display a message

43
00:01:57,653 --> 00:01:59,181
when the game is over.

44
00:01:59,888 --> 00:02:01,888
To display text in this assignment we will

45
00:02:01,888 --> 00:02:04,268
be using Unity's UI Toolset

46
00:02:04,268 --> 00:02:06,692
to display our text and values.

47
00:02:07,476 --> 00:02:10,242
First let's create a new UI text element

48
00:02:10,242 --> 00:02:13,136
from the hierarchy's Create menu.

49
00:02:18,215 --> 00:02:20,867
Let's look at what we've added to the hierarchy.

50
00:02:20,867 --> 00:02:23,612
We seem to have gotten more than we bargained for.

51
00:02:24,313 --> 00:02:26,759
We don't just have a UI text element,

52
00:02:26,759 --> 00:02:28,759
but we've also created a parent

53
00:02:28,759 --> 00:02:32,216
canvas element and an event systems game object.

54
00:02:32,993 --> 00:02:35,918
These are all required by the UI toolset.

55
00:02:36,619 --> 00:02:38,837
The single most important thing to know about

56
00:02:38,837 --> 00:02:42,132
these additional items is that all UI elements must

57
00:02:42,132 --> 00:02:45,715
be the child of a canvas to behave correctly.

58
00:02:46,549 --> 00:02:48,964
For more information on the UI tools,

59
00:02:48,964 --> 00:02:51,964
including the canvas and the events system

60
00:02:51,964 --> 00:02:54,398
please see the information linked below.

61
00:02:56,975 --> 00:02:59,947
Rename the text element CountText.

62
00:03:00,686 --> 00:03:03,111
So let's customise this element a bit.

63
00:03:03,803 --> 00:03:05,803
The default text is a bit dark.

64
00:03:07,214 --> 00:03:09,404
Let's make the text colour white,

65
00:03:09,404 --> 00:03:11,023
so it's easier to see.

66
00:03:11,648 --> 00:03:13,648
The size and alignment are good.

67
00:03:14,340 --> 00:03:16,628
And let's add some placeholder text

68
00:03:16,628 --> 00:03:18,628
Count Text.

69
00:03:20,721 --> 00:03:23,473
We want our text to display in the upper left

70
00:03:23,473 --> 00:03:25,776
of the screen when the game is playing.

71
00:03:26,430 --> 00:03:28,866
We can see that the UI text is currently

72
00:03:28,866 --> 00:03:31,630
displaying in the centre of the screen in the game view.

73
00:03:32,492 --> 00:03:34,992
This is because the text element is anchored

74
00:03:34,992 --> 00:03:36,775
to the centre of it's parent,

75
00:03:36,775 --> 00:03:39,192
which is, in this case, the canvas.

76
00:03:39,884 --> 00:03:43,026
It is worth noting that the transform component on UI elements

77
00:03:43,026 --> 00:03:45,969
is different from the other game objects in Unity.

78
00:03:46,679 --> 00:03:50,082
For UI elements the standard transform has been replaced

79
00:03:50,082 --> 00:03:52,365
with the rect transform,

80
00:03:52,365 --> 00:03:55,175
which takes in to account many specialised features

81
00:03:55,175 --> 00:03:57,963
necessary for a versatile UI system,

82
00:03:57,963 --> 00:04:00,586
including anchoring and positioning.

83
00:04:00,586 --> 00:04:03,482
For more information on the rect transform

84
00:04:03,482 --> 00:04:05,482
please see the information linked below.

85
00:04:06,325 --> 00:04:08,515
One of the easiest ways to move the 

86
00:04:08,515 --> 00:04:10,666
count text element in to the upper left

87
00:04:10,666 --> 00:04:12,666
is to anchor it to the upper left corner of

88
00:04:12,666 --> 00:04:15,213
the canvas, rather than to it's centre.

89
00:04:15,971 --> 00:04:19,071
To do this open the Anchors and Presets menu

90
00:04:19,071 --> 00:04:22,928
by clicking on the button displaying the current anchor preset.

91
00:04:23,752 --> 00:04:25,600
When we re-anchor this text element

92
00:04:25,600 --> 00:04:27,477
we also want to set the pivot

93
00:04:27,477 --> 00:04:30,425
and the position based on the new anchor.

94
00:04:31,031 --> 00:04:34,389
So we will hold down both the Shift and the Alt keys

95
00:04:34,891 --> 00:04:37,405
and the select the upper left corner button.

96
00:04:37,879 --> 00:04:39,879
That's done it, it's up in the corner.

97
00:04:41,035 --> 00:04:43,035
But now it looks budged up against the

98
00:04:43,035 --> 00:04:44,751
corner of the game view.

99
00:04:45,424 --> 00:04:47,529
Let's give it some space between the text

100
00:04:47,529 --> 00:04:49,529
and the edges of the screen.

101
00:04:50,031 --> 00:04:53,371
As we are anchored to the upper left corner of the canvas

102
00:04:53,371 --> 00:04:56,802
and we have set our pivot to the upper left corner as well

103
00:04:56,802 --> 00:05:00,328
the easiest way to give the text a little breathing room

104
00:05:00,328 --> 00:05:02,328
is to change the rect transform's

105
00:05:02,328 --> 00:05:04,890
Pos X and Pos Y values.

106
00:05:05,847 --> 00:05:08,262
10 and -10 seems about right,

107
00:05:08,262 --> 00:05:12,101
with some room around it, yet it's still up and out of the way.

108
00:05:16,904 --> 00:05:19,207
So let's wire up the UI text element

109
00:05:19,207 --> 00:05:21,207
to display our count value.

110
00:05:21,917 --> 00:05:25,187
Start by opening the PlayerController script for editing.

111
00:05:27,612 --> 00:05:31,046
Before we can code anything related to any UI elements

112
00:05:31,046 --> 00:05:33,795
we need to tell our script more about them.

113
00:05:34,771 --> 00:05:37,238
The details about the UI toolset

114
00:05:37,238 --> 00:05:39,854
are held in what's called a namespace.

115
00:05:40,631 --> 00:05:43,067
We need to use this namespace

116
00:05:43,067 --> 00:05:47,071
just as we are using UnityEngine and System.Collections.

117
00:05:47,896 --> 00:05:51,321
So to do this, at the top of our script write

118
00:05:51,321 --> 00:05:54,774
using UnityEngine.UI.

119
00:05:55,555 --> 00:05:58,502
With this in place we can now write our code.

120
00:05:59,389 --> 00:06:03,310
First create a new public text variable

121
00:06:03,310 --> 00:06:05,023
called countText

122
00:06:05,023 --> 00:06:07,023
to hold a reference to the UI text

123
00:06:07,023 --> 00:06:09,023
component on our UI

124
00:06:09,023 --> 00:06:11,023
text game object.

125
00:06:11,411 --> 00:06:13,299
We need to set the starting value of the

126
00:06:13,299 --> 00:06:15,744
UI text's Text property.

127
00:06:16,858 --> 00:06:18,858
We can do this in Start as well.

128
00:06:19,352 --> 00:06:27,258
Write countText.Text =  "Count: "

129
00:06:27,258 --> 00:06:32,115
+ count.ToString, and we need the parenthesis.

130
00:06:32,527 --> 00:06:34,527
Now this line of code must be written

131
00:06:34,527 --> 00:06:37,149
after the line setting our count value.

132
00:06:37,649 --> 00:06:41,586
Count must have some value for us to set a text with.

133
00:06:42,654 --> 00:06:44,654
Now we also need to update this text property

134
00:06:44,654 --> 00:06:47,164
every time we pick up a new collectable

135
00:06:47,164 --> 00:06:50,189
so in OnTriggerEnter after we increment our count

136
00:06:50,189 --> 00:06:52,012
value let's write again

137
00:06:52,012 --> 00:06:59,178
countText.Text = 'Count: ' + count.ToString();

138
00:07:00,137 --> 00:07:03,423
Hmm, we've now written the same line of code

139
00:07:03,423 --> 00:07:05,748
twice in the same script.

140
00:07:05,748 --> 00:07:07,748
This is generally bad form.

141
00:07:08,470 --> 00:07:10,470
One way to make this a little more elegant

142
00:07:10,470 --> 00:07:13,706
is to create a function that does the work in one place

143
00:07:13,706 --> 00:07:16,787
and we simply call this function every time we need it.

144
00:07:17,494 --> 00:07:21,112
Let's create a new function with void SetCountText

145
00:07:21,112 --> 00:07:24,117
and then an empty set of parenthesis and brackets.

146
00:07:25,031 --> 00:07:28,050
Now let's move one instance of this line of code

147
00:07:28,050 --> 00:07:30,779
in to the function by cutting and pasting it.

148
00:07:32,015 --> 00:07:34,015
And in it's place let's put a line of code

149
00:07:34,015 --> 00:07:35,806
simply calling the function.

150
00:07:37,422 --> 00:07:39,345
Finally let's replace the other line with

151
00:07:39,345 --> 00:07:41,345
the function call as well.

152
00:07:43,760 --> 00:07:47,019
Excellent. Save and swap back to Unity.

153
00:07:49,657 --> 00:07:51,657
Now we see our PlayerController script has

154
00:07:51,657 --> 00:07:53,657
a new text property. 

155
00:07:54,576 --> 00:07:56,886
We can associate a reference to our Count text

156
00:07:56,886 --> 00:07:58,886
simply by dragging and dropping the

157
00:07:58,886 --> 00:08:01,870
CountText game object on to the slot.

158
00:08:02,700 --> 00:08:04,700
Unity will find the text component

159
00:08:04,700 --> 00:08:09,669
on the game object and correctly associate the reference.

160
00:08:10,381 --> 00:08:13,841
Now let's save, enter play mode and test.

161
00:08:17,091 --> 00:08:19,091
Ah-ha! Not only do we collect

162
00:08:19,091 --> 00:08:21,091
these objects but we count them now.

163
00:08:22,978 --> 00:08:24,571
Let's exit play mode.

164
00:08:26,519 --> 00:08:28,519
We need to display a message when we have

165
00:08:28,519 --> 00:08:30,297
collected all of the cubes.

166
00:08:30,915 --> 00:08:34,120
To do this we will need another UI text object.

167
00:08:35,102 --> 00:08:37,790
Again, using the hierarchy's Create menu

168
00:08:37,790 --> 00:08:39,790
make a new UI text game object.

169
00:08:42,585 --> 00:08:44,897
Rename it Win Text.

170
00:08:45,433 --> 00:08:47,329
Note how the new UI text element

171
00:08:47,329 --> 00:08:49,329
is automatically added to our canvas.

172
00:08:50,696 --> 00:08:54,817
Again, as before, let's customise the values on the component.

173
00:08:55,757 --> 00:08:58,992
Let's colour the text white so it is easier to see.

174
00:08:59,776 --> 00:09:01,964
Let's make the text a little larger,

175
00:09:01,964 --> 00:09:03,964
let's try about 24.

176
00:09:05,128 --> 00:09:09,454
Lastly, let's adjust the alignment to centre and middle.

177
00:09:10,345 --> 00:09:12,954
And again let's add placeholder text

178
00:09:12,954 --> 00:09:14,954
Win Text.

179
00:09:17,560 --> 00:09:21,368
We want this text to display in the centre of the game screen

180
00:09:21,368 --> 00:09:24,675
but up a little so it doesn't cover the player game object.

181
00:09:25,485 --> 00:09:28,704
To do this simply adjust the rect transform's

182
00:09:28,704 --> 00:09:32,800
Pos Y value as by default this UI text element

183
00:09:32,800 --> 00:09:35,444
is anchored to the centre of the canvas.

184
00:09:36,023 --> 00:09:39,185
A value of about 75 feels good.

185
00:09:39,830 --> 00:09:42,883
Save the scene and swap back to our scripting editor.

186
00:09:43,863 --> 00:09:47,300
We need to add a reference for this UI text element.

187
00:09:47,827 --> 00:09:52,552
Create a new public text variable

188
00:09:53,703 --> 00:09:56,460
and call it winText.

189
00:09:56,451 --> 00:09:59,144
Now let's set the starting value for the

190
00:09:59,144 --> 00:10:01,914
UI text's text property.

191
00:10:02,940 --> 00:10:05,717
This is set to an empty string or two

192
00:10:05,717 --> 00:10:08,315
double quote marks with no content.

193
00:10:08,697 --> 00:10:10,969
This text property will start empty.

194
00:10:10,969 --> 00:10:13,988
Then in the SetCountText function let's write

195
00:10:13,988 --> 00:10:18,782
if Count is greater than or equal to 12,

196
00:10:18,782 --> 00:10:20,782
which is the total number of objects we have in the

197
00:10:20,782 --> 00:10:28,065
game to collect, then our winText.Text equals You Win.

198
00:10:28,777 --> 00:10:31,202
Save this script and return to Unity.

199
00:10:33,896 --> 00:10:35,896
Again on our player, 

200
00:10:35,896 --> 00:10:39,092
our PlayerController has a new UI text property.

201
00:10:39,903 --> 00:10:41,903
We can associate the component 

202
00:10:41,903 --> 00:10:46,131
again by dragging the WinText game object in to the slot.

203
00:10:47,655 --> 00:10:49,655
Save the scene and play.

204
00:10:55,055 --> 00:10:57,055
So we're picking up our game objects,

205
00:10:59,786 --> 00:11:01,786
we're counting our collectables,

206
00:11:02,017 --> 00:11:02,884
and

207
00:11:03,201 --> 00:11:04,300
we win!

208
00:11:04,832 --> 00:11:07,659
And as we can see when we have collected 12 objects

209
00:11:07,659 --> 00:11:10,383
we display the 'You Win' text.

210
00:11:11,905 --> 00:11:14,557
In the next and last assignment of this series

211
00:11:14,557 --> 00:11:18,723
we will build the game and deploy it using a standalone player.

1
00:00:01,699 --> 00:00:03,338
So we have created shots,

2
00:00:03,338 --> 00:00:05,199
and we can now shoot them.

3
00:00:05,617 --> 00:00:07,617
But we have a problem.

4
00:00:07,617 --> 00:00:10,728
Our shots are simply accumulating in the scene

5
00:00:10,728 --> 00:00:13,957
flying off towards infinity on the Z axis.

6
00:00:13,957 --> 00:00:15,957
Even though each shot only requires a

7
00:00:15,957 --> 00:00:17,873
tiny amount of our resource budget 

8
00:00:17,873 --> 00:00:19,593
we will quickly have a lot of them,

9
00:00:19,593 --> 00:00:23,211
each being processed and moved and tested in our scene.

10
00:00:23,932 --> 00:00:25,932
We need to find a way to remove these shots

11
00:00:25,932 --> 00:00:28,725
from the scene when they leave the game area.

12
00:00:29,399 --> 00:00:31,024
There are a number of different ways that

13
00:00:31,024 --> 00:00:32,914
that we can approach this issue.

14
00:00:32,914 --> 00:00:34,524
In this assignment we are going to create

15
00:00:34,524 --> 00:00:36,357
a box around our game 

16
00:00:36,357 --> 00:00:38,357
and we will destroy these shots as they

17
00:00:38,357 --> 00:00:40,150
leave the box.

18
00:00:40,150 --> 00:00:43,037
As an added bonus this boundary box

19
00:00:43,037 --> 00:00:45,037
will also deal with our hazards and

20
00:00:45,037 --> 00:00:47,846
destroy them when they leave the game area as well.

21
00:00:48,691 --> 00:00:51,260
To create a box around our game area

22
00:00:51,260 --> 00:00:53,649
create a new cube by using

23
00:00:53,649 --> 00:00:56,418
the Create menu and selecting Cube.

24
00:00:58,023 --> 00:01:00,106
Now a cube has a mesh

25
00:01:00,106 --> 00:01:02,686
held by the mesh filter, and a mesh renderer

26
00:01:02,686 --> 00:01:05,818
that we don't strictly need for our purposes.

27
00:01:05,818 --> 00:01:08,547
We only need a box collider component.

28
00:01:08,950 --> 00:01:10,950
However, being able to see the cube rendered

29
00:01:10,950 --> 00:01:12,950
in the game view will be helpful to us

30
00:01:12,950 --> 00:01:15,558
when placing the box around our game area.

31
00:01:16,155 --> 00:01:18,059
So we'll use a cube

32
00:01:18,059 --> 00:01:20,715
with it's mesh, mesh renderer and box collider

33
00:01:20,715 --> 00:01:22,715
for our bounding box.

34
00:01:23,850 --> 00:01:26,323
Rename the cube Boundary.

35
00:01:27,344 --> 00:01:29,344
And reset it's transform to make sure

36
00:01:29,344 --> 00:01:30,685
it is at origin.

37
00:01:32,728 --> 00:01:34,604
If we turn the mesh renderer off

38
00:01:34,604 --> 00:01:37,175
we will see the box collider in the scene

39
00:01:37,675 --> 00:01:40,911
We don't want a physical collision with this box.

40
00:01:40,911 --> 00:01:43,256
We want this box to trigger a new action

41
00:01:43,256 --> 00:01:45,642
when our object's leave this box.

42
00:01:46,143 --> 00:01:49,157
We want this box to be a trigger collider.

43
00:01:49,157 --> 00:01:51,825
So on the box collider component select

44
00:01:51,825 --> 00:01:53,261
Is Trigger.

45
00:01:54,325 --> 00:01:56,325
Now in our Game view we can't

46
00:01:56,325 --> 00:01:58,059
see our boundary.

47
00:01:58,059 --> 00:02:00,059
the gizmo indicating the box collider

48
00:02:00,059 --> 00:02:02,501
is only visible in the Scene view.

49
00:02:02,501 --> 00:02:04,862
The trigger collider by itself is invisible

50
00:02:04,862 --> 00:02:06,501
to our game camera.

51
00:02:06,501 --> 00:02:09,623
This makes sense though, we don't want to see

52
00:02:09,623 --> 00:02:11,358
see our triggers in the game.

53
00:02:11,358 --> 00:02:14,168
This is why using a cube makes sense.

54
00:02:14,168 --> 00:02:16,638
Let's turn the mesh renderer back on.

55
00:02:18,256 --> 00:02:20,256
We want to place this box evenly

56
00:02:20,256 --> 00:02:22,256
around the game area.

57
00:02:22,256 --> 00:02:24,256
The centre of the game area is defined by

58
00:02:24,256 --> 00:02:26,256
the position of the camera as it looks

59
00:02:26,256 --> 00:02:28,297
down on the game.

60
00:02:28,297 --> 00:02:31,070
The camera's transform on the X/Z plane

61
00:02:31,070 --> 00:02:33,070
is 0,5.

62
00:02:33,570 --> 00:02:35,874
So let's keep the boundary's transform position

63
00:02:35,874 --> 00:02:38,986
X at 0 and let's set the boundary's

64
00:02:38,986 --> 00:02:41,851
transform position Z to 5.

65
00:02:43,124 --> 00:02:45,682
Next, using the transform scale

66
00:02:45,682 --> 00:02:47,682
let's change the scale of the cube

67
00:02:47,682 --> 00:02:49,682
until it surrounds our scene.

68
00:02:50,397 --> 00:02:52,397
We are less concerned by the sides for this

69
00:02:52,397 --> 00:02:54,397
particular game, as nothing will leave

70
00:02:54,397 --> 00:02:57,140
the game area by the sides of our game.

71
00:02:58,019 --> 00:03:01,129
Our background is 15 units wide

72
00:03:01,129 --> 00:03:03,307
so let's match that with our cube

73
00:03:03,307 --> 00:03:05,537
and use a value of 15 in the

74
00:03:05,537 --> 00:03:07,537
transform scale X.

75
00:03:08,618 --> 00:03:10,618
The top and bottom are more critical.

76
00:03:11,118 --> 00:03:13,118
We want to get the boundary as close

77
00:03:13,118 --> 00:03:15,460
to the edge of the game area as possible

78
00:03:15,460 --> 00:03:17,460
as all of our shots and hazards

79
00:03:17,460 --> 00:03:19,558
will leave the game area by the top

80
00:03:19,558 --> 00:03:21,018
or bottom edge.

81
00:03:21,567 --> 00:03:24,348
This looks like about 20.

82
00:03:24,750 --> 00:03:26,750
So let's use a value of 20 for the

83
00:03:26,750 --> 00:03:28,750
transform scale Z.

84
00:03:30,324 --> 00:03:32,324
We actually know that 20 is the

85
00:03:32,324 --> 00:03:35,340
correct value because 20 is twice

86
00:03:35,340 --> 00:03:37,340
the size of our orthographic camera.

87
00:03:37,840 --> 00:03:39,840
The number of units from the top of the screen

88
00:03:39,840 --> 00:03:42,737
to the bottom is always twice the value of

89
00:03:42,737 --> 00:03:45,368
of our camera's orthographic size.

90
00:03:48,239 --> 00:03:50,239
Now that we have placed the boundary

91
00:03:50,239 --> 00:03:52,239
we can turn off the mesh renderer.

92
00:03:52,837 --> 00:03:54,837
When we look in the Scene view we can now see

93
00:03:54,837 --> 00:03:58,245
our collider in green surrounding our game area.

94
00:04:00,929 --> 00:04:03,747
We now need to have our boundary do something.

95
00:04:04,307 --> 00:04:06,026
To do this the boundary needs

96
00:04:06,026 --> 00:04:08,026
a script attached.

97
00:04:08,026 --> 00:04:12,321
So with Boundary selected click on Add Component.

98
00:04:12,821 --> 00:04:14,821
Then select New Script.

99
00:04:15,711 --> 00:04:18,977
Rename the script DestroyByBoundary.

100
00:04:20,111 --> 00:04:21,963
Accept these changes to add this script

101
00:04:21,963 --> 00:04:23,490
to Boundary.

102
00:04:24,134 --> 00:04:26,889
Select Assets to see our new script

103
00:04:26,889 --> 00:04:28,889
in the root level of our project.

104
00:04:29,352 --> 00:04:32,316
And let's file it in the Scripts folder.

105
00:04:34,305 --> 00:04:36,538
Open the Scripts folder and select

106
00:04:36,538 --> 00:04:39,921
DestroyByBoundary and open it for editing.

107
00:04:40,982 --> 00:04:43,516
Our boundary game objects behaviour

108
00:04:43,516 --> 00:04:46,022
will be driven by the box collider

109
00:04:46,022 --> 00:04:48,563
and that box collider is a trigger.

110
00:04:48,563 --> 00:04:51,293
To find out how to script to a trigger collider

111
00:04:51,293 --> 00:04:53,293
we can search Trigger

112
00:04:53,293 --> 00:04:54,965
in the documentation.

113
00:04:55,683 --> 00:04:58,493
This will give us a list of all of the uses of

114
00:04:58,493 --> 00:05:00,957
Trigger in Unity's API/

115
00:05:02,128 --> 00:05:04,128
We want to destroy the shots as they

116
00:05:04,128 --> 00:05:07,066
leave the box collider's trigger volume.

117
00:05:07,566 --> 00:05:10,189
So let's look at OnTriggerExit.

118
00:05:11,944 --> 00:05:14,896
If we look at the description it tells us that

119
00:05:14,896 --> 00:05:17,636
OnTriggerExit is called when the other

120
00:05:17,636 --> 00:05:20,198
collider has stopped touching the trigger.

121
00:05:20,648 --> 00:05:22,818
Conveniently the sample code does

122
00:05:22,818 --> 00:05:24,684
exactly what we want.

123
00:05:24,684 --> 00:05:26,929
When the other collider leaves the

124
00:05:26,929 --> 00:05:28,892
Boundary's trigger volume

125
00:05:28,892 --> 00:05:31,077
we want to destroy the other

126
00:05:31,077 --> 00:05:33,077
collider's game object.

127
00:05:34,992 --> 00:05:38,541
Copy this code and paste it in to our script.

128
00:05:40,908 --> 00:05:43,935
Save this script and return to Unity.

129
00:05:45,972 --> 00:05:48,596
When we select Boundary we don't see any

130
00:05:48,596 --> 00:05:50,474
properties on the component.

131
00:05:50,474 --> 00:05:52,595
This is because there are no options

132
00:05:52,595 --> 00:05:55,046
we can set on this component.

133
00:05:55,046 --> 00:05:57,046
This component simply does it's job

134
00:05:57,046 --> 00:05:59,723
if it's active, destroying any object that

135
00:05:59,723 --> 00:06:01,723
leave the trigger's volume.

136
00:06:03,358 --> 00:06:06,094
Now that our boundary is setup and in position

137
00:06:06,094 --> 00:06:08,895
we can remove the mesh renderer

138
00:06:08,895 --> 00:06:10,895
and the mesh filter components.

139
00:06:12,176 --> 00:06:14,455
Let's save the scene and test.

140
00:06:20,593 --> 00:06:23,305
And as the shots leave the game area

141
00:06:23,305 --> 00:06:25,305
they are destroyed.

142
00:06:26,561 --> 00:06:28,926
With our ship setup and it's weapons systems

143
00:06:28,926 --> 00:06:31,329
ready to go, in the next assignment we will

144
00:06:31,329 --> 00:06:33,790
create hazards to challenge our player.

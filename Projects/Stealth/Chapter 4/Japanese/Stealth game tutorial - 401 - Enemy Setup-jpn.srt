1
00:00:00,166 --> 00:00:04,362
In this assignment we will setup the enemies in the game.

2
00:00:04,362 --> 00:00:09,316
Each enemy will be on a set patrol route by default.

3
00:00:09,316 --> 00:00:11,316
If he is made aware of the player's location

4
00:00:11,316 --> 00:00:13,316
by seeing or hearing the player,

5
00:00:13,316 --> 00:00:15,316
by the player triggering an alarm

6
00:00:15,316 --> 00:00:17,316
system or by another enemy spotting

7
00:00:17,316 --> 00:00:19,316
the player then he should rush to the position

8
00:00:19,316 --> 00:00:23,502
of the sighting or the triggering alarm.

9
00:00:27,538 --> 00:00:30,033
If however the enemy can see and has

10
00:00:30,033 --> 00:00:32,033
line of sight to the player he should

11
00:00:32,033 --> 00:00:34,033
instead shoot the player

12
00:00:43,718 --> 00:00:45,718
There will be two variables for storing the

13
00:00:45,718 --> 00:00:48,603
player's location. One global variable

14
00:00:48,603 --> 00:00:50,603
that all the enemies will be sent to and one

15
00:00:50,603 --> 00:00:52,603
personal variable that only the

16
00:00:52,603 --> 00:00:54,603
specific enemy will be sent to.

17
00:00:54,603 --> 00:00:56,603
When the player is spotted, either by an enemy

18
00:00:56,603 --> 00:00:58,366
or an alarm system

19
00:00:59,239 --> 00:01:01,239
this will set the global variable.

20
00:01:01,239 --> 00:01:03,239
which has already been created in our

21
00:01:03,239 --> 00:01:05,239
LastPlayerSighting script.

22
00:01:07,866 --> 00:01:09,866
When the player is heard by an enemy

23
00:01:09,866 --> 00:01:13,152
either by running or using the attract attention feature

24
00:01:13,152 --> 00:01:15,635
only the personal variable will be set.

25
00:01:24,174 --> 00:01:26,174
If the global variable is not set

26
00:01:26,174 --> 00:01:28,917
to the reset value indicating that the

27
00:01:28,917 --> 00:01:30,917
player has been spotted then the enemies

28
00:01:30,917 --> 00:01:32,917
should set their personal variable to

29
00:01:32,917 --> 00:01:34,917
match the global variable's value.

30
00:01:34,917 --> 00:01:36,917
and converge on the sighting position.

31
00:01:39,489 --> 00:01:41,489
The enemies will have two colliders.

32
00:01:41,489 --> 00:01:43,889
A large sphere trigger collider

33
00:01:43,889 --> 00:01:45,889
and a capsule collider.

34
00:01:46,624 --> 00:01:48,624
The sphere will be used as the enemy's

35
00:01:48,624 --> 00:01:50,624
range of sight and hearing.

36
00:01:50,624 --> 00:01:54,723
The capsule will be used for normal collisions.

37
00:01:54,723 --> 00:01:57,288
Because the enemies will be moving will colliders

38
00:01:57,288 --> 00:01:59,596
they will also need a rigidbody component.

39
00:01:59,596 --> 00:02:01,596
This will be kinematic because the enemy's

40
00:02:01,596 --> 00:02:03,596
should not react to collisions and the movement

41
00:02:03,596 --> 00:02:05,596
will be dictated by the nav mesh.

42
00:02:07,532 --> 00:02:09,532
As such, the enemies will also need

43
00:02:09,532 --> 00:02:11,532
nav mesh agent component. The nav mesh

44
00:02:11,532 --> 00:02:13,963
agent will physically move the enemy character

45
00:02:13,963 --> 00:02:15,963
and this will provide information that we

46
00:02:15,963 --> 00:02:18,447
can feed in to the animator controller

47
00:02:18,447 --> 00:02:20,447
to define which animation should be played

48
00:02:20,447 --> 00:02:22,447
to match this movement.

49
00:02:26,041 --> 00:02:28,041
The enemies will be using a total of five

50
00:02:28,041 --> 00:02:30,041
scripts, four of which will be applied

51
00:02:30,041 --> 00:02:32,041
as components to the enemy and one

52
00:02:32,041 --> 00:02:34,041
which will be a helper class.

53
00:02:34,041 --> 00:02:36,041
The scripts will be as follows.

54
00:02:36,041 --> 00:02:37,626
Enemy Sight.

55
00:02:37,626 --> 00:02:40,758
This will work as the enemy's ears and eyes.

56
00:02:40,758 --> 00:02:42,758
This script will be used to detect when the player's

57
00:02:42,758 --> 00:02:44,758
within the sphere trigger collider.

58
00:02:45,382 --> 00:02:46,609
Animator Setup.

59
00:02:46,609 --> 00:02:48,609
This script will be a helper class that is

60
00:02:48,609 --> 00:02:51,080
not applied to the enemy as a component.

61
00:02:51,080 --> 00:02:53,080
Instead an instance of the class will be created

62
00:02:53,080 --> 00:02:55,080
in another script so that the function

63
00:02:55,080 --> 00:02:57,783
from it can be used. This will perform the

64
00:02:57,783 --> 00:02:59,783
task of sending information from the Enemy

65
00:02:59,783 --> 00:03:02,470
Animation script to the animator controller.

66
00:03:02,470 --> 00:03:04,470
This will take information about direction and

67
00:03:04,470 --> 00:03:06,470
velocity from the nav mesh agent

68
00:03:06,470 --> 00:03:08,470
and manipulate it in to a form that

69
00:03:08,470 --> 00:03:11,316
can be used by the Animator Setups script

70
00:03:11,316 --> 00:03:13,875
to apply to the animator controller.

71
00:03:13,875 --> 00:03:15,693
Enemy AI.

72
00:03:15,693 --> 00:03:17,693
This works as the enemy's brain

73
00:03:17,693 --> 00:03:19,693
and controls the way it behaves based on whether

74
00:03:19,693 --> 00:03:21,693
the player is in sight or not.

75
00:03:21,693 --> 00:03:24,217
It then feeds the information to the nav mesh agent

76
00:03:24,217 --> 00:03:26,217
to determine what the enemy should do.

77
00:03:26,717 --> 00:03:28,236
Enemy Shooting.

78
00:03:28,236 --> 00:03:30,236
This controls the actions that are performed when

79
00:03:30,236 --> 00:03:32,236
the enemy is shooting the player, including

80
00:03:32,236 --> 00:03:35,293
the amount of damage and the rate of fire.

81
00:03:35,293 --> 00:03:37,293
The first thing to do when creating an enemy

82
00:03:37,293 --> 00:03:40,351
is to drag the Enemy FPX in to the Scene.

83
00:03:40,351 --> 00:03:43,714
Grab char_robotGuard and drop it in.

84
00:03:43,714 --> 00:03:45,714
We'll put him just outside the door of the second room

85
00:03:45,714 --> 00:03:51,002
at (-18, 0, 6.5).

86
00:03:51,002 --> 00:03:53,322
As with all dynamic game objects in the scene

87
00:03:53,322 --> 00:03:55,920
we'll make sure it's using light probes.

88
00:03:55,920 --> 00:03:58,222
Open the hierarchy and select the body

89
00:03:58,222 --> 00:04:00,222
then check Use Light Probes.

90
00:04:01,067 --> 00:04:03,067
We also need to do this for the helmet.

91
00:04:03,067 --> 00:04:03,854
Locate it under the 

92
00:04:03,854 --> 00:04:08,235
skeleton - hips - spine - neck - head

93
00:04:08,235 --> 00:04:09,944
part of the hierarchy.

94
00:04:11,010 --> 00:04:14,701
This will mean that the robot is dynamically lit in the scene.

95
00:04:20,767 --> 00:04:22,767
Before we add any components to it

96
00:04:22,767 --> 00:04:25,581
let's tag the parent game object Enemy.

97
00:04:25,581 --> 00:04:27,581
Select it from the Tag drop down.

98
00:04:28,772 --> 00:04:30,772
Notice that because this asset was imported

99
00:04:30,772 --> 00:04:33,594
with a rig we automatically have an animator

100
00:04:33,594 --> 00:04:35,594
component that's waiting for a controller asset

101
00:04:35,594 --> 00:04:37,883
which we will create later.

102
00:04:37,883 --> 00:04:40,568
The first components we should add are the colliders.

103
00:04:40,568 --> 00:04:42,568
We will start with a sphere collider.

104
00:04:42,568 --> 00:04:44,568
We will need the centre of the collider to be

105
00:04:44,568 --> 00:04:48,700
at the centre of the enemy, which is 1 in the Y axis.

106
00:04:51,755 --> 00:04:54,559
The radius is the range of sight the enemy will have.

107
00:04:54,559 --> 00:04:56,559
So 10 is a good starting point.

108
00:04:56,559 --> 00:04:58,559
We can adjust this later if we need to.

109
00:05:00,523 --> 00:05:02,523
Most importantly this collider needs

110
00:05:02,523 --> 00:05:05,922
to be a trigger, so we'll check that box now.

111
00:05:05,922 --> 00:05:07,838
Next the capsule collider.

112
00:05:07,838 --> 00:05:09,838
We need to add this in addition to our sphere

113
00:05:09,838 --> 00:05:11,838
collider so we will add it to a child

114
00:05:11,838 --> 00:05:15,609
game object called char_robotGuard_body.

115
00:05:18,576 --> 00:05:21,453
Again the centre needs to be moved up by 1.

116
00:05:22,298 --> 00:05:26,068
But this time we only need the radius to be 0.3.

117
00:05:26,068 --> 00:05:28,967
We also need to change the height to 2.

118
00:05:32,492 --> 00:05:34,492
We will add the rest of the components to the root

119
00:05:34,492 --> 00:05:36,492
game object, since we have colliders

120
00:05:36,492 --> 00:05:39,068
that move we will add a rigidbody.

121
00:05:39,068 --> 00:05:41,068
We need this to be kinematic so that the enemy

122
00:05:41,068 --> 00:05:43,835
doesn't bounce when it hits something.

123
00:05:44,736 --> 00:05:46,736
We now need the nav mesh agent.

124
00:05:46,736 --> 00:05:49,055
Almost all of the starting parameters are fine

125
00:05:49,055 --> 00:05:52,894
but we want to adjust the stopping distance to 0.8.

126
00:05:54,854 --> 00:05:57,683
Now that we have the nav mesh agent on the enemy

127
00:05:57,683 --> 00:05:59,683
this is a good time to bake our nav mesh.

128
00:05:59,683 --> 00:06:01,683
In order for parts of the environment to be

129
00:06:01,683 --> 00:06:03,683
included in the bake they should be marked

130
00:06:03,683 --> 00:06:05,292
as Navigation Static.

131
00:06:05,292 --> 00:06:07,292
EVerything that we marked as static when we

132
00:06:07,292 --> 00:06:09,568
bake the light map will by default

133
00:06:09,568 --> 00:06:11,859
also be navigation static.

134
00:06:11,859 --> 00:06:13,859
But we can check whether this is the case by

135
00:06:13,859 --> 00:06:15,859
seeing if the Static check box on

136
00:06:15,859 --> 00:06:18,641
the top right in the Inspector is checked

137
00:06:18,641 --> 00:06:20,641
and by looking in the drop down to the right

138
00:06:20,641 --> 00:06:24,035
of this to ensure that navigation is included.

139
00:06:25,099 --> 00:06:28,394
First open the env_stealth_static game object

140
00:06:28,394 --> 00:06:30,852
so that the groups of game objects show.

141
00:06:31,352 --> 00:06:38,444
We want the Debris - Ground - Lift Shaft - Props - both of the walls

142
00:06:38,444 --> 00:06:40,666
to be navigation static.

143
00:06:40,666 --> 00:06:42,666
We also want the battle bus and all of the 

144
00:06:42,666 --> 00:06:45,794
switch units to be navigation static.

145
00:06:46,639 --> 00:06:48,639
Here we are simply checking that Navigation Static

146
00:06:48,639 --> 00:06:50,639
is checked for each of these object.

147
00:06:50,639 --> 00:06:52,639
It should already be.

148
00:06:56,495 --> 00:06:58,495
Now open the Navigation panel.

149
00:06:58,495 --> 00:07:01,147
You can do this through Window - Navigation

150
00:07:01,147 --> 00:07:03,147
if you don't already have it open.

151
00:07:03,647 --> 00:07:05,064
We have a couple of settings we want

152
00:07:05,064 --> 00:07:07,688
to make sure of before we bake the nav mesh.

153
00:07:07,688 --> 00:07:09,688
Under the Bake tab we want the

154
00:07:09,688 --> 00:07:11,688
radius to be 0.3.

155
00:07:12,188 --> 00:07:13,648
This will mean that enemies can fit 

156
00:07:13,648 --> 00:07:15,648
through slightly tighter spaces.

157
00:07:15,648 --> 00:07:17,565
The height should be 1.

158
00:07:17,565 --> 00:07:19,565
If this was too low then the nav mesh would go

159
00:07:19,565 --> 00:07:21,565
under things like the battle bus causing

160
00:07:21,565 --> 00:07:23,565
the enemies to try and run through it.

161
00:07:25,930 --> 00:07:27,930
All that's left to do now is click Bake.

162
00:07:28,430 --> 00:07:30,430
This should only take a few seconds.

163
00:07:32,007 --> 00:07:34,007
That concludes the setup of the enemy.

164
00:07:34,231 --> 00:07:36,231
So now is a good time to save the scene and

165
00:07:36,231 --> 00:07:39,401
our project. In the next assignment we will create

166
00:07:39,401 --> 00:07:41,535
the animator controller for the enemy.

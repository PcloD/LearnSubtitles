1
00:00:00,308 --> 00:00:01,923
As I've just said we've just

2
00:00:01,923 --> 00:00:03,595
created one enemy.

3
00:00:03,595 --> 00:00:05,595
What we didn't want to force you guys to do

4
00:00:05,595 --> 00:00:07,595
was to repeat those steps again to make

5
00:00:07,595 --> 00:00:09,247
a fairly identical enemy.

6
00:00:09,247 --> 00:00:11,247
Instead what we want to do is show you how

7
00:00:11,247 --> 00:00:13,247
you can use some of the things that you've just

8
00:00:13,247 --> 00:00:15,247
done such as the animator controller,

9
00:00:15,247 --> 00:00:17,756
for example, and reuse that

10
00:00:17,756 --> 00:00:19,276
on a new enemy.

11
00:00:19,276 --> 00:00:22,016
So what we did was we have very kindly

12
00:00:22,016 --> 00:00:25,345
gone and created for you the Zombear.

13
00:00:25,345 --> 00:00:27,801
A new enemy who is otherwise

14
00:00:27,801 --> 00:00:29,801
pretty identical to the Zombunny.

15
00:00:31,359 --> 00:00:32,794
He looks like this.

16
00:00:33,551 --> 00:00:35,551
What we're going to do is to

17
00:00:35,551 --> 00:00:37,551
assign certain things to that Zombear

18
00:00:37,551 --> 00:00:39,551
to make him work very much

19
00:00:39,551 --> 00:00:41,551
in the same way as the Zombunny.

20
00:00:41,551 --> 00:00:44,452
So the great thing about the Unity animator system

21
00:00:44,452 --> 00:00:46,452
is that it's reusable,

22
00:00:46,452 --> 00:00:48,452
so these are states that have animation

23
00:00:48,452 --> 00:00:50,046
clips assigned to them.

24
00:00:50,046 --> 00:00:52,046
So when we look at the animator

25
00:00:52,527 --> 00:00:54,527
for our EnemyAC, there it is,

26
00:00:54,921 --> 00:00:56,644
we have a bunch of different states.

27
00:00:56,644 --> 00:00:59,709
We have Move, Idle and Death. 

28
00:00:59,709 --> 00:01:01,709
Now these states aren't the clips themselves,

29
00:01:01,709 --> 00:01:03,709
they are holders for clips.

30
00:01:03,709 --> 00:01:07,148
So those animations are setup in there

31
00:01:07,148 --> 00:01:09,148
and if you've got something that has a similar

32
00:01:09,148 --> 00:01:12,158
skeleton, like our Zombunny and Zombear do,

33
00:01:12,158 --> 00:01:14,158
we can reuse the state machine

34
00:01:14,158 --> 00:01:16,438
and reuse both the script

35
00:01:16,438 --> 00:01:20,671
that talks to these parameters and the parameters themselves.

36
00:01:20,671 --> 00:01:23,427
In order to drive a different enemy.

37
00:01:23,427 --> 00:01:26,797
So in the prefabs, with my Zombear selected,

38
00:01:26,797 --> 00:01:28,797
what I'm going to do is click on

39
00:01:28,797 --> 00:01:30,797
my animation folder

40
00:01:30,797 --> 00:01:34,092
and then drag and drop EnemyAC

41
00:01:34,092 --> 00:01:37,757
on to the animator controller property.

42
00:01:40,324 --> 00:01:41,852
So I'm dropping it on to this.

43
00:01:41,852 --> 00:01:43,852
Currently it says None.

44
00:01:43,852 --> 00:01:45,852
So we made EnemyAC earlier

45
00:01:45,852 --> 00:01:48,505
for the other character, we're reusing it here

46
00:01:48,505 --> 00:01:50,505
so it will work in exactly the same way. 

47
00:01:50,505 --> 00:01:52,505
You will also notice it's got the same

48
00:01:52,505 --> 00:01:55,127
scripts applied to it, it's got EnemyAttack,

49
00:01:55,127 --> 00:01:56,982
Health and Movement,

50
00:01:56,982 --> 00:02:00,561
which are looking for this animator controller and looking for

51
00:02:00,561 --> 00:02:02,416
the parameters that we setup.

52
00:02:02,416 --> 00:02:04,416
So that's just going to work right off the bat.

53
00:02:06,157 --> 00:02:08,904
Then the third enemy is our Hellephant.

54
00:02:09,885 --> 00:02:12,635
He rather shockingly looks like this.

55
00:02:14,548 --> 00:02:16,740
The difference with this guy is that he's not

56
00:02:16,740 --> 00:02:18,403
the same type of enemy.

57
00:02:18,403 --> 00:02:20,403
He's a different shape and his rig's different

58
00:02:20,403 --> 00:02:22,403
and his animations are different.

59
00:02:22,403 --> 00:02:25,208
However he does the same things.

60
00:02:25,208 --> 00:02:28,849
He has Move, he Idles and he has Death.

61
00:02:28,849 --> 00:02:30,849
But they're not the same animation clips.

62
00:02:31,599 --> 00:02:33,599
So one way to approach this would be to

63
00:02:33,599 --> 00:02:35,599
make a brand new animator controller.

64
00:02:36,003 --> 00:02:37,539
Make the transitions.

65
00:02:37,539 --> 00:02:39,539
Make new parameters for it

66
00:02:39,539 --> 00:02:41,914
and set it up in a fairly similar way.

67
00:02:41,914 --> 00:02:43,914
Also in the operating system

68
00:02:43,914 --> 00:02:45,914
you've got Copy/Paste to create a copy of it.

69
00:02:45,914 --> 00:02:49,124
Again it's redundant and completely unnecessary.

70
00:02:49,124 --> 00:02:51,124
Yeah, so, we don't want to do this.

71
00:02:51,124 --> 00:02:54,202
So there's the new feature, fairly recently added called

72
00:02:54,202 --> 00:02:56,531
Animator Override Controllers.

73
00:02:56,531 --> 00:02:58,531
What this means is you can create

74
00:02:58,531 --> 00:03:01,518
lots of different classes of

75
00:03:01,518 --> 00:03:03,314
characters in your game.

76
00:03:03,314 --> 00:03:05,314
And if, for example, they all share

77
00:03:05,314 --> 00:03:07,314
a similar skeleton you can have

78
00:03:07,314 --> 00:03:09,844
the same state machine driving all of them

79
00:03:09,844 --> 00:03:12,468
but just change the animation clip that it uses.

80
00:03:13,055 --> 00:03:15,569
So we're going to create that asset.

81
00:03:15,569 --> 00:03:17,569
So if you click on the animation

82
00:03:17,569 --> 00:03:19,569
folder in your project.

83
00:03:19,790 --> 00:03:21,530
Then go to Create

84
00:03:21,530 --> 00:03:26,024
you will see something called Animator Override Controller.

85
00:03:26,716 --> 00:03:28,716
Click on this and we're going to call this

86
00:03:28,716 --> 00:03:32,943
HellephantAOC,

87
00:03:32,943 --> 00:03:34,943
Animator Override Controller.

88
00:03:35,606 --> 00:03:37,779
You'll notice that the icon is a little different

89
00:03:37,779 --> 00:03:40,845
from the others, the others have three squares and a

90
00:03:40,845 --> 00:03:42,845
play icon, this has a + icon.

91
00:03:42,845 --> 00:03:44,845
Because it's effectively taking the same

92
00:03:44,845 --> 00:03:46,845
state machine and adding

93
00:03:46,845 --> 00:03:48,845
over the top the ability to use different

94
00:03:48,845 --> 00:03:50,624
clips within the states.

95
00:03:50,624 --> 00:03:53,029
So one example for this could be that you have

96
00:03:53,029 --> 00:03:56,169
a character that runs a certain way and

97
00:03:56,169 --> 00:03:58,169
jumps a certain way but when he shoots

98
00:03:58,169 --> 00:04:00,801
or when he attacks it's totally different.

99
00:04:00,801 --> 00:04:04,186
so you use the same animator controller to drive

100
00:04:04,186 --> 00:04:06,524
the running and the jumping etcetera

101
00:04:06,524 --> 00:04:09,220
but then you just override the attack.

102
00:04:09,220 --> 00:04:11,220
So we're going to override all three

103
00:04:11,220 --> 00:04:13,220
simply because we're reusing the same

104
00:04:13,220 --> 00:04:15,220
parameters and the same transitions.

105
00:04:16,220 --> 00:04:18,220
The way that we use this is that

106
00:04:18,220 --> 00:04:20,220
we select the asset in the project panel like

107
00:04:20,220 --> 00:04:22,220
it is now and we give it a

108
00:04:22,220 --> 00:04:26,249
controller to relate to, so we drag and drop EnemyAC

109
00:04:26,249 --> 00:04:29,838
on to the Controller slot at the top of the inspector.

110
00:04:30,501 --> 00:04:32,501
So what this does is it goes through and says

111
00:04:32,501 --> 00:04:35,889
'what states does this animator controller have?'

112
00:04:35,889 --> 00:04:38,541
and it's found Move, Idle and Death.

113
00:04:39,358 --> 00:04:41,860
Then we have the ability to fill in

114
00:04:41,860 --> 00:04:43,860
new animation clips to replace

115
00:04:43,860 --> 00:04:46,698
the ones that are in those existing states

116
00:04:48,081 --> 00:04:50,311
So the animations, just like before,

117
00:04:50,311 --> 00:04:52,195
are within the character folder.

118
00:04:52,513 --> 00:04:54,513
Just a word of warning here, what we don't want

119
00:04:54,513 --> 00:04:56,513
to do is click off Hellephant.

120
00:04:57,244 --> 00:04:59,244
So I'm going to click on Characters

121
00:04:59,552 --> 00:05:01,552
and I'm going to click on the arrow

122
00:05:01,552 --> 00:05:03,707
for Hellephant, I'm not going to select it

123
00:05:03,707 --> 00:05:06,522
because we don't want the inspector to start showing something else.

124
00:05:06,522 --> 00:05:09,799
We could lock the inspector but I'm not going to do that.

125
00:05:10,712 --> 00:05:12,712
So I'm going to go and drag Move

126
00:05:12,712 --> 00:05:14,712
on to the Move slot.

127
00:05:14,712 --> 00:05:17,301
and I'm going to drag Idle on to Idle

128
00:05:17,770 --> 00:05:20,019
and Death on to Death.

129
00:05:20,836 --> 00:05:22,836
So effectively we've got the same states,

130
00:05:22,836 --> 00:05:24,836
the same state machine, the same logic

131
00:05:24,836 --> 00:05:26,527
for how he's going to behave,

132
00:05:26,527 --> 00:05:28,527
but the animation clips within each state are being

133
00:05:28,527 --> 00:05:32,745
overridden or replaced by these animation clips

134
00:05:32,745 --> 00:05:34,745
from the model.

135
00:05:34,745 --> 00:05:36,745
So the animation for that character

136
00:05:36,745 --> 00:05:38,105
was done within that model.

137
00:05:38,105 --> 00:05:40,105
The rig doesn't have to be shared, but we can

138
00:05:40,105 --> 00:05:42,374
replace the animation with whatever we need.

139
00:05:45,509 --> 00:05:47,509
So the last step then is to go

140
00:05:47,509 --> 00:05:49,509
to our prefab of the Hellephant

141
00:05:49,509 --> 00:05:51,036
with all of the scripts setup

142
00:05:51,036 --> 00:05:53,501
and just instead of dragging on

143
00:05:53,501 --> 00:05:55,501
the EnemyAC we're going to

144
00:05:55,501 --> 00:05:57,501
drag on the override controller

145
00:05:57,501 --> 00:05:59,820
in to the Animator slot.

146
00:06:01,453 --> 00:06:03,924
HellephantAOC in there.

147
00:06:05,549 --> 00:06:07,897
So now we have three enemies

148
00:06:07,897 --> 00:06:10,359
that are setup and ready to be spawned

149
00:06:10,359 --> 00:06:12,359
in to our game.

150
00:06:13,157 --> 00:06:15,445
We need some kind of manager object.

151
00:06:15,445 --> 00:06:18,842
So much like our ScoreManager or anything else

152
00:06:18,842 --> 00:06:20,842
we want to have an individual object that

153
00:06:20,842 --> 00:06:22,842
is in charge of the

154
00:06:22,842 --> 00:06:24,319
spawning of the enemies,

155
00:06:24,319 --> 00:06:26,319
how frequent it is, etcetera.

156
00:06:26,319 --> 00:06:28,319
So we like to keep things neat

157
00:06:28,319 --> 00:06:30,319
here so we're going to create a 

158
00:06:30,319 --> 00:06:32,021
brand new object to manage this on.

159
00:06:32,021 --> 00:06:34,021
You could, like any script you can attach this

160
00:06:34,021 --> 00:06:36,021
to any object you want to.

161
00:06:36,021 --> 00:06:38,021
You could attach it to the environment,

162
00:06:38,021 --> 00:06:40,021
you could attach it to the camera or anything you expect

163
00:06:40,021 --> 00:06:42,021
to stay in the game, but we're not going to,

164
00:06:42,021 --> 00:06:44,425
we're going to create an empty game object.

165
00:06:44,425 --> 00:06:46,425
There's not really any overhead or any

166
00:06:46,425 --> 00:06:48,425
problem doing it this way and it allows

167
00:06:48,425 --> 00:06:51,131
us to keep things modular and separate.

168
00:06:51,131 --> 00:06:53,131
The great thing about this of course is if we

169
00:06:53,131 --> 00:06:55,131
wanted to make this a prefab we could

170
00:06:55,131 --> 00:06:58,390
drop this in to another level and reuse it.

171
00:06:58,390 --> 00:07:01,387
So I'm going to go to the hierarchy this time

172
00:07:01,387 --> 00:07:03,185
and go to Create - Empty

173
00:07:03,185 --> 00:07:05,185
And create an empty game object.

174
00:07:05,185 --> 00:07:08,334
I'm going to rename this EnemyManager.

175
00:07:08,334 --> 00:07:10,334
It's a good habit to get in to

176
00:07:10,334 --> 00:07:12,334
when creating a new game object,

177
00:07:12,334 --> 00:07:13,768
empty game object, whatever,

178
00:07:13,768 --> 00:07:15,508
to ensure that it's at (0, 0, 0)

179
00:07:15,508 --> 00:07:17,508
it's at the origin, just in case

180
00:07:17,508 --> 00:07:19,508
you might be using it as a container for other things

181
00:07:19,508 --> 00:07:22,303
and you don't want it to change the co-ordinates of child objects.

182
00:07:22,303 --> 00:07:25,459
But it's one of those things that might save you some confusion later

183
00:07:25,459 --> 00:07:27,459
when you're wondering why things are moving around and

184
00:07:27,459 --> 00:07:28,676
and that's why.

185
00:07:28,676 --> 00:07:31,381
So just something to keep in mind, it's a good habit to do.

186
00:07:31,381 --> 00:07:34,310
So I've reset the position to (0, 0, 0).

187
00:07:34,310 --> 00:07:36,916
Then, very kindly we've prepared a

188
00:07:36,916 --> 00:07:38,578
script that will do this for you.

189
00:07:40,137 --> 00:07:42,339
In the Scripts folder under Managers

190
00:07:42,339 --> 00:07:44,339
you will find EnemyManager and you can simply

191
00:07:44,339 --> 00:07:47,532
drag and drop onto the EnemyManager.

192
00:07:47,532 --> 00:07:50,032
So just to show you one other way of assigning a script.

193
00:07:50,032 --> 00:07:52,032
You can either drop it on to the name in the hierarchy,

194
00:07:52,032 --> 00:07:54,032
you can also drop it on to empty

195
00:07:54,032 --> 00:07:56,971
space in the list of components

196
00:07:56,971 --> 00:07:58,130
in the inspector.

197
00:07:58,130 --> 00:08:01,410
So I'm going to double click the name of that script to open it.

198
00:08:03,025 --> 00:08:05,025
This is quite a simple script this one.

199
00:08:05,025 --> 00:08:07,025
It's got a bunch of public variables

200
00:08:07,025 --> 00:08:09,025
that need assigning so because this

201
00:08:09,025 --> 00:08:11,025
script is something we're going to use several times

202
00:08:11,025 --> 00:08:13,984
and assign different enemies, different spawn points to

203
00:08:13,984 --> 00:08:16,372
we're not going to want to use the script to find those,

204
00:08:16,372 --> 00:08:18,372
we're going to want to use the editor to drag and drop

205
00:08:18,372 --> 00:08:19,880
all of these things.

206
00:08:19,880 --> 00:08:21,880
That's exactly what we're going to do, so you see a lot of

207
00:08:21,880 --> 00:08:23,880
public variables up front.

208
00:08:23,880 --> 00:08:25,880
The first thing if a reference

209
00:08:25,880 --> 00:08:27,466
to the PlayerHealth.

210
00:08:27,466 --> 00:08:29,466
We're going to want to check we're only

211
00:08:29,466 --> 00:08:31,466
going to spawn more enemies if the PlayerHealth

212
00:08:31,466 --> 00:08:33,194
is more than 0.

213
00:08:33,857 --> 00:08:36,368
Then we need a reference to the game object of the

214
00:08:36,368 --> 00:08:37,695
enemy that we want to spawn.

215
00:08:37,695 --> 00:08:39,695
So those prefabs are effectively

216
00:08:39,695 --> 00:08:42,195
game objects that are stored as an asset.

217
00:08:42,195 --> 00:08:45,595
So we have a reference to the particular one we want to spawn.

218
00:08:45,595 --> 00:08:47,595
Then we have a spawn time, which is 3 seconds

219
00:08:47,595 --> 00:08:50,136
and obviously because it's public we'll be

220
00:08:50,136 --> 00:08:52,858
tweaking this, changing it to balance the game.

221
00:08:52,858 --> 00:08:56,646
And then we have a public transform array,

222
00:08:56,646 --> 00:09:00,170
so you'll note these 2 open closed square brackets

223
00:09:00,170 --> 00:09:02,170
called spawnPoints.

224
00:09:02,170 --> 00:09:05,181
We're not going to use that in this example.

225
00:09:05,181 --> 00:09:07,181
We're going to use one spawn point per

226
00:09:07,181 --> 00:09:09,181
instance of this manager.

227
00:09:09,518 --> 00:09:11,518
But if you wanted to you could have a whole

228
00:09:11,518 --> 00:09:13,518
bunch of spawn points, and you can take this project away

229
00:09:13,518 --> 00:09:15,518
and create more spawn points and

230
00:09:15,518 --> 00:09:17,217
try it out and have fun with it.

231
00:09:17,217 --> 00:09:19,217
So we just wanted to give you that option.

232
00:09:19,967 --> 00:09:22,740
So when the game starts

233
00:09:22,740 --> 00:09:25,563
we use a function called InvokeRepeating

234
00:09:25,563 --> 00:09:27,563
and what that does is it basically means

235
00:09:27,563 --> 00:09:29,563
you don't need to have a timer

236
00:09:29,563 --> 00:09:31,563
effectively for something that's going to repeat.

237
00:09:33,005 --> 00:09:35,964
From the very start of the game we call

238
00:09:35,964 --> 00:09:39,266
the spawn function, so we name it as a string,

239
00:09:39,266 --> 00:09:41,266
and we have an amount of time

240
00:09:41,266 --> 00:09:43,266
to wait before doing it

241
00:09:43,266 --> 00:09:46,058
and we have an amount of time to wait before repeating it.

242
00:09:46,058 --> 00:09:48,770
We've just reused spawnTime, we could set

243
00:09:48,770 --> 00:09:51,137
that to 0 but we've just reused it

244
00:09:51,137 --> 00:09:54,283
so there's a bit of a breathing space at the start of the game.

245
00:09:54,283 --> 00:09:56,283
So InvokeRepeating will just repeat

246
00:09:56,283 --> 00:09:59,416
this every, well, 3 seconds.

247
00:09:59,811 --> 00:10:02,862
And we're checking if the player has

248
00:10:02,862 --> 00:10:05,789
some health and if he doesn't we return

249
00:10:05,789 --> 00:10:09,169
but if he does, if he's still alive and kicking

250
00:10:09,169 --> 00:10:12,173
then we are going to instantiate

251
00:10:12,173 --> 00:10:14,340
our enemy in to the game. 

252
00:10:14,913 --> 00:10:18,620
So we have this integer called spawnPointIndex.

253
00:10:18,620 --> 00:10:21,657
Now when you create an array, a list of things,

254
00:10:21,657 --> 00:10:23,657
an integer is there to represent

255
00:10:23,657 --> 00:10:25,657
the point in the array.

256
00:10:25,657 --> 00:10:27,315
So as Mike mentioned earlier, 

257
00:10:27,315 --> 00:10:31,087
any list of things, any time a computer counts

258
00:10:31,087 --> 00:10:33,087
it starts at 0.

259
00:10:33,087 --> 00:10:35,087
So this is the index, the index is the number

260
00:10:35,087 --> 00:10:37,087
in the list as an integer.

261
00:10:37,087 --> 00:10:40,940
So we want to pick a particular spawn point

262
00:10:40,940 --> 00:10:42,551
and spawn from that point.

263
00:10:42,551 --> 00:10:44,551
This way if you do choose to use

264
00:10:44,551 --> 00:10:47,365
an array, a number of different spawn points

265
00:10:47,365 --> 00:10:49,365
then it will pick a random one to spawn at,

266
00:10:49,365 --> 00:10:51,365
making the game a bit more lively.

267
00:10:51,825 --> 00:10:55,742
So the way we pick a random one, is we say Random.Range.

268
00:10:55,742 --> 00:10:59,177
We start at 0 and we pick any number up to

269
00:10:59,177 --> 00:11:02,288
the length, so the final number of spawn points.

270
00:11:02,288 --> 00:11:05,152
It will pick any of those spawn points.

271
00:11:05,152 --> 00:11:08,245
It can help to think of an array as an accordion folder,

272
00:11:08,245 --> 00:11:09,574
if you know what that is,

273
00:11:09,574 --> 00:11:11,574
a folder with a bunch of slots in it.

274
00:11:11,574 --> 00:11:13,889
It's still really one folder, that's what an array is,

275
00:11:13,889 --> 00:11:16,622
it's just one variable, but if you open it

276
00:11:16,622 --> 00:11:18,622
you've got a whole bunch of slots inside.

277
00:11:18,622 --> 00:11:20,622
And that's effectively how an array behaves,

278
00:11:20,622 --> 00:11:22,622
you can look at the first slot, the second, the third,

279
00:11:22,622 --> 00:11:24,622
the fourth and you can put stuff in there.

280
00:11:24,622 --> 00:11:26,622
So an array of these spawn points is just

281
00:11:26,622 --> 00:11:28,622
a single object, a single array of those spawn points,

282
00:11:28,622 --> 00:11:30,622
if you open it up you will see all of the

283
00:11:30,622 --> 00:11:32,622
various ones inside of it.

284
00:11:32,622 --> 00:11:34,622
And that's what we're doing, we're just picking a random one

285
00:11:34,622 --> 00:11:37,064
pulling that out and saying 'that's our spawn point'.

286
00:11:37,773 --> 00:11:39,773
And we're reusing that information

287
00:11:39,773 --> 00:11:42,314
so we're saving that as a number

288
00:11:42,314 --> 00:11:44,553
so we're picking a number and saving in to that variable.

289
00:11:44,553 --> 00:11:46,553
And the reason we do that is because of this

290
00:11:46,553 --> 00:11:48,553
instantiate line.

291
00:11:48,553 --> 00:11:51,020
Instantiate just means create an instance of something,

292
00:11:51,020 --> 00:11:55,540
so spawns effectively is another word for it.

293
00:11:55,540 --> 00:12:01,695
And it has 3 properties, the thing to spawn, where to spawn it

294
00:12:01,695 --> 00:12:05,108
and what rotation it should have when it's created.

295
00:12:05,108 --> 00:12:07,108
So the first one is obviously the enemy,

296
00:12:07,108 --> 00:12:09,108
the one that we assigned to our public

297
00:12:09,108 --> 00:12:11,393
variable and we'll do that shortly.

298
00:12:11,393 --> 00:12:14,480
And then the second one is using that spawnPoints

299
00:12:14,480 --> 00:12:16,480
array and then we're parsing in to

300
00:12:16,480 --> 00:12:19,305
the square brackets which point in the array.

301
00:12:19,305 --> 00:12:21,305
So if I was to parse in 0

302
00:12:21,305 --> 00:12:23,972
it would choose the first transform that we

303
00:12:23,972 --> 00:12:25,972
drag and drop in to our list.

304
00:12:25,972 --> 00:12:27,972
But we're going to allow it to

305
00:12:27,972 --> 00:12:30,591
use the random one that it's just picked

306
00:12:30,591 --> 00:12:32,591
so every time Spawn runs it will pick

307
00:12:32,591 --> 00:12:35,644
a random number within that list of different spawn points,

308
00:12:35,644 --> 00:12:38,549
parse it in to the position and rotation.

309
00:12:38,549 --> 00:12:40,888
So remember that this is a transform

310
00:12:40,888 --> 00:12:45,353
and every transform has a position and a rotation.

311
00:12:46,614 --> 00:12:49,394
But that is very simply our EnemyManager.

312
00:12:50,910 --> 00:12:52,537
I'm going to switch back to Unity now.

313
00:12:52,537 --> 00:12:54,537
So we have this EnemyManager game object

314
00:12:54,537 --> 00:12:56,537
now and we have this EnemyManager script

315
00:12:56,537 --> 00:12:58,537
on it and as was hinted at

316
00:12:58,537 --> 00:13:01,689
this EnemyManager script was built to be modular,

317
00:13:01,689 --> 00:13:03,338
which means we can put stuff on, we can take stuff off

318
00:13:03,338 --> 00:13:04,999
we can have a bunch of spawn points, 

319
00:13:04,999 --> 00:13:06,999
kind of future proofing this game so you guys can keep

320
00:13:06,999 --> 00:13:08,845
adding to it and stuff like that.

321
00:13:08,845 --> 00:13:12,180
Before we start putting in

322
00:13:12,180 --> 00:13:14,180
the enemies and get them spawning

323
00:13:14,180 --> 00:13:16,180
we have to generate these spawn points

324
00:13:16,180 --> 00:13:19,316
where the enemies are going to appear at.

325
00:13:19,316 --> 00:13:21,316
So the first thing we're going to do is

326
00:13:21,316 --> 00:13:24,421
setup a spawn point for our Zombunny.

327
00:13:24,421 --> 00:13:26,421
And also if you can still see the animator window here

328
00:13:26,421 --> 00:13:28,421
we're just going to click back over to scene view

329
00:13:28,421 --> 00:13:31,475
because we don't really need the animator view anymore.

330
00:13:31,475 --> 00:13:33,475
What I'm going to do is create an empty by

331
00:13:33,475 --> 00:13:35,475
clicking the Create drop down in the hierarchy view

332
00:13:35,475 --> 00:13:37,475
and this empty game object is going to be my

333
00:13:37,475 --> 00:13:39,148
Zombunny spawn point.

334
00:13:39,148 --> 00:13:41,148
As such I'm going to name it

335
00:13:41,148 --> 00:13:43,148
ZombunnySpawnPoint and we can see it

336
00:13:43,148 --> 00:13:45,148
where it kind of exists right now

337
00:13:45,148 --> 00:13:47,148
but that's not where we want it to go.

338
00:13:47,148 --> 00:13:49,148
And so what we want to do is

339
00:13:49,148 --> 00:13:52,523
place this where we want the Zombunnies to come from.

340
00:13:52,523 --> 00:13:54,523
Now as was hinted previously we could

341
00:13:54,523 --> 00:13:56,523
have a bunch of different spawn points but we'll

342
00:13:56,523 --> 00:13:58,523
only have one per enemy for now.

343
00:13:58,523 --> 00:14:00,523
As we move around in our scene we

344
00:14:00,523 --> 00:14:02,523
can see the spawn points

345
00:14:02,523 --> 00:14:04,523
where it is right now with these arrows

346
00:14:04,523 --> 00:14:06,218
to denote where it is in the scene,

347
00:14:06,218 --> 00:14:08,858
but we can also give a customised

348
00:14:08,858 --> 00:14:10,858
icon to this object so it becomes

349
00:14:10,858 --> 00:14:13,397
much easier to see it in the scene view

350
00:14:13,397 --> 00:14:15,397
and it's really easy to do so I'm going to

351
00:14:15,397 --> 00:14:17,397
ensure that ZombunnySpawnPoint is selected

352
00:14:17,397 --> 00:14:19,397
in my hierarchy and then I'm going to

353
00:14:19,397 --> 00:14:21,397
look at the top of the inspector and

354
00:14:21,397 --> 00:14:25,045
see this little colored cube right here

355
00:14:25,045 --> 00:14:27,421
at the top of the inspector, and if I click that

356
00:14:27,421 --> 00:14:30,764
I get a drop down that gives me all these sorts of

357
00:14:30,764 --> 00:14:34,590
options and using this I can pick an icon.

358
00:14:34,590 --> 00:14:38,597
Now the Zombunny is blue, I'll pick blue so

359
00:14:38,597 --> 00:14:39,879
they're color coordinated.

360
00:14:39,879 --> 00:14:41,879
Now that I've selected that

361
00:14:41,879 --> 00:14:43,879
if I look back in my scene view

362
00:14:43,879 --> 00:14:46,778
I'm going to see that ZombunnySpawnPoint

363
00:14:46,778 --> 00:14:49,434
has a name with this icon around it.

364
00:14:49,434 --> 00:14:51,434
So it's very easy now to see exactly

365
00:14:51,434 --> 00:14:53,434
where that is, it stands out.

366
00:14:53,434 --> 00:14:55,111
I'm going to now position it.

367
00:14:55,111 --> 00:14:57,111
I'm going to supply the coordinates

368
00:14:57,111 --> 00:15:00,843
and rotation to position these, this is one of those things

369
00:15:00,843 --> 00:15:02,843
where it's a really good idea to supply the exact

370
00:15:02,843 --> 00:15:05,326
values that we provide

371
00:15:05,326 --> 00:15:07,815
only because these spawn points are kind of

372
00:15:07,815 --> 00:15:09,815
behind bits of geometry

373
00:15:09,815 --> 00:15:11,815
inside a mouse hole, stuff like that,

374
00:15:11,815 --> 00:15:13,815
so if you're off a little bit your enemies are going to

375
00:15:13,815 --> 00:15:16,062
start spawning in walls and they're not going to

376
00:15:16,062 --> 00:15:18,062
because to come out and it'll be a problem,

377
00:15:18,062 --> 00:15:20,062
especially in the mouse hole, which has a

378
00:15:20,062 --> 00:15:22,062
very narrow opening so it's very important

379
00:15:22,062 --> 00:15:25,183
to get these numbers exactly as we have them.

380
00:15:25,183 --> 00:15:27,183
So for the ZombunnySpawnPoint

381
00:15:27,183 --> 00:15:32,169
we're going to do the position of X to be -20.5.

382
00:15:32,697 --> 00:15:35,753
We're going to have Y be 0,

383
00:15:35,753 --> 00:15:39,342
and the Z value is going to be 12.5.

384
00:15:40,259 --> 00:15:42,591
We are then going to provide a rotation

385
00:15:42,591 --> 00:15:45,767
which is 0 in the X axis

386
00:15:45,767 --> 00:15:49,071
130 in the Y axis

387
00:15:49,071 --> 00:15:51,463
and 0 in the Z axis.

388
00:15:52,238 --> 00:15:54,238
Now we have the ZombunnySpawnPoint and

389
00:15:54,238 --> 00:15:56,238
it's where we want it and if I look

390
00:15:56,238 --> 00:15:58,238
in the scene view

391
00:15:58,238 --> 00:16:00,238
there it is, I can see it, it's much easier to

392
00:16:00,238 --> 00:16:02,744
see now because it has that blue icon.

393
00:16:02,744 --> 00:16:06,719
So let's create our ZombearSpawnPoint.

394
00:16:06,719 --> 00:16:10,116
Now again I can right click Create New and stuff like that

395
00:16:10,116 --> 00:16:12,116
but in this instance what I'm going to do is duplicate

396
00:16:12,116 --> 00:16:14,116
the one I've already made.

397
00:16:14,116 --> 00:16:16,116
And so I can click on the

398
00:16:16,116 --> 00:16:18,116
ZombunnySpawnPoint in the scene and I can

399
00:16:18,116 --> 00:16:20,589
right click and select Duplicate

400
00:16:20,589 --> 00:16:23,620
or I can simply click on it in the hierarchy

401
00:16:23,620 --> 00:16:25,869
and hit Command-D on a Mac

402
00:16:25,869 --> 00:16:27,869
or Control-D on a PC.

403
00:16:27,869 --> 00:16:29,869
And that's going to create an exact duplicate.

404
00:16:29,869 --> 00:16:31,869
Same name, same icon, same position,

405
00:16:31,869 --> 00:16:33,324
same everything.

406
00:16:33,324 --> 00:16:35,324
Now we have this as a duplicate,

407
00:16:35,324 --> 00:16:37,324
so let's go ahead and change it slightly.

408
00:16:37,324 --> 00:16:41,986
I'm going to rename it from ZombunnySpawnPoint

409
00:16:41,986 --> 00:16:45,128
to ZombearSpawnPoint.

410
00:16:45,128 --> 00:16:48,142
And I'm going to change it's gizmo,

411
00:16:48,142 --> 00:16:51,342
again using the drop down in the inspector

412
00:16:51,342 --> 00:16:54,356
I'm going to change it from a blue oval

413
00:16:54,356 --> 00:16:56,356
to a sort of fuchsia

414
00:16:56,356 --> 00:16:58,828
oval since the Zombear is kind of pink.

415
00:17:01,023 --> 00:17:04,279
And then I'm going to change it's position and it's rotation.

416
00:17:04,279 --> 00:17:06,279
Again it's fairly important to have these accurate.

417
00:17:06,279 --> 00:17:11,385
Mine is going to be 22.5 in the X axis,

418
00:17:11,385 --> 00:17:17,199
0 in the Y axis and 15 in the Z axis.

419
00:17:17,199 --> 00:17:19,199
The rotation of this is going to be

420
00:17:19,199 --> 00:17:28,627
0 in the X axis, 240 in the Y axis and 0 in the Z axis.

421
00:17:29,308 --> 00:17:31,308
Now we've created 2 let's go ahead and

422
00:17:31,308 --> 00:17:34,256
create the last one, we're going to do the Hellephant.

423
00:17:34,256 --> 00:17:36,256
And the steps are going to be very similar.

424
00:17:36,256 --> 00:17:38,256
So with Zombear selected

425
00:17:38,256 --> 00:17:40,256
again I'm just going to press Control-D or

426
00:17:40,256 --> 00:17:42,256
Command-D or right click and select

427
00:17:42,256 --> 00:17:45,562
Duplicate, just make a duplicate of that object.

428
00:17:45,562 --> 00:17:49,688
And we are going to rename it from ZombearSpawnPoint

429
00:17:49,688 --> 00:17:51,688
to be HellephantSpawnPoint.

430
00:17:56,105 --> 00:17:58,105
Once created, again in the

431
00:17:58,105 --> 00:18:00,105
inspector I'm going to click the

432
00:18:00,105 --> 00:18:02,301
gizmo and this time I'm going to choose

433
00:18:02,301 --> 00:18:04,301
a yellow gizmo because the

434
00:18:04,301 --> 00:18:07,196
Hellephant has that yellow stripe to it.

435
00:18:09,301 --> 00:18:11,301
And then I'm going to set it's position to be

436
00:18:11,301 --> 00:18:19,388
0 in the X axis, 0 in the Y axis, 32 in the Z axis.

437
00:18:19,388 --> 00:18:21,388
I will then set it's rotation to be

438
00:18:21,388 --> 00:18:29,589
0 in the X axis, 230 in the Y axis and 0 in the Z axis.

439
00:18:29,589 --> 00:18:31,589
And so if we now look at our scene view

440
00:18:31,589 --> 00:18:33,589
in a zoomed out way we can see

441
00:18:33,589 --> 00:18:35,589
all three of our spawn points.

442
00:18:35,589 --> 00:18:37,589
We can see exactly where our enemies are

443
00:18:37,589 --> 00:18:39,589
going to be coming from once we have

444
00:18:39,589 --> 00:18:42,921
the EnemyManager able to start spawning those.

445
00:18:43,490 --> 00:18:46,079
So we're just going to setup the first

446
00:18:46,079 --> 00:18:48,637
three instances of the EnemyManager to

447
00:18:48,637 --> 00:18:51,101
spawn our Zombunny.

448
00:18:51,101 --> 00:18:53,970
So if you click back on your EnemyManager you will

449
00:18:53,970 --> 00:18:55,900
see your EnemyManager script

450
00:18:55,900 --> 00:18:57,900
and that's setup there ready to go but we already

451
00:18:57,900 --> 00:19:00,039
have things to fill in.

452
00:19:00,039 --> 00:19:02,039
The first thing we need to fill in is PlayerHealth,

453
00:19:02,039 --> 00:19:04,986
again we don't want our EnemyManager

454
00:19:04,986 --> 00:19:06,986
to spawn enemies when the player is dead

455
00:19:06,986 --> 00:19:08,986
and so what we're going to do is locate

456
00:19:08,986 --> 00:19:10,986
the player and we're going to click and drag

457
00:19:10,986 --> 00:19:13,793
on to the PlayerHealth property

458
00:19:13,793 --> 00:19:15,793
of the EnemyManager and that's going to locate the

459
00:19:15,793 --> 00:19:17,793
PlayerHealth script so that it only spawns at

460
00:19:17,793 --> 00:19:19,542
the appropriate times.

461
00:19:19,542 --> 00:19:22,983
Then we have this next section for enemy.

462
00:19:22,983 --> 00:19:24,676
This is the enemy that's going to spawn,

463
00:19:24,676 --> 00:19:26,676
but if I look in my scene I don't

464
00:19:26,676 --> 00:19:28,676
have any enemies, there are none,

465
00:19:28,676 --> 00:19:30,244
do we need to specify what enemy we're going to spawn,

466
00:19:30,244 --> 00:19:31,785
we don't have any objects here.

467
00:19:31,785 --> 00:19:33,785
Luckily as Will has already mentioned,

468
00:19:33,785 --> 00:19:35,785
because he's classy like that, 

469
00:19:35,785 --> 00:19:37,785
is prefabs are in fact game objects

470
00:19:37,785 --> 00:19:40,869
so if we look down in the Prefabs folder

471
00:19:40,869 --> 00:19:42,869
we will notice our enemies,

472
00:19:42,869 --> 00:19:46,379
we'll notice our Zombunny and our Zombear and our Hellephant

473
00:19:46,379 --> 00:19:48,379
are there and they are prefabs.

474
00:19:48,379 --> 00:19:50,379
They don't exist in the scene

475
00:19:50,379 --> 00:19:52,379
but they are still game objects

476
00:19:52,379 --> 00:19:55,072
and as such we can click and drag them

477
00:19:55,072 --> 00:19:57,971
in to the enemy property 

478
00:19:57,971 --> 00:19:59,480
on our EnemyManager script

479
00:19:59,480 --> 00:20:01,480
and now it knows that it's going to

480
00:20:01,480 --> 00:20:07,164
instantiate or create copies of that Zombunny prefab.

481
00:20:07,951 --> 00:20:10,272
Now we can see SpawnTime is 3,

482
00:20:10,272 --> 00:20:12,272
what that means is when our game starts

483
00:20:12,272 --> 00:20:15,392
it's going to wait 3 seconds and then spawn a Zombunny.

484
00:20:15,392 --> 00:20:17,392
And then it's going to wait 3 more seconds

485
00:20:17,392 --> 00:20:20,038
and spawn a Zombunny and so on and so forth.

486
00:20:20,038 --> 00:20:21,799
Over and over and over again.

487
00:20:21,799 --> 00:20:24,772
But it still doesn't know where to spawn those.

488
00:20:24,772 --> 00:20:26,772
We have the script, we have the player, we have the enemy,

489
00:20:26,772 --> 00:20:30,333
we have the time, but if we actually expand this

490
00:20:30,333 --> 00:20:33,757
spawnPoints we will see size 0.

491
00:20:33,757 --> 00:20:35,757
Remember, this is an array,

492
00:20:35,757 --> 00:20:38,925
it's a collection, we haven't given it anything yet.

493
00:20:38,925 --> 00:20:40,925
It's size is 0, there's nothing in here.

494
00:20:40,925 --> 00:20:43,993
Now there's a lot of manual ways I can add to this

495
00:20:43,993 --> 00:20:45,993
but there's actually a really simple way.

496
00:20:45,993 --> 00:20:47,993
What I'm going to do is ensure that SpawnPoints

497
00:20:47,993 --> 00:20:49,993
is actually collapsed, and then I'm simply

498
00:20:49,993 --> 00:20:53,040
going to locate ZombunnySpawnPoint

499
00:20:53,040 --> 00:20:55,771
and click and drag it on to the name

500
00:20:55,771 --> 00:20:58,122
Spawn Points. Not down here anywhere,

501
00:20:58,122 --> 00:21:00,468
You will see on my mouse if you look at my screen

502
00:21:00,468 --> 00:21:02,468
when I click and drag and I move over the 

503
00:21:02,468 --> 00:21:05,287
SpawnPoints I get this great + icon

504
00:21:05,287 --> 00:21:07,287
If I let go now it's added to

505
00:21:07,287 --> 00:21:09,287
this collection.

506
00:21:09,287 --> 00:21:11,287
If I had a bunch of spawn points

507
00:21:11,287 --> 00:21:14,420
I can click and drag each on their the name

508
00:21:14,420 --> 00:21:16,420
and it will automatically add them to

509
00:21:16,420 --> 00:21:18,420
'the collection', so at this point 

510
00:21:18,420 --> 00:21:22,956
if I run this he will start spawning Zombunnies.

511
00:21:23,636 --> 00:21:25,885
So with that done

512
00:21:25,885 --> 00:21:27,885
we are going to save our scene

513
00:21:27,885 --> 00:21:30,454
and press play.

514
00:21:43,676 --> 00:21:45,676
So we've put one in

515
00:21:45,676 --> 00:21:47,311
of the EnemyManager.

516
00:21:47,311 --> 00:21:49,311
We designed this script to be

517
00:21:49,311 --> 00:21:51,311
modular so that you could reuse.

518
00:21:51,311 --> 00:21:53,311
We could have written a script that has

519
00:21:53,311 --> 00:21:56,042
arrays of different enemies and arrays for different

520
00:21:56,042 --> 00:21:59,240
spawn points, we just made this nice and simple.

521
00:21:59,240 --> 00:22:01,240
What that means is you can drag on more

522
00:22:01,240 --> 00:22:03,240
than one copy of this script on to your

523
00:22:03,240 --> 00:22:09,138
EnemyManager and assign the other game objects.

524
00:22:09,138 --> 00:22:11,138
So what I'm going to do is go back to the Scripts Manager

525
00:22:11,138 --> 00:22:13,138
folder and drag on a 

526
00:22:13,138 --> 00:22:15,138
another copy of enemy manager.

527
00:22:15,138 --> 00:22:18,548
So I can just drag in to that empty space and let go.

528
00:22:19,867 --> 00:22:25,386
Then as before I need to assign my Player to PlayerHealth,

529
00:22:26,080 --> 00:22:28,080
and I need to assign an enemy

530
00:22:28,080 --> 00:22:30,932
So this time I'm going to choose from Prefabs

531
00:22:31,599 --> 00:22:33,599
Zombear.

532
00:22:34,696 --> 00:22:37,213
And I'm going to drag my Zombear

533
00:22:37,213 --> 00:22:39,213
spawn point and drop it on to the

534
00:22:39,213 --> 00:22:42,421
Spawn Points array, which will populate it.

535
00:22:42,421 --> 00:22:44,421
Finally, one more time,

536
00:22:44,421 --> 00:22:46,421
Scripts Managers

537
00:22:46,421 --> 00:22:47,853
Enemy Manager.

538
00:22:47,853 --> 00:22:49,476
Drop it on again.

539
00:22:49,476 --> 00:22:51,476
Third and final time.

540
00:22:51,476 --> 00:22:53,476
And we're going to assign the Player to

541
00:22:53,476 --> 00:22:55,061
get the PlayerHealth script.

542
00:22:55,061 --> 00:22:57,552
We're going to go in to our Prefabs folder.

543
00:22:57,552 --> 00:23:00,585
Drag and drop the Hellephant game object.

544
00:23:01,196 --> 00:23:04,998
This time we'll set a different spawn time to 10.

545
00:23:05,484 --> 00:23:08,429
And we're going to drag our Hellephant spawn point

546
00:23:08,429 --> 00:23:10,429
on to the Spawn Points array so

547
00:23:10,429 --> 00:23:13,241
I'm going to leave that open like that

548
00:23:18,463 --> 00:23:20,463
So we've effectively given it

549
00:23:20,463 --> 00:23:22,463
3 copies of the same script

550
00:23:22,463 --> 00:23:25,487
We've assigned different enemies to spawn

551
00:23:25,487 --> 00:23:28,475
and different spawn points to spawn them from.

552
00:23:29,294 --> 00:23:32,695
And we can choose different spawn times, so if we want

553
00:23:32,695 --> 00:23:34,695
a spawn time of 10 for the Hellephant we get

554
00:23:34,695 --> 00:23:37,226
fewer of them, so it's kind of like a tank

555
00:23:37,226 --> 00:23:39,226
kind of class, if you've played Left For Dead.

556
00:23:39,226 --> 00:23:42,009
So go ahead and save, and play.

557
00:23:42,398 --> 00:23:44,398
And you should be able to play

558
00:23:44,398 --> 00:23:46,398
a 3 enemy-based game.

559
00:23:52,468 --> 00:23:54,468
Remember that we put different spawn points

560
00:23:54,468 --> 00:23:56,004
at different places.

561
00:23:56,004 --> 00:23:58,004
The Zombunny is coming from behind

562
00:23:58,004 --> 00:23:59,465
the dolls house.

563
00:24:00,312 --> 00:24:02,312
The Zombear is coming out of

564
00:24:02,312 --> 00:24:03,490
the mouse hole.

565
00:24:04,559 --> 00:24:06,559
And the Hellephant's are coming

566
00:24:06,559 --> 00:24:08,559
from behind the chest of draws

567
00:24:08,559 --> 00:24:12,397
in the upper corner of the game.

568
00:24:15,439 --> 00:24:17,256
And your score should be working

569
00:24:17,256 --> 00:24:19,017
and if they manage to corner you

570
00:24:19,017 --> 00:24:21,017
you should be loosing health.

571
00:24:22,142 --> 00:24:24,142
We really should have made you lose health if

572
00:24:24,142 --> 00:24:26,142
you stepped on the Legos because that hurts so much.

573
00:24:28,003 --> 00:24:28,981
Yup.

574
00:24:29,620 --> 00:24:31,620
So that was the end of phase 9

575
00:24:31,620 --> 00:24:34,038
and we have 1 more phase to go.

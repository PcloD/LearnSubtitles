1
00:00:00,361 --> 00:00:03,180
In Unity any scene with a navmesh can easily

2
00:00:03,180 --> 00:00:05,180
be navigated by a game object

3
00:00:05,180 --> 00:00:07,180
with a navmesh agent component.

4
00:00:08,527 --> 00:00:10,527
Here we have a scene in Unity.

5
00:00:10,527 --> 00:00:13,137
The scene already has a navmesh bake.

6
00:00:14,358 --> 00:00:16,973
The scene also has an empty game object

7
00:00:16,973 --> 00:00:19,327
which will be the target of our navigation.

8
00:00:21,088 --> 00:00:23,715
Finally there is a capsule which we will

9
00:00:23,715 --> 00:00:25,715
apply our navmesh agent to.

10
00:00:26,148 --> 00:00:29,717
The capsule has a SampleAgentScript attached.

11
00:00:30,286 --> 00:00:33,008
This script has a public variable Target

12
00:00:33,008 --> 00:00:35,880
which is already set to our empty game object

13
00:00:35,880 --> 00:00:37,880
named Target.

14
00:00:38,842 --> 00:00:40,842
To add a navmesh agent

15
00:00:40,842 --> 00:00:43,111
click the Add Component button

16
00:00:43,111 --> 00:00:45,409
in the inspector view and select

17
00:00:45,409 --> 00:00:47,983
Navigation - NavMesh Agent.

18
00:00:50,168 --> 00:00:52,168
The agent has several settings which

19
00:00:52,168 --> 00:00:54,835
we can modify to change it's behaviour.

20
00:00:55,438 --> 00:00:58,580
The Radius represents the radius of the agent.

21
00:00:58,580 --> 00:01:02,183
While the Speed is the agent's max speed.

22
00:01:03,212 --> 00:01:05,212
The Acceleration is how quickly

23
00:01:05,212 --> 00:01:07,029
the agent will accelerate.

24
00:01:07,395 --> 00:01:09,943
And the Angular Speed is how quickly

25
00:01:09,943 --> 00:01:11,943
the agent can turn.

26
00:01:12,769 --> 00:01:14,769
The Stopping Distance property

27
00:01:14,769 --> 00:01:16,769
represents the distance from the target

28
00:01:16,769 --> 00:01:19,368
that the agent will begin slowing down.

29
00:01:21,301 --> 00:01:23,824
Auto Traverse Off Mesh Links

30
00:01:23,824 --> 00:01:25,824
dictates whether or not the agent will

31
00:01:25,824 --> 00:01:28,482
utilise off mesh links automatically.

32
00:01:29,328 --> 00:01:31,328
More information on off mesh links

33
00:01:31,328 --> 00:01:33,666
can be found in the lesson linked below.

34
00:01:35,521 --> 00:01:37,521
Auto Braking determines if the agent

35
00:01:37,521 --> 00:01:40,128
will brake when nearing it's destination.

36
00:01:40,733 --> 00:01:43,155
Leaving this checked will stop the agent

37
00:01:43,155 --> 00:01:45,155
from overshooting it's target.

38
00:01:46,405 --> 00:01:48,405
Auto Repath will allow the agent

39
00:01:48,405 --> 00:01:50,405
to rebuilt it's path if it's

40
00:01:50,405 --> 00:01:52,926
current path becomes invalid.

41
00:01:53,933 --> 00:01:57,088
The Height property is the height of the agent.

42
00:01:57,685 --> 00:02:00,555
The Base Offset is the vertical offset

43
00:02:00,555 --> 00:02:02,555
of the agent's collider.

44
00:02:04,264 --> 00:02:06,209
The Obstacle Avoidance Type

45
00:02:06,209 --> 00:02:08,209
has several options.

46
00:02:08,209 --> 00:02:11,781
At higher qualities avoidance is more accurate.

47
00:02:11,781 --> 00:02:15,007
At lower qualities avoidance is more efficient.

48
00:02:16,674 --> 00:02:18,674
The avoidance priority determines which

49
00:02:18,674 --> 00:02:21,421
agents have priority when navigating.

50
00:02:22,018 --> 00:02:25,473
Agents of a higher priority should have a lower number.

51
00:02:26,740 --> 00:02:29,847
Finally the NavMesh Walkable property

52
00:02:29,847 --> 00:02:31,847
tells the agent which navigation

53
00:02:31,847 --> 00:02:34,082
layers it can traverse.

54
00:02:34,791 --> 00:02:37,459
For more information on navigation layers

55
00:02:37,459 --> 00:02:41,404
see the lesson on navmesh making linked below.

56
00:02:42,446 --> 00:02:44,446
It is worth noting that while we can

57
00:02:44,446 --> 00:02:46,030
change these properties,

58
00:02:46,030 --> 00:02:48,460
to achieve a large range of effects

59
00:02:48,460 --> 00:02:52,408
the default properties will work for most situations.

60
00:02:53,783 --> 00:02:55,783
Once the navmesh agent component

61
00:02:55,783 --> 00:02:57,783
is applied and configured

62
00:02:57,783 --> 00:03:00,473
we only need to tell it where to go.

63
00:03:02,699 --> 00:03:05,366
In our SampleAgentScript

64
00:03:05,366 --> 00:03:07,824
we can see that we first declare a variable

65
00:03:07,824 --> 00:03:12,181
of type NavMeshAgent named Agent.

66
00:03:13,848 --> 00:03:17,631
In the start method we get a reference to our navmesh agent

67
00:03:17,631 --> 00:03:20,092
and store it in our agent variable

68
00:03:20,092 --> 00:03:23,043
using the GetComponent function.

69
00:03:24,370 --> 00:03:26,846
In order to tell our agent where to go

70
00:03:26,846 --> 00:03:29,445
we use the Set Destination method

71
00:03:29,445 --> 00:03:31,910
of the NavMeshAgent class.

72
00:03:32,487 --> 00:03:35,302
This method reads in a single vector3.

73
00:03:35,996 --> 00:03:40,526
In this instance we will call the SetDestination method

74
00:03:40,526 --> 00:03:44,807
by typing Agent.SetDestination.

75
00:03:46,057 --> 00:03:49,647
Then in the parenthesis we will type

76
00:03:49,647 --> 00:03:51,885
target.position.

77
00:03:52,411 --> 00:03:54,900
This tells our agent to move towards

78
00:03:54,900 --> 00:03:56,900
the target game object.

79
00:03:59,066 --> 00:04:01,829
Back in Unity we can run our scene.

80
00:04:02,496 --> 00:04:05,785
We will notice immediately that the capsule game object

81
00:04:05,785 --> 00:04:08,343
begins moving and traversing our level.

82
00:04:09,079 --> 00:04:12,195
The capsule will eventually reach our target game object

83
00:04:12,195 --> 00:04:14,195
and come to a stop.

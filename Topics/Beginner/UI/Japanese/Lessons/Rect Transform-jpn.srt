1
00:00:01,050 --> 00:00:04,041
RectTransform は新規作成される UI 要素で

2
00:00:04,041 --> 00:00:06,041
従来の Transform コンポーネントの 

3
00:00:06,041 --> 00:00:07,957
代わりに使われるコンポーネントです

4
00:00:07,957 --> 00:00:10,912
これまでの Transform コンポーネントはシーンにある 3D オブジェクトの

5
00:00:10,912 --> 00:00:14,452
位置・角度・スケールの値を保持していましたが

6
00:00:15,656 --> 00:00:18,152
この RectTransform は

7
00:00:18,152 --> 00:00:20,152
幅・高さ・オブジェクトの中心位置を備えた

8
00:00:20,152 --> 00:00:22,525
2D 矩形（長方形）です

9
00:00:24,227 --> 00:00:26,227
RectTransform はシンプルな 2D 矩形で

10
00:00:26,227 --> 00:00:28,227
表示されるものの

11
00:00:28,227 --> 00:00:30,851
オブジェクトの位置として Z 軸や

12
00:00:30,851 --> 00:00:32,851
角度とスケールなども扱えるので

13
00:00:32,851 --> 00:00:34,851
シーン内で 3D オブジェクト的に

14
00:00:34,851 --> 00:00:36,851
操作することもできます

15
00:00:43,304 --> 00:00:46,077
RectTransform と従来の Transform には

16
00:00:46,077 --> 00:00:48,077
ひとつ大きな違いがあります 

17
00:00:48,077 --> 00:00:49,717
それは「アンカー」という概念です

18
00:00:49,717 --> 00:00:52,327
親子オブジェクトが両方とも RectTransform を持つ場合

19
00:00:52,327 --> 00:00:55,359
子を親にアンカーすることができます

20
00:00:56,591 --> 00:00:58,784
アンカーされたオブジェクトは 親 UI 要素の

21
00:00:58,784 --> 00:01:01,144
RectTransform に指定された位置やサイズに基いて

22
00:01:01,144 --> 00:01:04,238
同様に移動・伸縮されます

23
00:01:05,332 --> 00:01:07,906
UI 要素はすべて Canvas の子にしておくのが

24
00:01:07,906 --> 00:01:10,473
理想的です

25
00:01:10,473 --> 00:01:12,473
直子でなくてもかまいません

26
00:01:14,630 --> 00:01:17,358
Canvas 自体も RectTransform を含むため

27
00:01:18,134 --> 00:01:21,031
通常はすべての UI 要素の親オブジェクトが

28
00:01:21,031 --> 00:01:24,249
RectTransform を持つことになります

29
00:01:25,426 --> 00:01:29,193
つまり基本的に「すべての UI 要素は親にアンカーされる」わけです

30
00:01:30,812 --> 00:01:33,244
Canvas コンポーネントに関する詳細は

31
00:01:33,244 --> 00:01:35,244
下記リンク先の情報をご覧ください

32
00:01:36,656 --> 00:01:39,126
シーン ビューで UI 要素を操作する時は

33
00:01:39,126 --> 00:01:41,126
Rect ツールを使うのが便利です

34
00:01:42,248 --> 00:01:44,414
Rect ツールは左上のツールバーで

35
00:01:44,414 --> 00:01:46,414
Rect ツール ボタンをクリックすれば使えます

36
00:01:46,414 --> 00:01:49,122
ショートカット キー T を押しても同様です

37
00:01:49,824 --> 00:01:52,036
Rect ツールでは UI 要素の

38
00:01:52,036 --> 00:01:54,036
移動・リサイズ・回転など

39
00:01:54,036 --> 00:01:56,036
様々な操作が可能です

40
00:01:56,855 --> 00:01:59,635
UI 要素を移動するには まず対象を選択して

41
00:01:59,635 --> 00:02:02,538
矩形をクリック & ドラッグします

42
00:02:03,792 --> 00:02:05,792
UI 要素をリサイズするには

43
00:02:05,792 --> 00:02:09,021
矩形の端や角をクリック & ドラッグします

44
00:02:09,967 --> 00:02:11,967
カーソルを注意して見てください

45
00:02:11,967 --> 00:02:14,650
矩形の端や角の上では 通常のアイコンではなく

46
00:02:14,650 --> 00:02:16,650
ドラッグした時のリサイズ方向を示す

47
00:02:16,650 --> 00:02:19,132
矢印アイコンに変化しています

48
00:02:19,983 --> 00:02:22,409
また Shift キーを押しながら UI 要素をドラッグすると

49
00:02:22,409 --> 00:02:24,409
比率を維持したままリサイズできます

50
00:02:25,175 --> 00:02:27,569
UI 要素を回転させるには

51
00:02:27,569 --> 00:02:30,905
矩形の少し外側をクリック & ドラッグします

52
00:02:31,564 --> 00:02:33,872
この場合もカーソルが「回転」を示すものに 

53
00:02:33,872 --> 00:02:35,872
変化します

54
00:02:39,792 --> 00:02:42,046
UI 要素をリサイズ/回転させる場合には

55
00:02:42,046 --> 00:02:44,353
ピポット位置に意識する必要があります

56
00:02:45,088 --> 00:02:47,157
ピボット位置とは一般的なゲームオブジェクトの

57
00:02:47,157 --> 00:02:49,157
中心点にあたるもので

58
00:02:49,919 --> 00:02:52,404
青色の輪として表示されます

59
00:02:52,404 --> 00:02:55,762
デフォルトでは UI 要素の中心に配置されます

60
00:02:56,345 --> 00:02:58,722
ピボット位置を移動する場合は シーン ビューで

61
00:02:58,722 --> 00:03:01,589
青色の輪をクリック & ドラッグします

62
00:03:02,407 --> 00:03:04,808
なおピボット位置は UI 要素の矩形よりも

63
00:03:04,808 --> 00:03:07,728
外に配置することも可能です

64
00:03:08,587 --> 00:03:10,859
ピボット位置を矩形外に配置すると

65
00:03:10,859 --> 00:03:13,970
独特な振る舞いを実現できますが

66
00:03:13,970 --> 00:03:16,415
一般的には 矩形内に配置します

67
00:03:17,368 --> 00:03:19,368
RectTransform と transform のもうひとつの

68
00:03:19,368 --> 00:03:21,368
大きな違いとして 編集中における

69
00:03:21,368 --> 00:03:23,835
グローバル/ローカル空間に対する影響範囲があります

70
00:03:24,738 --> 00:03:27,268
UI 要素をローカル空間で編集している時

71
00:03:27,268 --> 00:03:30,252
矩形とハンドルは UI 要素に合わせた位置で表示されますが

72
00:03:31,042 --> 00:03:34,567
グローバル空間においては矩形とハンドルの位置がグローバルになり

73
00:03:34,567 --> 00:03:38,008
矩形は UI 要素の境界線を示します

74
00:03:38,632 --> 00:03:42,095
UI 要素を回転させていると 違いが分かりやすいでしょう

75
00:03:43,686 --> 00:03:46,138
シーン ビュー上でのアンカーは小さな三角形を 4 つ輪状に

76
00:03:46,138 --> 00:03:48,596
並べた姿で表示されます 位置はデフォルトで

77
00:03:48,596 --> 00:03:50,596
親 RectTransform の UI 要素に

78
00:03:50,596 --> 00:03:53,322
グループ化されます

79
00:03:55,770 --> 00:03:58,509
この親 RectTransform は Canvas にすることができます

80
00:03:59,506 --> 00:04:02,311
アンカーの詳細については このレッスンの後半で紹介します

81
00:04:03,405 --> 00:04:05,906
さて RectTransform をインスペクターで見てみると

82
00:04:05,906 --> 00:04:08,490
Transform コンポーネントと明確に違う点があります

83
00:04:09,542 --> 00:04:11,542
RectTransform では UI 要素の位置とサイズが

84
00:04:11,542 --> 00:04:13,445
インスペクターの右上に

85
00:04:13,445 --> 00:04:15,445
表示されるのです

86
00:04:15,945 --> 00:04:18,672
Pos X と Pos Y はアンカーから

87
00:04:18,672 --> 00:04:20,906
ピボット位置までの距離（ピクセル単位）で

88
00:04:20,906 --> 00:04:22,906
示されます

89
00:04:23,903 --> 00:04:25,903
Pos Z も同様に距離ですがローカルの Z 軸に

90
00:04:25,903 --> 00:04:29,494
沿っており 通常は 0 になります

91
00:04:30,049 --> 00:04:34,024
Width と Height は UI 要素のサイズを示します（ピクセル単位）

92
00:04:35,574 --> 00:04:37,574
位置とサイズは動的なフィールドで

93
00:04:37,574 --> 00:04:39,199
状況に応じて変化します

94
00:04:39,199 --> 00:04:41,698
これらはアンカー位置と直接的な関係があるので

95
00:04:41,698 --> 00:04:44,411
レッスン後半で より詳細な内容を取り上げます

96
00:04:46,297 --> 00:04:48,297
RectTransform コンポーネントには強力な

97
00:04:48,297 --> 00:04:50,297
アンカー メカニズムが備わっており

98
00:04:50,921 --> 00:04:53,435
親ゲーム オブジェクトが RectTransform を含む場合は

99
00:04:53,435 --> 00:04:56,907
子 RectTransform を親にアンカー付けできます

100
00:04:57,700 --> 00:04:59,700
通常すべての UI 要素は

101
00:04:59,700 --> 00:05:02,384
何らかの形で親にアンカー付けされます

102
00:05:03,208 --> 00:05:05,731
シーン ビュー上でのアンカーは小さな三角形 4 つの

103
00:05:05,731 --> 00:05:07,731
ギズモとして表示されます

104
00:05:08,162 --> 00:05:10,674
この三角形はそれぞれ アンカーを示し

105
00:05:12,293 --> 00:05:14,529
RectTransform のそれぞれの

106
00:05:14,529 --> 00:05:16,529
角に関連付けられています

107
00:05:18,093 --> 00:05:20,525
左上のアンカーが関連付けられているのは

108
00:05:20,525 --> 00:05:23,362
RectTransform の左上の角

109
00:05:23,362 --> 00:05:26,056
同様に 右下は右下 と

110
00:05:26,056 --> 00:05:29,189
各アンカーは対応する角に関連付けられています

111
00:05:29,965 --> 00:05:32,077
アンカーは親の内側に配置します

112
00:05:32,077 --> 00:05:35,464
UI 要素の内側ではないので注意してください

113
00:05:36,489 --> 00:05:38,489
またアンカーは親の矩形の外側には

114
00:05:38,489 --> 00:05:40,489
配置できません

115
00:05:41,238 --> 00:05:43,238
アンカーの移動は クリック & ドラッグ操作で

116
00:05:43,238 --> 00:05:44,921
行います

117
00:05:45,655 --> 00:05:47,655
中心部をクリックすると

118
00:05:47,655 --> 00:05:49,989
すべての三角形をグループとして移動し

119
00:05:50,721 --> 00:05:54,421
いずれかの三角形をクリックすると 対象アンカーだけを移動します

120
00:05:56,413 --> 00:05:58,413
アンカーはアンカー先の RectTransform に対して

121
00:05:58,413 --> 00:06:01,515
固定関係にあります

122
00:06:02,181 --> 00:06:04,181
一方で 同じくアンカー先の

123
00:06:04,181 --> 00:06:07,463
親の RectTransform との関係は固定ではありません

124
00:06:08,281 --> 00:06:10,281
アンカーの設置時

125
00:06:10,281 --> 00:06:12,281
アンカーとそれに対応する RectTransform の角との距離は

126
00:06:12,281 --> 00:06:15,295
固定値として指定されますが

127
00:06:16,389 --> 00:06:18,998
親の RectTransform 内でのアンカーの位置は

128
00:06:18,998 --> 00:06:21,671
親のサイズに対する相対距離です

129
00:06:21,671 --> 00:06:23,894
このため親のサイズが変更されると

130
00:06:23,894 --> 00:06:25,894
それに合わせて影響を受けます

131
00:06:26,449 --> 00:06:28,449
親に対し相対的なアンカーの位置は

132
00:06:28,449 --> 00:06:30,449
X 軸と Y 軸への比率で

133
00:06:30,449 --> 00:06:32,449
示されます

134
00:06:35,311 --> 00:06:37,311
このため親の RectTransform が変更されると

135
00:06:37,311 --> 00:06:39,311
アンカーの絶対位置は変化することになります

136
00:06:42,656 --> 00:06:44,921
比率は正規化された値で

137
00:06:44,921 --> 00:06:48,203
各軸 0～1 の範囲で指定します

138
00:06:49,145 --> 00:06:51,145
0,0 は親 RectTransform の左下

139
00:06:51,145 --> 00:06:53,792
そして 1,1 は

140
00:06:53,792 --> 00:06:55,388
右上を意味します

141
00:06:56,219 --> 00:06:58,275
通常は 4 つのアンカーすべてが

142
00:06:58,275 --> 00:07:00,594
ある一点にまとめられているので

143
00:07:00,594 --> 00:07:03,281
UI 要素全体がその一点にアンカーされます

144
00:07:03,281 --> 00:07:06,088
たとえば RectTransform のサイズが変更されても

145
00:07:06,588 --> 00:07:08,588


146
00:07:09,088 --> 00:07:11,757
UI 要素はアンカーに合わせて移動するだけで

147
00:07:12,575 --> 00:07:15,044
縮小/拡大またはリサイズされません

148
00:07:15,044 --> 00:07:17,487
これはアンカーとそれに関連付けられた角との距離が

149
00:07:17,487 --> 00:07:19,487
固定だからです

150
00:07:19,987 --> 00:07:22,906
逆に アンカーが一点に集まっていない場合は

151
00:07:22,906 --> 00:07:25,775
親の変形に合わせて UI 要素も伸縮します

152
00:07:25,775 --> 00:07:28,124
これはアンカー位置およびアンカー間の距離が

153
00:07:28,124 --> 00:07:30,526
RectTransform に対して相対的であり

154
00:07:30,526 --> 00:07:34,155
親のサイズ変更を受けてサイズが変わってしまうためです

155
00:07:35,000 --> 00:07:37,000
この場合 親に対する UI 要素の伸縮比率は

156
00:07:37,000 --> 00:07:40,137
アンカーの位置によって変化します

157
00:07:43,759 --> 00:07:45,759
いくつか一般的な例を挙げると:

158
00:07:46,259 --> 00:07:49,224
「アンカーを UI 要素の四隅に設置」

159
00:07:49,224 --> 00:07:51,224
こうすると 伸縮しても親に対する子 UI 要素の

160
00:07:51,224 --> 00:07:54,689
表示比率が一定に維持されます

161
00:07:56,363 --> 00:07:58,695
「アンカーを親の四隅に配置」

162
00:07:59,678 --> 00:08:01,678
こうすると UI 要素の端から

163
00:08:01,678 --> 00:08:04,257
親の境界線までの距離が

164
00:08:04,257 --> 00:08:06,963
一定に保たれます

165
00:08:09,383 --> 00:08:11,673
「アンカーを 2 個一組にして

166
00:08:11,673 --> 00:08:14,090
親 RectTransform の角 2 つに配置」

167
00:08:14,090 --> 00:08:16,090
こうすると UI 要素が平行方向にだけ伸縮し

168
00:08:16,090 --> 00:08:18,342
垂直方向は固定になります

169
00:08:22,071 --> 00:08:24,443
アンカー付けされた UI 要素がどのように伸縮するかは

170
00:08:24,443 --> 00:08:26,663
親 RectTransform の境界線をドラッグして

171
00:08:26,663 --> 00:08:29,202
手軽にプレビューすることができます

172
00:08:29,867 --> 00:08:32,629
ドラッグ中はカーソルに「Preview」と表示されます

173
00:08:32,629 --> 00:08:34,629
Preview 表示中はサイズをどのように変更しても

174
00:08:34,629 --> 00:08:37,604
ドラッグを放した瞬間に 元の状態に戻ります

175
00:08:38,477 --> 00:08:41,581
アンカーを手動配置するときには

176
00:08:41,581 --> 00:08:44,094
Shift キーを押しながら操作すると UI 要素も

177
00:08:44,094 --> 00:08:45,787
同時に変更されるので便利です

178
00:08:46,249 --> 00:08:48,940
RectTransform をリサイズした時の挙動は

179
00:08:48,940 --> 00:08:52,375
アンカー位置とそれに関連付けられている角の関係によって変わります

180
00:08:52,375 --> 00:08:55,308
これは 両者の距離が固定値であるためです

181
00:08:58,211 --> 00:09:00,211
なおアンカーがグループ化されていない状態で

182
00:09:00,211 --> 00:09:02,211
RectTransform の位置/サイズ情報が

183
00:09:02,211 --> 00:09:04,211
表示されている場合は アンカーの位置として

184
00:09:04,211 --> 00:09:06,654
単一地点が定義されなくなるので

185
00:09:06,654 --> 00:09:08,654
注意しましょう

186
00:09:09,485 --> 00:09:11,485
たとえばアンカー全 4 個がグループ化されている場合

187
00:09:11,485 --> 00:09:13,485
アンカーは単一地点として扱われます

188
00:09:13,930 --> 00:09:16,319
このとき RectTransform には

189
00:09:16,319 --> 00:09:18,319
ピボット位置までの距離補正値と

190
00:09:18,319 --> 00:09:20,319
UI 要素の高さと幅が表示されます

191
00:09:21,054 --> 00:09:23,054
しかし アンカーがバラバラの場合は

192
00:09:23,054 --> 00:09:25,054
RectTransform には左右上下に対する

193
00:09:25,054 --> 00:09:28,141
固定値が表示されます

194
00:09:28,779 --> 00:09:32,729
この値は  関連付けられた角に対する

195
00:09:32,729 --> 00:09:35,659
アンカー位置の固定補正値（X 軸/Y 軸）です

196
00:09:38,286 --> 00:09:40,286
また アンカーが 2 個ずつグループ化されている場合は

197
00:09:40,286 --> 00:09:43,006
対応する軸の伸縮が行われなくなり

198
00:09:43,006 --> 00:09:45,006
RectTransform の表示は対応軸に合わせて

199
00:09:45,006 --> 00:09:47,791
位置と幅または 位置と高さ

200
00:09:47,791 --> 00:09:49,791
になります

201
00:09:52,377 --> 00:09:55,373
UI 要素のピボット位置とアンカーの構成には

202
00:09:55,373 --> 00:09:58,050
一般的なものがたくさんあります

203
00:09:58,909 --> 00:10:00,839
そういった一般的用途をすばやく使えるよう

204
00:10:00,839 --> 00:10:04,317
RectTransform には Anchor Presets ウィンドウがあります

205
00:10:04,927 --> 00:10:06,927
プリセットを使うにはこのボタンを

206
00:10:06,927 --> 00:10:08,927
クリックします

207
00:10:09,427 --> 00:10:11,635
すると RectTransform の現在の

208
00:10:11,635 --> 00:10:13,635
アンカー設定が表示されます

209
00:10:14,867 --> 00:10:16,867
このウィンドウでは一般的な

210
00:10:16,867 --> 00:10:19,653
アンカー/ピボット位置構成が指定できます

211
00:10:20,318 --> 00:10:22,499
構成の並び順は

212
00:10:22,499 --> 00:10:25,535
アンカーの位置ごとに並んでおり

213
00:10:26,284 --> 00:10:28,284
中央部には固定アンカー構成が

214
00:10:28,284 --> 00:10:30,886
外縁には伸縮アンカー構成があります

215
00:10:31,668 --> 00:10:33,668
アンカー位置はクリックするだけで

216
00:10:33,668 --> 00:10:36,176
簡単に変更できます

217
00:10:38,074 --> 00:10:41,358
また構成の編集中には UI 要素のピボットと位置の

218
00:10:41,358 --> 00:10:43,638
どちらも同時に指定できます

219
00:10:43,638 --> 00:10:45,638
指定するには Shift/Alt キーを押しながら

220
00:10:45,638 --> 00:10:47,944
指定する構成を

221
00:10:47,944 --> 00:10:50,266
クリックします

222
00:10:51,107 --> 00:10:53,107
なお使用できる修飾キーは

223
00:10:53,107 --> 00:10:55,107
Anchor Presets ウィンドウ上部に記載されます

224
00:10:58,038 --> 00:11:00,758
Pivot は UI 要素のピボット位置を定義する項目で

225
00:11:00,758 --> 00:11:03,329
0～1 の範囲で正規化された値を使用します

226
00:11:03,329 --> 00:11:05,496
値はそれぞれ X/Y 軸に対応しており

227
00:11:05,496 --> 00:11:07,496
0,0 が左下

228
00:11:07,496 --> 00:11:09,663
1,1 が右上を意味します

229
00:11:10,424 --> 00:11:13,364
Rotation は UI 要素の回転を定義します

230
00:11:14,292 --> 00:11:16,540
一般的な用途では

231
00:11:16,540 --> 00:11:18,916
変更するのは Z 軸だけにして

232
00:11:18,916 --> 00:11:21,736
UI 要素を 2D 空間内に収めます

233
00:11:22,466 --> 00:11:25,110
Rotation では 3 軸すべてにかけられますが

234
00:11:25,110 --> 00:11:27,989
その場合要素は 3D 空間で見えるようになります

235
00:11:28,814 --> 00:11:30,814
スケールについて触れる前に

236
00:11:30,814 --> 00:11:34,031
まずスケールとサイズの違いを説明しましょう

237
00:11:34,724 --> 00:11:36,724
シーン ビューで UI 要素の

238
00:11:36,724 --> 00:11:39,084
サイズを調節したり インスペクターで

239
00:11:39,084 --> 00:11:40,219
高さ/横幅を調節すると

240
00:11:40,219 --> 00:11:43,620
その UI 要素は「スケール」ではなく「サイズ変更」されます

241
00:11:44,410 --> 00:11:48,088
サイズ変更した場合 RectTransform の幅と高さが変更され

242
00:11:48,088 --> 00:11:50,554
UI 要素のスケールは変更されません

243
00:11:51,237 --> 00:11:53,377
そして UI 要素のサイズを変更しても

244
00:11:53,377 --> 00:11:55,653
対象のフォント サイズや

245
00:11:55,653 --> 00:11:57,405
スライス画像の境界線

246
00:11:57,405 --> 00:12:00,109
その他関連項目は影響を受けません

247
00:12:00,872 --> 00:12:03,136
一方で UI 要素のスケールを変えると

248
00:12:03,136 --> 00:12:04,998
要素全体にスケールがかかり

249
00:12:04,998 --> 00:12:07,537
フォントや境界線を含めすべてが影響を受けます

250
00:12:08,258 --> 00:12:10,875
レイアウト調整の場合は 一般的に

251
00:12:10,875 --> 00:12:14,164
UI 要素のサイズを変更し スケールはそのままにします

252
00:12:14,761 --> 00:12:16,761
スケールが便利なケースは

253
00:12:16,761 --> 00:12:20,085
アニメーション付きエフェクトなど別の用途です

254
00:12:20,834 --> 00:12:22,834
なお UI 要素のサイズに

255
00:12:22,834 --> 00:12:25,798
負の値を指定すると不可視状態になります

256
00:12:26,464 --> 00:12:28,701
他方 スケールは負の値をサポートしていて

257
00:12:28,701 --> 00:12:31,543
演出効果として使えます たとえば UI 要素を

258
00:12:31,543 --> 00:12:34,016
スケール -1 でフリップさせる といったように

259
00:12:35,714 --> 00:12:37,506
RectTransform コンポーネントには

260
00:12:37,506 --> 00:12:39,506
この他 2 種類の編集モード

261
00:12:40,047 --> 00:12:42,544
Blueprint モード/Raw Edit モードがあります

262
00:12:43,472 --> 00:12:45,682
Blueprint モードでは RectTransform を

263
00:12:45,682 --> 00:12:49,095
回転やスケールがかかっていないかのように編集できます

264
00:12:57,606 --> 00:12:59,606
このため Blueprint モードでは

265
00:12:59,606 --> 00:13:03,033
Rect ツールを使って UI 要素を回転させられません

266
00:13:04,334 --> 00:13:07,329
通常 RectTransform でピボット位置や

267
00:13:07,329 --> 00:13:09,329
アンカーを編集しても

268
00:13:09,953 --> 00:13:11,953
ピボットやアンカーだけが移動して

269
00:13:11,953 --> 00:13:14,133
UI 要素は移動しません

270
00:13:14,133 --> 00:13:16,851
言い換えればシーン ビューでの編集と同じ振る舞いをします

271
00:13:17,489 --> 00:13:19,489
しかし Raw Edit モードを使用すると

272
00:13:19,489 --> 00:13:21,834
逆にピボットまたはアンカーが固定されて

273
00:13:21,834 --> 00:13:25,631
UI 要素が固定項目に対して相対的に移動します

274
00:13:31,863 --> 00:13:34,587
RectTransform の一部/すべての値が

275
00:13:34,587 --> 00:13:36,587
親 RectTransform や

276
00:13:36,587 --> 00:13:38,893
レイアウト グループなどの UI 要素に

277
00:13:38,893 --> 00:13:42,194
制御されている場合

278
00:13:43,136 --> 00:13:45,735
RectTransform の一部または

279
00:13:45,735 --> 00:13:47,735
すべてのプロパティが

280
00:13:47,735 --> 00:13:50,205
編集不可状態になります

281
00:13:50,967 --> 00:13:53,299
そのような場合には RectTransform の上部に

282
00:13:53,299 --> 00:13:55,299
値が別のコンポーネントに制御されている旨を

283
00:13:55,299 --> 00:13:58,752
示すメッセージが表示されます

284
00:13:59,653 --> 00:14:01,653
RectTransform を制御するコンポーネントの

285
00:14:01,653 --> 00:14:03,653
詳細については Unity のドキュメントを

286
00:14:03,653 --> 00:14:05,653
ご覧になるか 対象コンポーネントの

287
00:14:05,653 --> 00:14:08,800
レッスンを視聴してください

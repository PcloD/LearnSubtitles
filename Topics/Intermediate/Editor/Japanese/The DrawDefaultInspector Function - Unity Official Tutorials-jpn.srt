1
00:00:00,278 --> 00:00:03,194
The DrawDefaultInspector function allows us to easily

2
00:00:03,194 --> 00:00:06,053
recreate the default inspector for a script

3
00:00:06,053 --> 00:00:08,053
inside a custom inspector.

4
00:00:09,317 --> 00:00:11,317
This is very useful if we only want to add

5
00:00:11,317 --> 00:00:13,821
new items to the inspector for a script

6
00:00:13,821 --> 00:00:16,513
instead of changing the currently existing items.

7
00:00:17,666 --> 00:00:19,845
Let's take a look at an example.

8
00:00:19,845 --> 00:00:22,355
Here we have a script called SomeScript.

9
00:00:23,077 --> 00:00:25,976
This script contains an integer named level,

10
00:00:25,976 --> 00:00:27,783
a float named health

11
00:00:27,783 --> 00:00:29,783
and a vector named target.

12
00:00:30,477 --> 00:00:34,180
We also have an editor script called SomeScriptEditor.

13
00:00:34,555 --> 00:00:36,780
This script creates a custom inspector

14
00:00:36,780 --> 00:00:38,780
for the SomeScript component.

15
00:00:39,391 --> 00:00:41,530
We can see that the OnInspectorGUI method

16
00:00:41,530 --> 00:00:44,566
has ben created but there's nothing inside.

17
00:00:45,330 --> 00:00:48,134
For more information on creating custom inspectors

18
00:00:48,134 --> 00:00:51,176
see the lesson on custom inspectors linked below.

19
00:00:52,148 --> 00:00:54,148
In Unity we have a scene with

20
00:00:54,148 --> 00:00:56,328
an empty game object in it.

21
00:00:56,328 --> 00:01:00,182
This object has our SomeScript attached to it.

22
00:01:01,182 --> 00:01:03,836
We should notice that even though SomeScript

23
00:01:03,836 --> 00:01:05,836
has 3 public variables

24
00:01:05,836 --> 00:01:08,930
nothing is appearing in the inspector view for it.

25
00:01:08,930 --> 00:01:11,854
This is due to the custom inspector existing

26
00:01:11,854 --> 00:01:14,762
but having no graphical user interface code.

27
00:01:16,373 --> 00:01:18,718
Back in our SomeScriptEditor

28
00:01:18,718 --> 00:01:20,718
we could write out all of the code required

29
00:01:20,718 --> 00:01:23,264
to display public variables in the inspector.

30
00:01:23,681 --> 00:01:27,014
But that is cumbersome and requires a lot of work.

31
00:01:27,014 --> 00:01:29,472
This is especially true if we do not want to

32
00:01:29,472 --> 00:01:31,472
customise how they appear.

33
00:01:32,750 --> 00:01:36,167
Instead we can replace all of that code

34
00:01:36,167 --> 00:01:39,098
with the DrawDefaultInspector function.

35
00:01:39,959 --> 00:01:42,180
This function will create all of the default

36
00:01:42,180 --> 00:01:44,180
inspector fields whilst still allowing

37
00:01:44,180 --> 00:01:46,941
us to add any custom elements we would like.

38
00:01:48,052 --> 00:01:50,052
If we go back in to Unity

39
00:01:50,052 --> 00:01:52,345
we can now see that our SomeScript fields

40
00:01:52,345 --> 00:01:54,345
appear correctly in the inspector

41
00:01:54,345 --> 00:01:56,345
with barely any extra work.

42
00:01:56,984 --> 00:01:58,984
Our script is now primed to add any

43
00:01:58,984 --> 00:02:01,628
new functionality we may desire.

44
00:02:02,378 --> 00:02:04,252
Let's demonstrate that by adding a 

45
00:02:04,252 --> 00:02:06,252
HelpBox to our inspector.

46
00:02:07,724 --> 00:02:10,195
Back in our SomeScriptEditor

47
00:02:10,195 --> 00:02:13,550
we can add a HelpBox in the OnInspectorGUI method.

48
00:02:14,119 --> 00:02:16,119
We do that by typing the editor GUI

49
00:02:16,119 --> 00:02:19,185
layout class name, followed by a .

50
00:02:19,185 --> 00:02:21,185
and the method name HelpBox.

51
00:02:22,463 --> 00:02:25,965
We will parse 2 parameters in to the HelpBox method.

52
00:02:25,965 --> 00:02:27,965
The first is the text that we want

53
00:02:27,965 --> 00:02:29,965
to appear in the HelpBox.

54
00:02:29,965 --> 00:02:32,649
The second is the type of HelpBox we want.

55
00:02:32,649 --> 00:02:34,649
This is an enumeration that allows us to

56
00:02:34,649 --> 00:02:38,280
choose Error, Info, None or Warning.

57
00:02:40,016 --> 00:02:42,016
Back in Unity we can now see that

58
00:02:42,016 --> 00:02:44,016
the HelpBox appears in our inspector

59
00:02:44,016 --> 00:02:46,739
along with all of our other script fields.
